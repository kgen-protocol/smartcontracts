/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC2771Forwarder,
  ERC2771ForwarderInterface,
} from "../../../../@openzeppelin/contracts/metatx/ERC2771Forwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "deadline",
        type: "uint48",
      },
    ],
    name: "ERC2771ForwarderExpiredRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "ERC2771ForwarderInvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "ERC2771ForwarderMismatchedValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "ERC2771UntrustfulTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ExecutedForwardRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001428380380620014288339810160408190526200003591620001cc565b6040805180820190915260018152603160f81b602082015281906200005c8260006200010b565b610120526200006d8160016200010b565b61014052815160208084019190912060e052815190820120610100524660a052620000fb60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200043b565b60006020835110156200012b57620001238362000144565b90506200013e565b8162000138848262000315565b5060ff90505b92915050565b600080829050601f815111156200017b578260405163305a27a960e01b8152600401620001729190620003e1565b60405180910390fd5b8051620001888262000416565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001c3578181015183820152602001620001a9565b50506000910152565b600060208284031215620001df57600080fd5b81516001600160401b0380821115620001f757600080fd5b818401915084601f8301126200020c57600080fd5b81518181111562000221576200022162000190565b604051601f8201601f19908116603f011681019083821181831017156200024c576200024c62000190565b816040528281528760208487010111156200026657600080fd5b62000279836020830160208801620001a6565b979650505050505050565b600181811c908216806200029957607f821691505b602082108103620002ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000310576000816000526020600020601f850160051c81016020861015620002eb5750805b601f850160051c820191505b818110156200030c57828155600101620002f7565b5050505b505050565b81516001600160401b0381111562000331576200033162000190565b620003498162000342845462000284565b84620002c0565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030c565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000402816040850160208701620001a6565b601f01601f19169190910160400192915050565b80516020808301519190811015620002ba5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610f926200049660003960006103b00152600061037e01526000610ac601526000610a9e015260006109f901526000610a2301526000610a4d0152610f926000f3fe60806040526004361061004a5760003560e01c806319d8d38c1461004f5780637ecebe001461008457806384b0196e146100c8578063ccf96b4a146100f0578063df905caf14610105575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610c0e565b610118565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100ba61009f366004610c65565b6001600160a01b031660009081526002602052604090205490565b60405190815260200161007b565b3480156100d457600080fd5b506100dd61014a565b60405161007b9796959493929190610cc8565b6101036100fe366004610d61565b610190565b005b610103610113366004610c0e565b610297565b600080600080610127856102f2565b509250925092508280156101385750815b80156101415750805b95945050505050565b60006060806000806000606061015e610377565b6101666103a9565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6001600160a01b03811615600080805b85811015610250578686828181106101ba576101ba610de7565b90506020028101906101cc9190610dfd565b6101da906040013584610e1d565b9250600061020b8888848181106101f3576101f3610de7565b90506020028101906102059190610dfd565b866103d6565b9050806102475787878381811061022457610224610de7565b90506020028101906102369190610dfd565b610244906040013584610e1d565b92505b506001016101a0565b5034821461027f576040516370647f7960e01b8152600481018390523460248201526044015b60405180910390fd5b801561028f5761028f84826105b9565b505050505050565b806040013534146102c757604080516370647f7960e01b8152908201356004820152346024820152604401610276565b6102d28160016103d6565b6102ef5760405163d6bda27560e01b815260040160405180910390fd5b50565b6000806000806000806103048761064f565b909250905061032161031c6040890160208a01610c65565b6107c4565b4261033260a08a0160808b01610e3e565b65ffffffffffff161015838015610366575061035160208a018a610c65565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b60606103a47f00000000000000000000000000000000000000000000000000000000000000006000610841565b905090565b60606103a47f00000000000000000000000000000000000000000000000000000000000000006001610841565b60008060008060006103e7876102f2565b935093509350935085156104ad57836104355761040a6040880160208901610c65565b60405163d2650cd160e01b81526001600160a01b039091166004820152306024820152604401610276565b8261046e5761044a60a0880160808901610e3e565b604051634a777ac560e11b815265ffffffffffff9091166004820152602401610276565b816104ad57806104816020890189610c65565b604051636422d02b60e11b81526001600160a01b03928316600482015291166024820152604401610276565b8380156104b75750815b80156104c05750825b156105af576001600160a01b03811660009081526002602052604081208054600181019091559050606088013560006104ff60408b0160208c01610c65565b905060408a0135600061051560a08d018d610e66565b61052260208f018f610c65565b60405160200161053493929190610eb4565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610563818e6108ee565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b804710156105e35760405163cf47918160e01b815247600482015260248101829052604401610276565b600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610631576040519150601f19603f3d011682016040523d82523d6000602084013e610636565b606091505b509150915081610649576106498161090a565b50505050565b600080808061079e61066460c0870187610e66565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061079892507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac91506106cc905060208a018a610c65565b6106dc60408b0160208c01610c65565b60408b013560608c01356106f661009f60208f018f610c65565b8d60800160208101906107099190610e3e565b8e8060a001906107199190610e66565b604051610727929190610eda565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610933565b90610960565b50909250905060008160038111156107b8576107b8610eea565b14959194509092505050565b604051306024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b031663572b6c0560e01b17815282519293506000928392839290918391895afa92503d9150600051905082801561082b575060208210155b80156108375750600081115b9695505050505050565b606060ff831461085b57610854836109ad565b90506108e8565b81805461086790610f00565b80601f016020809104026020016040519081016040528092919081815260200182805461089390610f00565b80156108e05780601f106108b5576101008083540402835291602001916108e0565b820191906000526020600020905b8154815290600101906020018083116108c357829003601f168201915b505050505090505b92915050565b6108fd603f6060830135610f3a565b82101561090657fe5b5050565b80511561091a5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b60006108e86109406109ec565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000835160410361099a5760208401516040850151606086015160001a61098c88828585610b17565b9550955095505050506109a6565b50508151600091506002905b9250925092565b606060006109ba83610be6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610a4557507f000000000000000000000000000000000000000000000000000000000000000046145b15610a6f57507f000000000000000000000000000000000000000000000000000000000000000090565b6103a4604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610b525750600091506003905082610bdc565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ba6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bd257506000925060019150829050610bdc565b9250600091508190505b9450945094915050565b600060ff8216601f8111156108e857604051632cd44ac360e21b815260040160405180910390fd5b600060208284031215610c2057600080fd5b813567ffffffffffffffff811115610c3757600080fd5b820160e08185031215610c4957600080fd5b9392505050565b6001600160a01b03811681146102ef57600080fd5b600060208284031215610c7757600080fd5b8135610c4981610c50565b6000815180845260005b81811015610ca857602081850181015186830182015201610c8c565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e06020840152610ce960e084018a610c82565b8381036040850152610cfb818a610c82565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610d4f57835183529284019291840191600101610d33565b50909c9b505050505050505050505050565b600080600060408486031215610d7657600080fd5b833567ffffffffffffffff80821115610d8e57600080fd5b818601915086601f830112610da257600080fd5b813581811115610db157600080fd5b8760208260051b8501011115610dc657600080fd5b60209283019550935050840135610ddc81610c50565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823560de19833603018112610e1357600080fd5b9190910192915050565b808201808211156108e857634e487b7160e01b600052601160045260246000fd5b600060208284031215610e5057600080fd5b813565ffffffffffff81168114610c4957600080fd5b6000808335601e19843603018112610e7d57600080fd5b83018035915067ffffffffffffffff821115610e9857600080fd5b602001915036819003821315610ead57600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610f1457607f821691505b602082108103610f3457634e487b7160e01b600052602260045260246000fd5b50919050565b600082610f5757634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208393223883ec04c3f0f48c2662b079453ba6600bd34ca11a73998a26511397af64736f6c63430008160033";

type ERC2771ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2771ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2771Forwarder__factory extends ContractFactory {
  constructor(...args: ERC2771ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, overrides || {});
  }
  override deploy(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, overrides || {}) as Promise<
      ERC2771Forwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC2771Forwarder__factory {
    return super.connect(runner) as ERC2771Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2771ForwarderInterface {
    return new Interface(_abi) as ERC2771ForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC2771Forwarder {
    return new Contract(address, _abi, runner) as unknown as ERC2771Forwarder;
  }
}
