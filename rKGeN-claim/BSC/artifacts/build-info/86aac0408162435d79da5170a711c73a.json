{"id":"86aac0408162435d79da5170a711c73a","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\";\nimport {AccessControlUpgradeable} from \"../AccessControlUpgradeable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerable, AccessControlUpgradeable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable\n    struct AccessControlEnumerableStorage {\n        mapping(bytes32 role => EnumerableSet.AddressSet) _roleMembers;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControlEnumerable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlEnumerableStorageLocation = 0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000;\n\n    function _getAccessControlEnumerableStorage() private pure returns (AccessControlEnumerableStorage storage $) {\n        assembly {\n            $.slot := AccessControlEnumerableStorageLocation\n        }\n    }\n\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            $._roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            $._roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\nimport {Arrays} from \"../Arrays.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n * - Set can be cleared (all elements removed) in O(n).\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function _clear(Set storage set) private {\n        uint256 len = _length(set);\n        for (uint256 i = 0; i < len; ++i) {\n            delete set._positions[set._values[i]];\n        }\n        Arrays.unsafeSetLength(set._values, 0);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(Bytes32Set storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(AddressSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(UintSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\nabstract contract ERC2771ContextUpgradeable is\n    Initializable,\n    ContextUpgradeable\n{\n    function isTrustedForwarder(\n        address forwarder\n    ) public view virtual returns (bool) {}\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (\n            isTrustedForwarder(msg.sender) &&\n            calldataLength >= contextSuffixLength\n        ) {\n            return\n                address(\n                    bytes20(msg.data[calldataLength - contextSuffixLength:])\n                );\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData()\n        internal\n        view\n        virtual\n        override\n        returns (bytes calldata)\n    {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (\n            isTrustedForwarder(msg.sender) &&\n            calldataLength >= contextSuffixLength\n        ) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength()\n        internal\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return 20;\n    }\n}\n"},"contracts/rkgen_airdrop.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract RKGENAirdrop is Initializable, AccessControlUpgradeable, ReentrancyGuard {\n    using ECDSA for bytes32;\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    address public rewardSigner;\n    uint256 public chainId;\n    address public nominatedAdmin;\n\n    // user => token => nonce (per-user, per-token nonce tracking like Move implementation)\n    mapping(address => mapping(address => uint256)) public nonces;\n\n    // Events for better tracking and debugging\n    event Claimed(address indexed user, address indexed token, uint256 amount, uint256 nonce);\n    event SignerUpdated(address indexed newSigner);\n    event AdminNominated(address indexed nominatedAdmin);\n    event AdminUpdated(address indexed newAdmin);\n    event TokensWithdrawn(address indexed admin, address indexed token, uint256 amount);\n    event SignatureVerified(bytes signature, bool result);\n\n    struct SignedMessage {\n        address user;\n        address token;\n        uint256 amount;\n        uint256 nonce;\n        uint256 chainId;\n    }\n\n    // Custom errors for better gas efficiency and error handling\n    error InvalidSigner();\n    error InvalidNonce();\n    error InvalidSignature();\n    error InvalidAdmin();\n    error NoNominatedAdmin();\n    error AlreadyExists();\n    error NotAdmin();\n\n    function initialize(address admin, address signer, uint256 _chainId) external initializer {\n        __AccessControl_init();\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(ADMIN_ROLE, admin);\n        rewardSigner = signer;\n        chainId = _chainId;\n    }\n\n    function updateSigner(address newSigner) external onlyRole(ADMIN_ROLE) {\n        if (newSigner == address(0)) revert InvalidSigner();\n        if (rewardSigner == newSigner) revert AlreadyExists();\n        \n        rewardSigner = newSigner;\n        emit SignerUpdated(newSigner);\n    }\n\n    // Admin transfer mechanism similar to Move implementation\n    function nominateAdmin(address newAdmin) external onlyRole(ADMIN_ROLE) {\n        if (newAdmin == address(0)) revert InvalidAdmin();\n        if (newAdmin == msg.sender) revert AlreadyExists();\n        \n        nominatedAdmin = newAdmin;\n        emit AdminNominated(newAdmin);\n    }\n\n    function acceptAdminRole() external {\n        if (nominatedAdmin == address(0)) revert NoNominatedAdmin();\n        if (msg.sender != nominatedAdmin) revert InvalidAdmin();\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        \n     \n        nominatedAdmin = address(0);\n        \n        emit AdminUpdated(msg.sender);\n    }\n\n    // Token withdrawal function for admin\n    function withdrawTokens(address token, uint256 amount) external onlyRole(ADMIN_ROLE) {\n        IERC20(token).transfer(msg.sender, amount);\n        emit TokensWithdrawn(msg.sender, token, amount);\n    }\n\n    // Get nonce for a specific user and token (view function)\n    function getNonce(address user, address token) public view returns (uint256) {\n        return nonces[user][token];\n    }\n\n    function claim(\n        address token,\n        uint256 amount,\n        uint256 nonce,\n        bytes calldata signature\n    ) external nonReentrant{\n        // Check if nonce matches current nonce for this user and token\n        if (nonce != nonces[_msgSender()][token]) revert InvalidNonce();\n\n        // Create message hash similar to Move implementation\n        bytes32 hash = keccak256(abi.encodePacked(_msgSender(), token, amount, nonce, chainId));\n        bytes32 messageHash = MessageHashUtils.toEthSignedMessageHash(hash);\n        address recovered = ECDSA.recover(messageHash, signature);\n\n        // Verify signature and emit result for debugging\n        bool isValid = recovered == rewardSigner;\n        emit SignatureVerified(signature, isValid);\n        \n        if (!isValid) revert InvalidSignature();\n\n        // Increment nonce for this user and token\n        nonces[_msgSender()][token] += 1;\n\n        // Transfer tokens to claimer\n        IERC20(token).transfer(_msgSender(), amount);\n        emit Claimed(_msgSender(), token, amount, nonce);\n    }\n\n    // View function to get nominated admin\n    function getNominatedAdmin() external view returns (address) {\n        return nominatedAdmin;\n    }\n\n    // View function to get reward signer\n    function getRewardSigner() external view returns (address) {\n        return rewardSigner;\n    }\n\n    // View function to get chain ID\n    function getChainId() external view returns (uint256) {\n        return chainId;\n    }\n}\n"},"contracts/rKGEN.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"./ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol\";\n\ncontract rKGEN is \n    Initializable,\n    ERC20Upgradeable,\n    AccessControlEnumerableUpgradeable,\n    ReentrancyGuardUpgradeable,\n    ERC2771ContextUpgradeable\n{\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURN_VAULT_ROLE = keccak256(\"BURN_VAULT_ROLE\");\n    bytes32 public constant TREASURY_ROLE = keccak256(\"TREASURY_ROLE\");\n    bytes32 public constant WHITELIST_SENDER_ROLE = keccak256(\"WHITELIST_SENDER_ROLE\");\n    bytes32 public constant WHITELIST_RECEIVER_ROLE = keccak256(\"WHITELIST_RECEIVER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    address public nominatedAdmin;\n    mapping(address => bool) public frozenAccounts;\n    mapping(address => bool) public trustedForwarder;\n\n    \n    event MintedToTreasury(address indexed treasury, uint256 amount);\n    event UpdatedBurnVault(string role, address indexed updatedAddress);\n    event UpdatedAdmin(string role, address indexed addedAdmin);\n    event NominatedAdminEvent(string role, address indexed nominatedAdmin);\n    event UpdatedMinter(string role, address indexed addedUser);\n    event AddedTreasuryAddress(string msg, address indexed addedAddress);\n    event RemovedTreasuryAddress(string msg, address indexed removedAddress);\n    event AddedSenderAddress(string msg, address indexed addedAddress);\n    event RemovedSenderAddress(string msg, address indexed removedAddress);\n    event AddedReceiverAddress(string msg, address indexed addedAddress);\n    event RemovedReceiverAddress(string msg, address indexed removedAddress);\n    event AccountFrozen(address indexed account);\n    event AccountUnfrozen(address indexed account);\n\n    error AlreadyExists();\n    error NotTreasuryAddress();\n    error NotWhitelistSender();\n    error NotWhitelistReceiver();\n    error OnlyAdmin();\n    error NotAdmin();\n    error CannotDeleteTreasuryAddress();\n    error InvalidReceiverOrSender();\n    error NotBurnVault();\n    error NotValidAddress();\n    error NotOwner();\n    error NoPending();\n    error InvalidAmount();\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialAdmin) public initializer {\n        __ERC20_init(\"rKGEN\", \"rKGEN\");\n        __AccessControlEnumerable_init();\n        __ReentrancyGuard_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, initialAdmin);\n        _grantRole(MINTER_ROLE, initialAdmin);\n        _grantRole(BURN_VAULT_ROLE, initialAdmin);\n        _grantRole(UPGRADER_ROLE, initialAdmin);\n        \n        // Mint initial supply to the admin\n        _mint(initialAdmin, 400_000_000 * 10**decimals());\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 8;\n    }\n\n    /**\n     * @dev Modifier to check if the amount is valid\n     */\n    modifier validAmount(uint256 amount) {\n        if (amount == 0) revert InvalidAmount();\n        _;\n    }\n\n    /**\n     * @dev Modifier to check if the address is valid\n     */\n    modifier validAddress(address addr) {\n        if (addr == address(0)) revert NotValidAddress();\n        _;\n    }\n\n    /**\n     * @dev Modifier to check if the account is not frozen\n     */\n    modifier notFrozen(address account) {\n        require(!frozenAccounts[account], \"Account is frozen\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to check whitelist status\n     */\n    modifier whitelistedTransfer(address from, address to) {\n        require(to != from, \"Cannot transfer to self\");\n        require(\n            hasRole(WHITELIST_SENDER_ROLE, from) ||  \n            hasRole(WHITELIST_RECEIVER_ROLE, to),\n            \"Invalid sender or receiver\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Override transfer function to implement whitelist restrictions\n     */\n    function transfer(address to, uint256 amount) \n        public \n        override \n        validAmount(amount)\n        validAddress(to)\n        notFrozen(msg.sender)\n        notFrozen(to)\n        whitelistedTransfer(msg.sender, to)\n        returns (bool) \n    {\n        return super.transfer(to, amount);\n    }\n\n    /**\n     * @dev Override transferFrom function to implement whitelist restrictions\n     */\n    function transferFrom(address from, address to, uint256 amount)\n        public\n        override\n        validAmount(amount)\n        validAddress(to)\n        notFrozen(from)\n        notFrozen(to)\n        whitelistedTransfer(from, to)\n        returns (bool)\n    {\n        return super.transferFrom(from, to, amount);\n    }\n\n    /**\n     * @dev Mint tokens to a treasury address\n     */\n    function mint(address to, uint256 amount)\n        external\n        onlyRole(MINTER_ROLE)\n        validAmount(amount)\n        validAddress(to)\n    {\n        require(hasRole(TREASURY_ROLE, to), \"Not a treasury address\");\n        _mint(to, amount);\n        emit MintedToTreasury(to, amount);\n    }\n\n    /**\n     * @dev Burn tokens from the burn vault\n     */\n    function burn(address from, uint256 amount)\n        external\n        onlyRole(BURN_VAULT_ROLE)\n        validAmount(amount)\n        validAddress(from)\n    {\n        _burn(from, amount);\n    }\n\n    /**\n     * @dev Freeze an account\n     */\n    function freezeAccount(address account)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(account)\n    {\n        frozenAccounts[account] = true;\n        emit AccountFrozen(account);\n    }\n\n    /**\n     * @dev Unfreeze an account\n     */\n    function unfreezeAccount(address account)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(account)\n    {\n        frozenAccounts[account] = false;\n        emit AccountUnfrozen(account);\n    }\n\n    /**\n     * @dev Nominate a new admin\n     */\n    function nominateAdmin(address newAdmin)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newAdmin)\n    {\n        require(newAdmin != msg.sender, \"Cannot nominate self\");\n        nominatedAdmin = newAdmin;\n        emit NominatedAdminEvent(\"New Admin Nominated, Now new admin need to accept the role\", newAdmin);\n    }\n\n    /**\n     * @dev Accept admin role\n     */\n    function acceptAdminRole()\n        external\n        validAddress(msg.sender)\n    {\n        require(nominatedAdmin == msg.sender, \"Not nominated\");\n        require(nominatedAdmin != address(0), \"No pending nomination\");\n        \n        // Revoke the current admin role\n        address oldAdmin = getRoleMember(DEFAULT_ADMIN_ROLE, 0);\n        if (oldAdmin != address(0)) {\n            _revokeRole(DEFAULT_ADMIN_ROLE, oldAdmin);\n        }\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        nominatedAdmin = address(0);\n        emit UpdatedAdmin(\"New Admin Added\", msg.sender);\n    }\n\n    /**\n     * @dev Update minter address\n     */\n    function updateMinter(address newMinter)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newMinter)\n    {\n        require(!hasRole(MINTER_ROLE, newMinter), \"Already minter\");\n        \n        // Revoke the current minter role\n        address oldMinter = getRoleMember(MINTER_ROLE, 0);\n        if (oldMinter != address(0)) {\n            _revokeRole(MINTER_ROLE, oldMinter);\n        }\n        \n        _grantRole(MINTER_ROLE, newMinter);\n        emit UpdatedMinter(\"New Minter\", newMinter);\n    }\n\n    /**\n     * @dev Update burn vault address\n     */\n    function updateBurnVault(address newBurnVault)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newBurnVault)\n    {\n        require(!hasRole(BURN_VAULT_ROLE, newBurnVault), \"Already burn vault\");\n        \n        // Revoke the current burn vault role\n        address oldBurnVault = getRoleMember(BURN_VAULT_ROLE, 0);\n        if (oldBurnVault != address(0)) {\n            _revokeRole(BURN_VAULT_ROLE, oldBurnVault);\n        }\n        \n        _grantRole(BURN_VAULT_ROLE, newBurnVault);\n        emit UpdatedBurnVault(\"Burnable Address Updated\", newBurnVault);\n    }\n\n    /**\n     * @dev Add treasury address\n     */\n    function addTreasuryAddress(address newAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newAddress)\n    {\n        require(!hasRole(TREASURY_ROLE, newAddress), \"Already treasury\");\n        \n        _grantRole(TREASURY_ROLE, newAddress);\n        \n        // If not already a whitelist sender, add as one\n        if (!hasRole(WHITELIST_SENDER_ROLE, newAddress)) {\n            _grantRole(WHITELIST_SENDER_ROLE, newAddress);\n            emit AddedSenderAddress(\"New Sender Address Whitelisted\", newAddress);\n        }\n        \n        emit AddedTreasuryAddress(\"New Treasury Address Added\", newAddress);\n    }\n\n    /**\n     * @dev Remove treasury address\n     */\n    function removeTreasuryAddress(address treasuryAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(treasuryAddress)\n    {\n        require(hasRole(TREASURY_ROLE, treasuryAddress), \"Not treasury\");\n        \n        _revokeRole(TREASURY_ROLE, treasuryAddress);\n        emit RemovedTreasuryAddress(\"Treasury Address Removed\", treasuryAddress);\n    }\n\n    /**\n     * @dev Add whitelist sender\n     */\n    function addWhitelistSender(address newAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newAddress)\n    {\n        require(!hasRole(WHITELIST_SENDER_ROLE, newAddress), \"Already whitelisted sender\");\n        \n        _grantRole(WHITELIST_SENDER_ROLE, newAddress);\n        emit AddedSenderAddress(\"New Sender Address Whitelisted\", newAddress);\n    }\n\n    /**\n     * @dev Remove whitelist sender\n     */\n    function removeWhitelistSender(address senderAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(senderAddress)\n    {\n        require(hasRole(WHITELIST_SENDER_ROLE, senderAddress), \"Not whitelisted sender\");\n        require(!hasRole(TREASURY_ROLE, senderAddress), \"Cannot remove treasury\");\n        \n        _revokeRole(WHITELIST_SENDER_ROLE, senderAddress);\n        emit RemovedSenderAddress(\"Sender Address Removed From Whitelist\", senderAddress);\n    }\n\n    /**\n     * @dev Add whitelist receiver\n     */\n    function addWhitelistReceiver(address newAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(newAddress)\n    {\n        require(!hasRole(WHITELIST_RECEIVER_ROLE, newAddress), \"Already whitelisted receiver\");\n        \n        _grantRole(WHITELIST_RECEIVER_ROLE, newAddress);\n        emit AddedReceiverAddress(\"New Receiver Address Whitelisted\", newAddress);\n    }\n\n    /**\n     * @dev Remove whitelist receiver\n     */\n    function removeWhitelistReceiver(address receiverAddress)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n        validAddress(receiverAddress)\n    {\n        require(hasRole(WHITELIST_RECEIVER_ROLE, receiverAddress), \"Not whitelisted receiver\");\n        \n        _revokeRole(WHITELIST_RECEIVER_ROLE, receiverAddress);\n        emit RemovedReceiverAddress(\"Receiver Address Removed From Whitelist\", receiverAddress);\n    }\n\n\n\n    function setTrustedForwarder(\n        address _trustedForwarder,\n        bool _isTrusted\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        trustedForwarder[_trustedForwarder] = _isTrusted;\n    }\n\n    function isTrustedForwarder(\n        address forwarder\n    ) public view override returns (bool) {\n        return trustedForwarder[forwarder];\n    }\n\n    function _msgSender()\n        internal\n        view\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\n        returns (address sender)\n    {\n        return ERC2771ContextUpgradeable._msgSender();\n    }\n\n    function _msgData()\n        internal\n        view\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\n        returns (bytes calldata)\n    {\n        return ERC2771ContextUpgradeable._msgData();\n    }\n\n    function _contextSuffixLength()\n        internal\n        view\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\n        returns (uint256)\n    {\n        return ERC2771ContextUpgradeable._contextSuffixLength();\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[1517],"ERC165Upgradeable":[1686],"IAccessControl":[1769],"Initializable":[854]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1770,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1518,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1687,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":855,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1686,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1686,5169,1769,1517,854],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1685],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1769_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1769_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1769","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1685,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1736],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1744],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1752],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1760],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1768],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7978:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8017:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7988:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7988:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7988:20:0"},"referencedDeclaration":35,"src":"7988:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8021:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8069:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8075:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8061:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8239:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8253:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8057:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8085:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8099:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8099:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8108:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8099:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8099:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8175:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8184:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"8157:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8152:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8211:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7923:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7937:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7929:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:0"},"scope":362,"src":"7894:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6194:0","usedErrors":[603,606,1696,1699],"usedEvents":[611,1708,1717,1726]}],"src":"108:8177:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[586],"AccessControlUpgradeable":[362],"EnumerableSet":[9396],"IAccessControlEnumerable":[1795],"Initializable":[854]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:1"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1796,"src":"155:112:1","symbolAliases":[{"foreign":{"id":365,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"163:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"../AccessControlUpgradeable.sol","id":368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":363,"src":"268:73:1","symbolAliases":[{"foreign":{"id":367,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"276:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":9397,"src":"342:86:1","symbolAliases":[{"foreign":{"id":369,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"350:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":855,"src":"429:66:1","symbolAliases":[{"foreign":{"id":371,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"437:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":374,"name":"Initializable","nameLocations":["648:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"648:13:1"},"id":375,"nodeType":"InheritanceSpecifier","src":"648:13:1"},{"baseName":{"id":376,"name":"IAccessControlEnumerable","nameLocations":["663:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":1795,"src":"663:24:1"},"id":377,"nodeType":"InheritanceSpecifier","src":"663:24:1"},{"baseName":{"id":378,"name":"AccessControlUpgradeable","nameLocations":["689:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"689:24:1"},"id":379,"nodeType":"InheritanceSpecifier","src":"689:24:1"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"497:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,362,1686,5169,1795,1769,1517,854],"name":"AccessControlEnumerableUpgradeable","nameLocation":"610:34:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":383,"libraryName":{"id":380,"name":"EnumerableSet","nameLocations":["726:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":9396,"src":"726:13:1"},"nodeType":"UsingForDirective","src":"720:49:1","typeName":{"id":382,"nodeType":"UserDefinedTypeName","pathNode":{"id":381,"name":"EnumerableSet.AddressSet","nameLocations":["744:13:1","758:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"744:24:1"},"referencedDeclaration":9083,"src":"744:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"775:81:1","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable"},"id":390,"members":[{"constant":false,"id":389,"mutability":"mutable","name":"_roleMembers","nameLocation":"959:12:1","nodeType":"VariableDeclaration","scope":390,"src":"909:62:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":388,"keyName":"role","keyNameLocation":"925:4:1","keyType":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"917:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"909:49:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"EnumerableSet.AddressSet","nameLocations":["933:13:1","947:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"933:24:1"},"referencedDeclaration":9083,"src":"933:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"}],"name":"AccessControlEnumerableStorage","nameLocation":"868:30:1","nodeType":"StructDefinition","scope":586,"src":"861:117:1","visibility":"public"},{"constant":true,"id":393,"mutability":"constant","name":"AccessControlEnumerableStorageLocation","nameLocation":"1136:38:1","nodeType":"VariableDeclaration","scope":586,"src":"1111:132:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1111:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863316636666532343632316365383165633538323763616630323533636164623734373039623036313633306536623535653832333731373035393332303030","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1177:66:1","typeDescriptions":{"typeIdentifier":"t_rational_87732778178968556439956192144688703237987636878447527990685272173340959907840_by_1","typeString":"int_const 8773...(69 digits omitted)...7840"},"value":"0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000"},"visibility":"private"},{"body":{"id":400,"nodeType":"Block","src":"1360:97:1","statements":[{"AST":{"nativeSrc":"1379:72:1","nodeType":"YulBlock","src":"1379:72:1","statements":[{"nativeSrc":"1393:48:1","nodeType":"YulAssignment","src":"1393:48:1","value":{"name":"AccessControlEnumerableStorageLocation","nativeSrc":"1403:38:1","nodeType":"YulIdentifier","src":"1403:38:1"},"variableNames":[{"name":"$.slot","nativeSrc":"1393:6:1","nodeType":"YulIdentifier","src":"1393:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":397,"isOffset":false,"isSlot":true,"src":"1393:6:1","suffix":"slot","valueSize":1},{"declaration":393,"isOffset":false,"isSlot":false,"src":"1403:38:1","valueSize":1}],"id":399,"nodeType":"InlineAssembly","src":"1370:81:1"}]},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlEnumerableStorage","nameLocation":"1259:34:1","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"1293:2:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"$","nameLocation":"1357:1:1","nodeType":"VariableDeclaration","scope":401,"src":"1318:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"AccessControlEnumerableStorage","nameLocations":["1318:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"1318:30:1"},"referencedDeclaration":390,"src":"1318:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"src":"1317:42:1"},"scope":586,"src":"1250:207:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1531:7:1","statements":[]},"id":407,"implemented":true,"kind":"function","modifiers":[{"id":404,"kind":"modifierInvocation","modifierName":{"id":403,"name":"onlyInitializing","nameLocations":["1514:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1514:16:1"},"nodeType":"ModifierInvocation","src":"1514:16:1"}],"name":"__AccessControlEnumerable_init","nameLocation":"1472:30:1","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"1502:2:1"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"1531:0:1"},"scope":586,"src":"1463:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"1622:7:1","statements":[]},"id":413,"implemented":true,"kind":"function","modifiers":[{"id":410,"kind":"modifierInvocation","modifierName":{"id":409,"name":"onlyInitializing","nameLocations":["1605:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1605:16:1"},"nodeType":"ModifierInvocation","src":"1605:16:1"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"1553:40:1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1593:2:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"1622:0:1"},"scope":586,"src":"1544:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[91],"body":{"id":434,"nodeType":"Block","src":"1786:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1803:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":424,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1823:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1795_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1795_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1818:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1795","typeString":"type(contract IAccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1849:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1818:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1803:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":430,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1888:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":428,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1864:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1870:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"1864:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1803:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":433,"nodeType":"Return","src":"1796:104:1"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"1634:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1704:17:1","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[],"src":"1762:8:1"},"parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"interfaceId","nameLocation":"1729:11:1","nodeType":"VariableDeclaration","scope":435,"src":"1722:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":415,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1722:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1721:20:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1780:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1780:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1779:6:1"},"scope":586,"src":"1695:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1786],"body":{"id":459,"nodeType":"Block","src":"2582:143:1","statements":[{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"$","nameLocation":"2631:1:1","nodeType":"VariableDeclaration","scope":459,"src":"2592:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":446,"nodeType":"UserDefinedTypeName","pathNode":{"id":445,"name":"AccessControlEnumerableStorage","nameLocations":["2592:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2592:30:1"},"referencedDeclaration":390,"src":"2592:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":450,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":448,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2635:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2592:79:1"},{"expression":{"arguments":[{"id":456,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2712:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"expression":{"id":451,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2688:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2690:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"2688:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":454,"indexExpression":{"id":453,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2703:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2688:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2709:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":9219,"src":"2688:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9083_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$9083_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":444,"id":458,"nodeType":"Return","src":"2681:37:1"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1913:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"2501:13:1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"role","nameLocation":"2523:4:1","nodeType":"VariableDeclaration","scope":460,"src":"2515:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2515:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"index","nameLocation":"2537:5:1","nodeType":"VariableDeclaration","scope":460,"src":"2529:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:29:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"2573:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:9:1"},"scope":586,"src":"2492:233:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1794],"body":{"id":481,"nodeType":"Block","src":"2973:142:1","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"$","nameLocation":"3022:1:1","nodeType":"VariableDeclaration","scope":481,"src":"2983:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"AccessControlEnumerableStorage","nameLocations":["2983:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2983:30:1"},"referencedDeclaration":390,"src":"2983:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3026:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2983:79:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":474,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3079:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3079:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":477,"indexExpression":{"id":476,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3094:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3100:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":9192,"src":"3079:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9083_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$9083_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":480,"nodeType":"Return","src":"3072:36:1"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"2731:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2902:18:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"role","nameLocation":"2929:4:1","nodeType":"VariableDeclaration","scope":482,"src":"2921:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2920:14:1"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"2964:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2963:9:1"},"scope":586,"src":"2893:222:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"3743:142:1","statements":[{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"$","nameLocation":"3792:1:1","nodeType":"VariableDeclaration","scope":504,"src":"3753:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":492,"nodeType":"UserDefinedTypeName","pathNode":{"id":491,"name":"AccessControlEnumerableStorage","nameLocations":["3753:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"3753:30:1"},"referencedDeclaration":390,"src":"3753:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":496,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":494,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3796:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3796:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3753:79:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":497,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3849:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3851:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3849:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":500,"indexExpression":{"id":499,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3864:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3849:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:1","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":9249,"src":"3849:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$9083_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$9083_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3849:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":490,"id":503,"nodeType":"Return","src":"3842:36:1"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3121:532:1","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"3667:14:1","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"role","nameLocation":"3690:4:1","nodeType":"VariableDeclaration","scope":505,"src":"3682:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3682:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3681:14:1"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":505,"src":"3725:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"nodeType":"ArrayTypeName","src":"3725:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3724:18:1"},"scope":586,"src":"3658:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[315],"body":{"id":544,"nodeType":"Block","src":"4079:256:1","statements":[{"assignments":[518],"declarations":[{"constant":false,"id":518,"mutability":"mutable","name":"$","nameLocation":"4128:1:1","nodeType":"VariableDeclaration","scope":544,"src":"4089:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":517,"nodeType":"UserDefinedTypeName","pathNode":{"id":516,"name":"AccessControlEnumerableStorage","nameLocations":["4089:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"4089:30:1"},"referencedDeclaration":390,"src":"4089:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":521,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4132:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4089:79:1"},{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"granted","nameLocation":"4183:7:1","nodeType":"VariableDeclaration","scope":544,"src":"4178:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":522,"name":"bool","nodeType":"ElementaryTypeName","src":"4178:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":529,"initialValue":{"arguments":[{"id":526,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4210:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4216:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":524,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4193:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4199:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":315,"src":"4193:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4193:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4178:46:1"},{"condition":{"id":530,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4238:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"4234:71:1","trueBody":{"id":540,"nodeType":"Block","src":"4247:58:1","statements":[{"expression":{"arguments":[{"id":537,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4286:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":531,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4261:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4263:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"4261:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":535,"indexExpression":{"id":533,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4276:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4261:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4282:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9110,"src":"4261:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$9083_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$9083_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4261:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"nodeType":"ExpressionStatement","src":"4261:33:1"}]}},{"expression":{"id":542,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4321:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":515,"id":543,"nodeType":"Return","src":"4314:14:1"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3891:91:1","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"3996:10:1","nodeType":"FunctionDefinition","overrides":{"id":512,"nodeType":"OverrideSpecifier","overrides":[],"src":"4055:8:1"},"parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"role","nameLocation":"4015:4:1","nodeType":"VariableDeclaration","scope":545,"src":"4007:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4007:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"account","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":545,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:31:1"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"4073:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":513,"name":"bool","nodeType":"ElementaryTypeName","src":"4073:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4072:6:1"},"scope":586,"src":"3987:348:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[361],"body":{"id":584,"nodeType":"Block","src":"4531:260:1","statements":[{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"$","nameLocation":"4580:1:1","nodeType":"VariableDeclaration","scope":584,"src":"4541:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":557,"nodeType":"UserDefinedTypeName","pathNode":{"id":556,"name":"AccessControlEnumerableStorage","nameLocations":["4541:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"4541:30:1"},"referencedDeclaration":390,"src":"4541:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4584:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4541:79:1"},{"assignments":[563],"declarations":[{"constant":false,"id":563,"mutability":"mutable","name":"revoked","nameLocation":"4635:7:1","nodeType":"VariableDeclaration","scope":584,"src":"4630:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[{"id":566,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"4663:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4669:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":564,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4645:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$586_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4651:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":361,"src":"4645:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4630:47:1"},{"condition":{"id":570,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4691:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":581,"nodeType":"IfStatement","src":"4687:74:1","trueBody":{"id":580,"nodeType":"Block","src":"4700:61:1","statements":[{"expression":{"arguments":[{"id":577,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4742:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":571,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4714:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4716:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"4714:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$9083_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":575,"indexExpression":{"id":573,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"4729:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4714:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4735:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":9137,"src":"4714:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$9083_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$9083_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4714:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"ExpressionStatement","src":"4714:36:1"}]}},{"expression":{"id":582,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4777:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":555,"id":583,"nodeType":"Return","src":"4770:14:1"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"4341:92:1","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"4447:11:1","nodeType":"FunctionDefinition","overrides":{"id":552,"nodeType":"OverrideSpecifier","overrides":[],"src":"4507:8:1"},"parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"role","nameLocation":"4467:4:1","nodeType":"VariableDeclaration","scope":585,"src":"4459:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4459:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"account","nameLocation":"4481:7:1","nodeType":"VariableDeclaration","scope":585,"src":"4473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"4473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:31:1"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"4525:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"4525:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4524:6:1"},"scope":586,"src":"4438:353:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"592:4201:1","usedErrors":[603,606,1696,1699],"usedEvents":[611,1708,1717,1726]}],"src":"129:4665:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":854,"linearizedBaseContracts":[854],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":597,"members":[{"constant":false,"id":593,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":597,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":592,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":597,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":595,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":854,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":600,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":854,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":603,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":606,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":611,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":611,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":608,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":693,"nodeType":"Block","src":"4092:1079:2","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":693,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"4158:20:2"},"referencedDeclaration":597,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":693,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":625,"initialValue":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":622,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":693,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":626,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":630,"initialValue":{"expression":{"id":628,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:2","nodeType":"VariableDeclaration","scope":693,"src":"4704:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":631,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":638,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4724:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":636,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4744:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"construction","nameLocation":"4773:12:2","nodeType":"VariableDeclaration","scope":693,"src":"4768:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":639,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":653,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4788:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":646,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$854","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$854","typeString":"contract Initializable"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:2","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:2","memberName":"code","nodeType":"MemberAccess","src":"4808:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:2","memberName":"length","nodeType":"MemberAccess","src":"4808:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:2","subExpression":{"id":654,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4854:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:2","subExpression":{"id":656,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4871:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"4849:91:2","trueBody":{"id":662,"nodeType":"Block","src":"4885:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"4906:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"RevertStatement","src":"4899:30:2"}]}},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":664,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4949:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"4949:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":669,"nodeType":"ExpressionStatement","src":"4949:18:2"},{"condition":{"id":670,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4981:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"IfStatement","src":"4977:67:2","trueBody":{"id":677,"nodeType":"Block","src":"4997:47:2","statements":[{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":671,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5011:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"5011:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"ExpressionStatement","src":"5011:22:2"}]}},{"id":679,"nodeType":"PlaceholderStatement","src":"5053:1:2"},{"condition":{"id":680,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5068:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"nodeType":"IfStatement","src":"5064:101:2","trueBody":{"id":691,"nodeType":"Block","src":"5084:81:2","statements":[{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":681,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5098:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"5098:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"ExpressionStatement","src":"5098:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":687,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5140:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"EmitStatement","src":"5135:19:2"}]}}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":694,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1102:2","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"6289:392:2","statements":[{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"$","nameLocation":"6384:1:2","nodeType":"VariableDeclaration","scope":740,"src":"6355:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"InitializableStorage","nameLocations":["6355:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"6355:20:2"},"referencedDeclaration":597,"src":"6355:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":704,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"6388:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":705,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6429:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6429:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":707,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6448:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"6448:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":709,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6466:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"6425:105:2","trueBody":{"id":715,"nodeType":"Block","src":"6475:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":712,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"6489:30:2"}]}},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":717,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6539:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"6539:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":720,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6556:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":722,"nodeType":"ExpressionStatement","src":"6539:24:2"},{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":723,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6573:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6573:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"ExpressionStatement","src":"6573:22:2"},{"id":729,"nodeType":"PlaceholderStatement","src":"6605:1:2"},{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":730,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6616:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"6616:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"ExpressionStatement","src":"6616:23:2"},{"eventCall":{"arguments":[{"id":737,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6666:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":736,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"6654:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"EmitStatement","src":"6649:25:2"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"5177:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":741,"name":"reinitializer","nameLocation":"6259:13:2","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"version","nameLocation":"6280:7:2","nodeType":"VariableDeclaration","scope":741,"src":"6273:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":696,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:2"},"src":"6250:431:2","virtual":false,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"6919:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":744,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6929:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"6929:20:2"},{"id":747,"nodeType":"PlaceholderStatement","src":"6959:1:2"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"6687:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":749,"name":"onlyInitializing","nameLocation":"6900:16:2","nodeType":"ModifierDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"6916:2:2"},"src":"6891:76:2","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7134:89:2","statements":[{"condition":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7149:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"7144:73:2","trueBody":{"id":759,"nodeType":"Block","src":"7168:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7189:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"RevertStatement","src":"7182:24:2"}]}}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"6973:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:2","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"7109:2:2"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"7134:0:2"},"scope":854,"src":"7082:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"7758:373:2","statements":[{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"$","nameLocation":"7853:1:2","nodeType":"VariableDeclaration","scope":807,"src":"7824:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"InitializableStorage","nameLocations":["7824:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"7824:20:2"},"referencedDeclaration":597,"src":"7824:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7857:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:2"},{"condition":{"expression":{"id":772,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7898:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"7898:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"7894:76:2","trueBody":{"id":777,"nodeType":"Block","src":"7915:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":774,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7936:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"RevertStatement","src":"7929:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7983:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"7983:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":782,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:2","memberName":"max","nodeType":"MemberAccess","src":"8001:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"7979:146:2","trueBody":{"id":805,"nodeType":"Block","src":"8019:106:2","statements":[{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":787,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8033:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"8033:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":791,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:2","memberName":"max","nodeType":"MemberAccess","src":"8050:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":796,"nodeType":"ExpressionStatement","src":"8033:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":799,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:2","memberName":"max","nodeType":"MemberAccess","src":"8097:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":797,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8085:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"8080:34:2"}]}}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"7229:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"7738:2:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7758:0:2"},"scope":854,"src":"7709:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"8306:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":814,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8323:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":593,"src":"8323:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":813,"id":817,"nodeType":"Return","src":"8316:46:2"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"8137:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:2","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"8272:2:2"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"8298:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":811,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:2"},"scope":854,"src":"8241:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"8541:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":825,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8558:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$597_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":596,"src":"8558:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":824,"id":828,"nodeType":"Return","src":"8551:47:2"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"8375:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:2","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"8509:2:2"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"8535:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":822,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:2"},"scope":854,"src":"8485:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":838,"nodeType":"Block","src":"8896:45:2","statements":[{"expression":{"id":836,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8913:21:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":835,"id":837,"nodeType":"Return","src":"8906:28:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"8611:203:2","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":839,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:2","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"8853:2:2"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"8887:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:2"},"scope":854,"src":"8819:122:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"9161:115:2","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"slot","nameLocation":"9179:4:2","nodeType":"VariableDeclaration","scope":852,"src":"9171:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":850,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9186:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:2"},{"AST":{"nativeSrc":"9232:38:2","nodeType":"YulBlock","src":"9232:38:2","statements":[{"nativeSrc":"9246:14:2","nodeType":"YulAssignment","src":"9246:14:2","value":{"name":"slot","nativeSrc":"9256:4:2","nodeType":"YulIdentifier","src":"9256:4:2"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:2","nodeType":"YulIdentifier","src":"9246:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":844,"isOffset":false,"isSlot":true,"src":"9246:6:2","suffix":"slot","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"9256:4:2","valueSize":1}],"id":851,"nodeType":"InlineAssembly","src":"9223:47:2"}]},"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"8947:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:2","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"9104:2:2"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"$","nameLocation":"9158:1:2","nodeType":"VariableDeclaration","scope":853,"src":"9129:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"InitializableStorage","nameLocations":["9129:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"9129:20:2"},"referencedDeclaration":597,"src":"9129:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$597_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:2"},"scope":854,"src":"9071:205:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":855,"src":"2349:6929:2","usedErrors":[603,606],"usedEvents":[611]}],"src":"113:9166:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1517],"ERC20Upgradeable":[1471],"IERC20":[2010],"IERC20Errors":[1837],"IERC20Metadata":[2036],"Initializable":[854]},"id":1472,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1472,"sourceUnit":2011,"src":"131:70:3","symbolAliases":[{"foreign":{"id":857,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1472,"sourceUnit":2037,"src":"202:97:3","symbolAliases":[{"foreign":{"id":859,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1472,"sourceUnit":1518,"src":"300:70:3","symbolAliases":[{"foreign":{"id":861,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1472,"sourceUnit":1933,"src":"371:83:3","symbolAliases":[{"foreign":{"id":863,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1472,"sourceUnit":855,"src":"455:66:3","symbolAliases":[{"foreign":{"id":865,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":868,"name":"Initializable","nameLocations":["1319:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1319:13:3"},"id":869,"nodeType":"InheritanceSpecifier","src":"1319:13:3"},{"baseName":{"id":870,"name":"ContextUpgradeable","nameLocations":["1334:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"1334:18:3"},"id":871,"nodeType":"InheritanceSpecifier","src":"1334:18:3"},{"baseName":{"id":872,"name":"IERC20","nameLocations":["1354:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2010,"src":"1354:6:3"},"id":873,"nodeType":"InheritanceSpecifier","src":"1354:6:3"},{"baseName":{"id":874,"name":"IERC20Metadata","nameLocations":["1362:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1362:14:3"},"id":875,"nodeType":"InheritanceSpecifier","src":"1362:14:3"},{"baseName":{"id":876,"name":"IERC20Errors","nameLocations":["1378:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1837,"src":"1378:12:3"},"id":877,"nodeType":"InheritanceSpecifier","src":"1378:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"523:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1471,"linearizedBaseContracts":[1471,1837,2036,2010,1517,854],"name":"ERC20Upgradeable","nameLocation":"1299:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1397:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":895,"members":[{"constant":false,"id":882,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:3","nodeType":"VariableDeclaration","scope":895,"src":"1495:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":881,"keyName":"account","keyNameLocation":"1511:7:3","keyType":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:3","nodeType":"VariableDeclaration","scope":895,"src":"1551:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":887,"keyName":"account","keyNameLocation":"1567:7:3","keyType":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":886,"keyName":"spender","keyNameLocation":"1594:7:3","keyType":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:3","nodeType":"VariableDeclaration","scope":895,"src":"1637:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"_name","nameLocation":"1675:5:3","nodeType":"VariableDeclaration","scope":895,"src":"1668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":891,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:3","nodeType":"VariableDeclaration","scope":895,"src":"1690:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:3","nodeType":"StructDefinition","scope":1471,"src":"1465:246:3","visibility":"public"},{"constant":true,"id":898,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:3","nodeType":"VariableDeclaration","scope":1471,"src":"1826:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":905,"nodeType":"Block","src":"2021:79:3","statements":[{"AST":{"nativeSrc":"2040:54:3","nodeType":"YulBlock","src":"2040:54:3","statements":[{"nativeSrc":"2054:30:3","nodeType":"YulAssignment","src":"2054:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:3","nodeType":"YulIdentifier","src":"2064:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:3","nodeType":"YulIdentifier","src":"2054:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":902,"isOffset":false,"isSlot":true,"src":"2054:6:3","suffix":"slot","valueSize":1},{"declaration":898,"isOffset":false,"isSlot":false,"src":"2064:20:3","valueSize":1}],"id":904,"nodeType":"InlineAssembly","src":"2031:63:3"}]},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:3","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"1972:2:3"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"$","nameLocation":"2018:1:3","nodeType":"VariableDeclaration","scope":906,"src":"1997:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"ERC20Storage","nameLocations":["1997:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"1997:12:3"},"referencedDeclaration":895,"src":"1997:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:3"},"scope":1471,"src":"1947:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":921,"nodeType":"Block","src":"2355:55:3","statements":[{"expression":{"arguments":[{"id":917,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2388:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":918,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":916,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2365:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"2365:38:3"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"2106:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":922,"implemented":true,"kind":"function","modifiers":[{"id":914,"kind":"modifierInvocation","modifierName":{"id":913,"name":"onlyInitializing","nameLocations":["2338:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"2338:16:3"},"nodeType":"ModifierInvocation","src":"2338:16:3"}],"name":"__ERC20_init","nameLocation":"2272:12:3","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"name_","nameLocation":"2299:5:3","nodeType":"VariableDeclaration","scope":922,"src":"2285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":908,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"symbol_","nameLocation":"2320:7:3","nodeType":"VariableDeclaration","scope":922,"src":"2306:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2284:44:3"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"2355:0:3"},"scope":1471,"src":"2263:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":949,"nodeType":"Block","src":"2518:114:3","statements":[{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"$","nameLocation":"2549:1:3","nodeType":"VariableDeclaration","scope":949,"src":"2528:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":932,"nodeType":"UserDefinedTypeName","pathNode":{"id":931,"name":"ERC20Storage","nameLocations":["2528:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2528:12:3"},"referencedDeclaration":895,"src":"2528:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":936,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":934,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2553:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2528:43:3"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":937,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2581:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":892,"src":"2581:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":940,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2591:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":942,"nodeType":"ExpressionStatement","src":"2581:15:3"},{"expression":{"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":943,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2606:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2608:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":894,"src":"2606:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":946,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2618:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2606:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":948,"nodeType":"ExpressionStatement","src":"2606:19:3"}]},"id":950,"implemented":true,"kind":"function","modifiers":[{"id":929,"kind":"modifierInvocation","modifierName":{"id":928,"name":"onlyInitializing","nameLocations":["2501:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"2501:16:3"},"nodeType":"ModifierInvocation","src":"2501:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2425:22:3","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"name_","nameLocation":"2462:5:3","nodeType":"VariableDeclaration","scope":950,"src":"2448:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":923,"name":"string","nodeType":"ElementaryTypeName","src":"2448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"symbol_","nameLocation":"2483:7:3","nodeType":"VariableDeclaration","scope":950,"src":"2469:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":925,"name":"string","nodeType":"ElementaryTypeName","src":"2469:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:44:3"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"2518:0:3"},"scope":1471,"src":"2416:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2023],"body":{"id":965,"nodeType":"Block","src":"2757:84:3","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"$","nameLocation":"2788:1:3","nodeType":"VariableDeclaration","scope":965,"src":"2767:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"ERC20Storage","nameLocations":["2767:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2767:12:3"},"referencedDeclaration":895,"src":"2767:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":961,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":959,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2792:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2767:43:3"},{"expression":{"expression":{"id":962,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2827:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2829:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":892,"src":"2827:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":955,"id":964,"nodeType":"Return","src":"2820:14:3"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"2638:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":966,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2706:4:3","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"2710:2:3"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2742:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2741:15:3"},"scope":1471,"src":"2697:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2029],"body":{"id":981,"nodeType":"Block","src":"3016:86:3","statements":[{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"$","nameLocation":"3047:1:3","nodeType":"VariableDeclaration","scope":981,"src":"3026:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":973,"nodeType":"UserDefinedTypeName","pathNode":{"id":972,"name":"ERC20Storage","nameLocations":["3026:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"3026:12:3"},"referencedDeclaration":895,"src":"3026:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":977,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":975,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3051:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3026:43:3"},{"expression":{"expression":{"id":978,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3086:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":894,"src":"3086:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":971,"id":980,"nodeType":"Return","src":"3079:16:3"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2847:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2963:6:3","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"2969:2:3"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"3001:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":969,"name":"string","nodeType":"ElementaryTypeName","src":"3001:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3000:15:3"},"scope":1471,"src":"2954:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2035],"body":{"id":990,"nodeType":"Block","src":"3791:26:3","statements":[{"expression":{"hexValue":"3138","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":987,"id":989,"nodeType":"Return","src":"3801:9:3"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"3108:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":991,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3744:8:3","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"3752:2:3"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"3784:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":985,"name":"uint8","nodeType":"ElementaryTypeName","src":"3784:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3783:7:3"},"scope":1471,"src":"3735:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1959],"body":{"id":1006,"nodeType":"Block","src":"3938:91:3","statements":[{"assignments":[999],"declarations":[{"constant":false,"id":999,"mutability":"mutable","name":"$","nameLocation":"3969:1:3","nodeType":"VariableDeclaration","scope":1006,"src":"3948:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"ERC20Storage","nameLocations":["3948:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"3948:12:3"},"referencedDeclaration":895,"src":"3948:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1002,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3973:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3948:43:3"},{"expression":{"expression":{"id":1003,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"4008:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4010:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":890,"src":"4008:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":996,"id":1005,"nodeType":"Return","src":"4001:21:3"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"3823:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3886:11:3","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"3897:2:3"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"3929:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3928:9:3"},"scope":1471,"src":"3877:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1967],"body":{"id":1026,"nodeType":"Block","src":"4161:97:3","statements":[{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"$","nameLocation":"4192:1:3","nodeType":"VariableDeclaration","scope":1026,"src":"4171:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1016,"nodeType":"UserDefinedTypeName","pathNode":{"id":1015,"name":"ERC20Storage","nameLocations":["4171:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"4171:12:3"},"referencedDeclaration":895,"src":"4171:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1018,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4196:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4171:43:3"},{"expression":{"baseExpression":{"expression":{"id":1021,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"4231:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4233:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":882,"src":"4231:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1024,"indexExpression":{"id":1023,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4231:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1014,"id":1025,"nodeType":"Return","src":"4224:27:3"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"4035:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4096:9:3","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"account","nameLocation":"4114:7:3","nodeType":"VariableDeclaration","scope":1027,"src":"4106:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"4106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4105:17:3"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4152:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4152:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4151:9:3"},"scope":1471,"src":"4087:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1977],"body":{"id":1050,"nodeType":"Block","src":"4528:103:3","statements":[{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"owner","nameLocation":"4546:5:3","nodeType":"VariableDeclaration","scope":1050,"src":"4538:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1041,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1039,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"4554:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:28:3"},{"expression":{"arguments":[{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4586:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4593:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"4597:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1042,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4576:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"4576:27:3"},{"expression":{"hexValue":"74727565","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4620:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1036,"id":1049,"nodeType":"Return","src":"4613:11:3"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"4264:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4462:8:3","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"to","nameLocation":"4479:2:3","nodeType":"VariableDeclaration","scope":1051,"src":"4471:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"4471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"value","nameLocation":"4491:5:3","nodeType":"VariableDeclaration","scope":1051,"src":"4483:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4470:27:3"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"4522:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1034,"name":"bool","nodeType":"ElementaryTypeName","src":"4522:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4521:6:3"},"scope":1471,"src":"4453:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1987],"body":{"id":1074,"nodeType":"Block","src":"4778:106:3","statements":[{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"$","nameLocation":"4809:1:3","nodeType":"VariableDeclaration","scope":1074,"src":"4788:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"ERC20Storage","nameLocations":["4788:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"4788:12:3"},"referencedDeclaration":895,"src":"4788:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1066,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1064,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4813:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4788:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1067,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"4848:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4850:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":888,"src":"4848:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1070,"indexExpression":{"id":1069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4862:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4848:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1072,"indexExpression":{"id":1071,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"4869:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4848:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1060,"id":1073,"nodeType":"Return","src":"4841:36:3"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"4637:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4698:9:3","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"owner","nameLocation":"4716:5:3","nodeType":"VariableDeclaration","scope":1075,"src":"4708:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"spender","nameLocation":"4731:7:3","nodeType":"VariableDeclaration","scope":1075,"src":"4723:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"4723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4707:32:3"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"4769:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4769:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4768:9:3"},"scope":1471,"src":"4689:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1997],"body":{"id":1098,"nodeType":"Block","src":"5270:107:3","statements":[{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"owner","nameLocation":"5288:5:3","nodeType":"VariableDeclaration","scope":1098,"src":"5280:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"5280:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1089,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1087,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"5296:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5280:28:3"},{"expression":{"arguments":[{"id":1091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"5327:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5334:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5343:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1090,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1354,1422],"referencedDeclaration":1354,"src":"5318:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"5318:31:3"},{"expression":{"hexValue":"74727565","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1084,"id":1097,"nodeType":"Return","src":"5359:11:3"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"4890:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5200:7:3","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"spender","nameLocation":"5216:7:3","nodeType":"VariableDeclaration","scope":1099,"src":"5208:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"value","nameLocation":"5233:5:3","nodeType":"VariableDeclaration","scope":1099,"src":"5225:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"5225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:32:3"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"5264:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"5264:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5263:6:3"},"scope":1471,"src":"5191:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2009],"body":{"id":1130,"nodeType":"Block","src":"6062:151:3","statements":[{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"spender","nameLocation":"6080:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"6072:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"6072:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1113,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6090:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6090:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6072:30:3"},{"expression":{"arguments":[{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6128:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"6134:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6143:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6112:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6112:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"6112:37:3"},{"expression":{"arguments":[{"id":1123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6169:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6175:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6179:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6159:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6159:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"6159:26:3"},{"expression":{"hexValue":"74727565","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6202:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1110,"id":1129,"nodeType":"Return","src":"6195:11:3"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"5383:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5978:12:3","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"5999:4:3","nodeType":"VariableDeclaration","scope":1131,"src":"5991:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"5991:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"6013:2:3","nodeType":"VariableDeclaration","scope":1131,"src":"6005:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"6005:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"value","nameLocation":"6025:5:3","nodeType":"VariableDeclaration","scope":1131,"src":"6017:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6017:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:41:3"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"6056:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"6056:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6055:6:3"},"scope":1471,"src":"5969:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1177,"nodeType":"Block","src":"6655:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6669:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6685:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6677:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"6677:7:3","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6677:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6669:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"6665:86:3","trueBody":{"id":1154,"nodeType":"Block","src":"6689:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6737:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6729:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"6729:7:3","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6729:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1147,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"6710:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6710:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"RevertStatement","src":"6703:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6764:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6770:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"6770:7:3","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6770:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6764:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"6760:86:3","trueBody":{"id":1169,"nodeType":"Block","src":"6782:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6832:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6824:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"6824:7:3","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6824:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1162,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6803:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"RevertStatement","src":"6796:39:3"}]}},{"expression":{"arguments":[{"id":1172,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6863:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1173,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6869:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6873:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6855:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6855:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"6855:24:3"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"6219:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6595:9:3","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"from","nameLocation":"6613:4:3","nodeType":"VariableDeclaration","scope":1178,"src":"6605:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"6605:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"to","nameLocation":"6627:2:3","nodeType":"VariableDeclaration","scope":1178,"src":"6619:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"value","nameLocation":"6639:5:3","nodeType":"VariableDeclaration","scope":1178,"src":"6631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"6631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6604:41:3"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"6655:0:3"},"scope":1471,"src":"6586:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"7276:1095:3","statements":[{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"$","nameLocation":"7307:1:3","nodeType":"VariableDeclaration","scope":1269,"src":"7286:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1189,"nodeType":"UserDefinedTypeName","pathNode":{"id":1188,"name":"ERC20Storage","nameLocations":["7286:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"7286:12:3"},"referencedDeclaration":895,"src":"7286:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1191,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"7311:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7286:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7343:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7359:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7351:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"7351:7:3","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7343:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1236,"nodeType":"Block","src":"7519:366:3","statements":[{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"fromBalance","nameLocation":"7541:11:3","nodeType":"VariableDeclaration","scope":1236,"src":"7533:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1213,"initialValue":{"baseExpression":{"expression":{"id":1209,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7555:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7557:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":882,"src":"7555:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1212,"indexExpression":{"id":1211,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7555:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7533:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7604:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7590:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"7586:115:3","trueBody":{"id":1223,"nodeType":"Block","src":"7611:90:3","statements":[{"errorCall":{"arguments":[{"id":1218,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7661:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7667:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1217,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7636:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"7629:57:3"}]}},{"id":1235,"nodeType":"UncheckedBlock","src":"7714:161:3","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1225,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7821:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7823:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":882,"src":"7821:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1229,"indexExpression":{"id":1227,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7833:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7821:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7841:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7855:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7821:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"7821:39:3"}]}]},"id":1237,"nodeType":"IfStatement","src":"7339:546:3","trueBody":{"id":1206,"nodeType":"Block","src":"7363:150:3","statements":[{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1200,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7479:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7481:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":890,"src":"7479:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"7497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7479:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1205,"nodeType":"ExpressionStatement","src":"7479:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7899:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7913:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7905:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:3","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7905:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7899:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1261,"nodeType":"Block","src":"8116:208:3","statements":[{"id":1260,"nodeType":"UncheckedBlock","src":"8130:184:3","statements":[{"expression":{"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8275:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8277:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":882,"src":"8275:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1256,"indexExpression":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8287:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8275:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8294:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1259,"nodeType":"ExpressionStatement","src":"8275:24:3"}]}]},"id":1262,"nodeType":"IfStatement","src":"7895:429:3","trueBody":{"id":1251,"nodeType":"Block","src":"7917:193:3","statements":[{"id":1250,"nodeType":"UncheckedBlock","src":"7931:169:3","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1244,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8062:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8064:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":890,"src":"8062:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8080:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8062:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"8062:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1264,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8348:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8354:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"8339:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8339:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"EmitStatement","src":"8334:30:3"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"6892:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7210:7:3","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"from","nameLocation":"7226:4:3","nodeType":"VariableDeclaration","scope":1270,"src":"7218:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"7218:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"to","nameLocation":"7240:2:3","nodeType":"VariableDeclaration","scope":1270,"src":"7232:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"7232:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"value","nameLocation":"7252:5:3","nodeType":"VariableDeclaration","scope":1270,"src":"7244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"7244:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7217:41:3"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[],"src":"7276:0:3"},"scope":1471,"src":"7201:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"8770:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8784:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8803:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8795:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"8795:7:3","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8795:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8784:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1292,"nodeType":"IfStatement","src":"8780:91:3","trueBody":{"id":1291,"nodeType":"Block","src":"8807:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8849:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"8849:7:3","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1284,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"8828:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8828:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"RevertStatement","src":"8821:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8896:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8888:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"8888:7:3","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8888:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8900:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8909:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8880:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8880:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1301,"nodeType":"ExpressionStatement","src":"8880:35:3"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"8377:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8723:5:3","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"account","nameLocation":"8737:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"8729:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"8729:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"8754:5:3","nodeType":"VariableDeclaration","scope":1303,"src":"8746:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"8746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8728:32:3"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"8770:0:3"},"scope":1471,"src":"8714:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"9296:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9310:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{}}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9310:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1325,"nodeType":"IfStatement","src":"9306:89:3","trueBody":{"id":1324,"nodeType":"Block","src":"9333:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9381:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"9373:7:3","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9373:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1317,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"9354:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"RevertStatement","src":"9347:37:3"}]}},{"expression":{"arguments":[{"id":1327,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9421:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"9421:7:3","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9421:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9433:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1326,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"9404:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"9404:35:3"}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"8928:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9249:5:3","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"9263:7:3","nodeType":"VariableDeclaration","scope":1336,"src":"9255:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"9255:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"value","nameLocation":"9280:5:3","nodeType":"VariableDeclaration","scope":1336,"src":"9272:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9254:32:3"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[],"src":"9296:0:3"},"scope":1471,"src":"9240:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"10056:54:3","statements":[{"expression":{"arguments":[{"id":1347,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"10075:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"10082:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"10091:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10098:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1346,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1354,1422],"referencedDeclaration":1422,"src":"10066:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"10066:37:3"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"9452:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9991:8:3","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"owner","nameLocation":"10008:5:3","nodeType":"VariableDeclaration","scope":1354,"src":"10000:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"10000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"spender","nameLocation":"10023:7:3","nodeType":"VariableDeclaration","scope":1354,"src":"10015:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"value","nameLocation":"10040:5:3","nodeType":"VariableDeclaration","scope":1354,"src":"10032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"10032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9999:47:3"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"10056:0:3"},"scope":1471,"src":"9982:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"11055:389:3","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"$","nameLocation":"11086:1:3","nodeType":"VariableDeclaration","scope":1421,"src":"11065:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1367,"nodeType":"UserDefinedTypeName","pathNode":{"id":1366,"name":"ERC20Storage","nameLocations":["11065:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"11065:12:3"},"referencedDeclaration":895,"src":"11065:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1371,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1369,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"11090:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$895_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11090:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11065:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11122:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"11131:7:3","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11122:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1386,"nodeType":"IfStatement","src":"11118:89:3","trueBody":{"id":1385,"nodeType":"Block","src":"11143:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11193:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11185:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"11185:7:3","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11185:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1378,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"11164:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11164:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1384,"nodeType":"RevertStatement","src":"11157:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11220:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11239:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"11231:7:3","typeDescriptions":{}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11220:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"11216:90:3","trueBody":{"id":1400,"nodeType":"Block","src":"11243:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11284:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"11284:7:3","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11284:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"11264:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"11257:38:3"}]}},{"expression":{"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1402,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11315:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$895_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11317:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":888,"src":"11315:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1407,"indexExpression":{"id":1404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11329:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11315:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1408,"indexExpression":{"id":1405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11336:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11315:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"11347:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11315:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"nodeType":"ExpressionStatement","src":"11315:37:3"},{"condition":{"id":1412,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"11366:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"11362:76:3","trueBody":{"id":1419,"nodeType":"Block","src":"11377:61:3","statements":[{"eventCall":{"arguments":[{"id":1414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11405:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"11421:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1413,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"11396:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"EmitStatement","src":"11391:36:3"}]}}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"10116:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10966:8:3","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"owner","nameLocation":"10983:5:3","nodeType":"VariableDeclaration","scope":1422,"src":"10975:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"10975:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"spender","nameLocation":"10998:7:3","nodeType":"VariableDeclaration","scope":1422,"src":"10990:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"10990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"value","nameLocation":"11015:5:3","nodeType":"VariableDeclaration","scope":1422,"src":"11007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"11007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"emitEvent","nameLocation":"11027:9:3","nodeType":"VariableDeclaration","scope":1422,"src":"11022:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1362,"name":"bool","nodeType":"ElementaryTypeName","src":"11022:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10974:63:3"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"11055:0:3"},"scope":1471,"src":"10957:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"11815:387:3","statements":[{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"currentAllowance","nameLocation":"11833:16:3","nodeType":"VariableDeclaration","scope":1469,"src":"11825:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1438,"initialValue":{"arguments":[{"id":1435,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"11862:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11869:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1434,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"11852:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11825:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11891:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11915:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"11915:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11910:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11910:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11924:3:3","memberName":"max","nodeType":"MemberAccess","src":"11910:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11891:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1468,"nodeType":"IfStatement","src":"11887:309:3","trueBody":{"id":1467,"nodeType":"Block","src":"11929:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11947:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"11966:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11947:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1456,"nodeType":"IfStatement","src":"11943:130:3","trueBody":{"id":1455,"nodeType":"Block","src":"11973:100:3","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"12025:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"12034:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"12052:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1449,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"11998:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"RevertStatement","src":"11991:67:3"}]}},{"id":1466,"nodeType":"UncheckedBlock","src":"12086:100:3","statements":[{"expression":{"arguments":[{"id":1458,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"12123:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"12130:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"12139:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"12158:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12139:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12165:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1457,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1354,1422],"referencedDeclaration":1422,"src":"12114:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12114:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"12114:57:3"}]}]}}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"11450:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11735:15:3","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"owner","nameLocation":"11759:5:3","nodeType":"VariableDeclaration","scope":1470,"src":"11751:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"11751:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"spender","nameLocation":"11774:7:3","nodeType":"VariableDeclaration","scope":1470,"src":"11766:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"11766:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"value","nameLocation":"11791:5:3","nodeType":"VariableDeclaration","scope":1470,"src":"11783:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11783:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11750:47:3"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"11815:0:3"},"scope":1471,"src":"11726:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1472,"src":"1281:10923:3","usedErrors":[603,606,1807,1812,1817,1826,1831,1836],"usedEvents":[611,1944,1953]}],"src":"105:12100:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1517],"Initializable":[854]},"id":1518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1473,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1518,"sourceUnit":855,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1474,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1477,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"728:13:4"},"id":1478,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1517,"linearizedBaseContracts":[1517,854],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1483,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1484,"implemented":true,"kind":"function","modifiers":[{"id":1481,"kind":"modifierInvocation","modifierName":{"id":1480,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1517,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1490,"implemented":true,"kind":"function","modifiers":[{"id":1487,"kind":"modifierInvocation","modifierName":{"id":1486,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1517,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1494,"id":1497,"nodeType":"Return","src":"959:17:4"}]},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1517,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1503,"id":1506,"nodeType":"Return","src":"1066:15:4"}]},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1501,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1517,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1512,"id":1514,"nodeType":"Return","src":"1176:8:4"}]},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1517,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1518,"src":"688:505:4","usedErrors":[603,606],"usedEvents":[611]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[854],"ReentrancyGuardUpgradeable":[1646]},"id":1647,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1519,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1647,"sourceUnit":855,"src":"134:63:5","symbolAliases":[{"foreign":{"id":1520,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1523,"name":"Initializable","nameLocations":["1142:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1142:13:5"},"id":1524,"nodeType":"InheritanceSpecifier","src":"1142:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"199:894:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1646,"linearizedBaseContracts":[1646,854],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1527,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:5","nodeType":"VariableDeclaration","scope":1646,"src":"1910:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1530,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":1646,"src":"1956:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1999:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1534,"members":[{"constant":false,"id":1533,"mutability":"mutable","name":"_status","nameLocation":"2125:7:5","nodeType":"VariableDeclaration","scope":1534,"src":"2117:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:5","nodeType":"StructDefinition","scope":1646,"src":"2077:62:5","visibility":"public"},{"constant":true,"id":1537,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:5","nodeType":"VariableDeclaration","scope":1646,"src":"2264:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1544,"nodeType":"Block","src":"2489:89:5","statements":[{"AST":{"nativeSrc":"2508:64:5","nodeType":"YulBlock","src":"2508:64:5","statements":[{"nativeSrc":"2522:40:5","nodeType":"YulAssignment","src":"2522:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:5","nodeType":"YulIdentifier","src":"2532:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:5","nodeType":"YulIdentifier","src":"2522:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1541,"isOffset":false,"isSlot":true,"src":"2522:6:5","suffix":"slot","valueSize":1},{"declaration":1537,"isOffset":false,"isSlot":false,"src":"2532:30:5","valueSize":1}],"id":1543,"nodeType":"InlineAssembly","src":"2499:73:5"}]},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:5","nodeType":"FunctionDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"2430:2:5"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"$","nameLocation":"2486:1:5","nodeType":"VariableDeclaration","scope":1545,"src":"2455:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"2455:22:5"},"referencedDeclaration":1534,"src":"2455:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:5"},"scope":1646,"src":"2395:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2584:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1548,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:5","nodeType":"ErrorDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"2675:2:5"},"src":"2641:37:5"},{"body":{"id":1556,"nodeType":"Block","src":"2744:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2754:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"2754:34:5"}]},"id":1557,"implemented":true,"kind":"function","modifiers":[{"id":1551,"kind":"modifierInvocation","modifierName":{"id":1550,"name":"onlyInitializing","nameLocations":["2727:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"2727:16:5"},"nodeType":"ModifierInvocation","src":"2727:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:5","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"2715:2:5"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"2744:0:5"},"scope":1646,"src":"2684:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"2871:113:5","statements":[{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"$","nameLocation":"2912:1:5","nodeType":"VariableDeclaration","scope":1574,"src":"2881:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1563,"nodeType":"UserDefinedTypeName","pathNode":{"id":1562,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"2881:22:5"},"referencedDeclaration":1534,"src":"2881:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1567,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2916:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1534_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:5"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1568,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2954:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"2954:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1571,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2966:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"2954:23:5"}]},"id":1575,"implemented":true,"kind":"function","modifiers":[{"id":1560,"kind":"modifierInvocation","modifierName":{"id":1559,"name":"onlyInitializing","nameLocations":["2854:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"2854:16:5"},"nodeType":"ModifierInvocation","src":"2854:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:5","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"2842:2:5"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"2871:0:5"},"scope":1646,"src":"2801:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"3385:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1578,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"3395:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"3395:21:5"},{"id":1581,"nodeType":"PlaceholderStatement","src":"3426:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1582,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3437:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"3437:20:5"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"2990:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1586,"name":"nonReentrant","nameLocation":"3370:12:5","nodeType":"ModifierDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[],"src":"3382:2:5"},"src":"3361:103:5","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"3509:345:5","statements":[{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"$","nameLocation":"3550:1:5","nodeType":"VariableDeclaration","scope":1610,"src":"3519:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"3519:22:5"},"referencedDeclaration":1534,"src":"3519:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1594,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"3554:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1534_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1595,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3670:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"3670:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1597,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1603,"nodeType":"IfStatement","src":"3666:88:5","trueBody":{"id":1602,"nodeType":"Block","src":"3692:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1599,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3713:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"RevertStatement","src":"3706:37:5"}]}},{"expression":{"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1604,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3828:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"3828:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1607,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1609,"nodeType":"ExpressionStatement","src":"3828:19:5"}]},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:5","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[],"src":"3498:2:5"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[],"src":"3509:0:5"},"scope":1646,"src":"3470:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1626,"nodeType":"Block","src":"3898:245:5","statements":[{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"$","nameLocation":"3939:1:5","nodeType":"VariableDeclaration","scope":1626,"src":"3908:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1615,"nodeType":"UserDefinedTypeName","pathNode":{"id":1614,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"3908:22:5"},"referencedDeclaration":1534,"src":"3908:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1617,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"3943:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1534_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:5"},{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1620,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4113:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"4113:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1623,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4125:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"4113:23:5"}]},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:5","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"3887:2:5"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"3898:0:5"},"scope":1646,"src":"3860:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1644,"nodeType":"Block","src":"4386:117:5","statements":[{"assignments":[1635],"declarations":[{"constant":false,"id":1635,"mutability":"mutable","name":"$","nameLocation":"4427:1:5","nodeType":"VariableDeclaration","scope":1644,"src":"4396:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"4396:22:5"},"referencedDeclaration":1534,"src":"4396:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1638,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1636,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"4431:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1534_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1639,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4476:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1534_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"4476:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1641,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1632,"id":1643,"nodeType":"Return","src":"4469:27:5"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"4149:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:5","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"4354:2:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"4380:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:5"},"scope":1646,"src":"4322:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1647,"src":"1094:3411:5","usedErrors":[603,606,1548],"usedEvents":[611]}],"src":"109:4397:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1686],"IERC165":[5169],"Initializable":[854]},"id":1687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":5170,"src":"140:80:6","symbolAliases":[{"foreign":{"id":1649,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":855,"src":"221:66:6","symbolAliases":[{"foreign":{"id":1651,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"229:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1654,"name":"Initializable","nameLocations":["808:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"808:13:6"},"id":1655,"nodeType":"InheritanceSpecifier","src":"808:13:6"},{"baseName":{"id":1656,"name":"IERC165","nameLocations":["823:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5169,"src":"823:7:6"},"id":1657,"nodeType":"InheritanceSpecifier","src":"823:7:6"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"289:479:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1686,"linearizedBaseContracts":[1686,5169,854],"name":"ERC165Upgradeable","nameLocation":"787:17:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1662,"nodeType":"Block","src":"888:7:6","statements":[]},"id":1663,"implemented":true,"kind":"function","modifiers":[{"id":1660,"kind":"modifierInvocation","modifierName":{"id":1659,"name":"onlyInitializing","nameLocations":["871:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"871:16:6"},"nodeType":"ModifierInvocation","src":"871:16:6"}],"name":"__ERC165_init","nameLocation":"846:13:6","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"859:2:6"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"888:0:6"},"scope":1686,"src":"837:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"962:7:6","statements":[]},"id":1669,"implemented":true,"kind":"function","modifiers":[{"id":1666,"kind":"modifierInvocation","modifierName":{"id":1665,"name":"onlyInitializing","nameLocations":["945:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"945:16:6"},"nodeType":"ModifierInvocation","src":"945:16:6"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:6","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"933:2:6"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"962:0:6"},"scope":1686,"src":"901:68:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5168],"body":{"id":1684,"nodeType":"Block","src":"1117:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1134:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1679,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"1154:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5169_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5169_$","typeString":"type(contract IERC165)"}],"id":1678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5169","typeString":"type(contract IERC165)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1676,"id":1683,"nodeType":"Return","src":"1127:47:6"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"974:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:6","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:6","nodeType":"VariableDeclaration","scope":1685,"src":"1062:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1671,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:6"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"1111:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1674,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:6"},"scope":1686,"src":"1035:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1687,"src":"769:414:6","usedErrors":[603,606],"usedEvents":[611]}],"src":"114:1070:6"},"id":6},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1769]},"id":1770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"135:90:7","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1769,"linearizedBaseContracts":[1769],"name":"IAccessControl","nameLocation":"236:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"257:56:7","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1696,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:7","nodeType":"ErrorDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"account","nameLocation":"365:7:7","nodeType":"VariableDeclaration","scope":1696,"src":"357:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:7","nodeType":"VariableDeclaration","scope":1696,"src":"374:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:7"},"src":"318:76:7"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"400:148:7","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1699,"name":"AccessControlBadConfirmation","nameLocation":"559:28:7","nodeType":"ErrorDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"587:2:7"},"src":"553:37:7"},{"anonymous":false,"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"596:254:7","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1708,"name":"RoleAdminChanged","nameLocation":"861:16:7","nodeType":"EventDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:7","nodeType":"VariableDeclaration","scope":1708,"src":"878:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1704,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:7","nodeType":"VariableDeclaration","scope":1708,"src":"900:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1706,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:7","nodeType":"VariableDeclaration","scope":1708,"src":"935:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:7"},"src":"855:110:7"},{"anonymous":false,"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"971:295:7","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1717,"name":"RoleGranted","nameLocation":"1277:11:7","nodeType":"EventDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:7","nodeType":"VariableDeclaration","scope":1717,"src":"1289:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1713,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:7","nodeType":"VariableDeclaration","scope":1717,"src":"1311:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1715,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:7","nodeType":"VariableDeclaration","scope":1717,"src":"1336:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:7"},"src":"1271:89:7"},{"anonymous":false,"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"1366:275:7","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1726,"name":"RoleRevoked","nameLocation":"1652:11:7","nodeType":"EventDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:7","nodeType":"VariableDeclaration","scope":1726,"src":"1664:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1722,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:7","nodeType":"VariableDeclaration","scope":1726,"src":"1686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":1726,"src":"1711:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:7"},"src":"1646:89:7"},{"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"1741:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1736,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:7","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"role","nameLocation":"1847:4:7","nodeType":"VariableDeclaration","scope":1736,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"account","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":1736,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1736,"src":"1893:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1733,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:7"},"scope":1769,"src":"1822:77:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"1905:184:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1744,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:7","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"role","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":1744,"src":"2116:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:7"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"2153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:7"},"scope":1769,"src":"2094:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"2168:239:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1752,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"role","nameLocation":"2439:4:7","nodeType":"VariableDeclaration","scope":1752,"src":"2431:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"account","nameLocation":"2453:7:7","nodeType":"VariableDeclaration","scope":1752,"src":"2445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:7"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"2470:0:7"},"scope":1769,"src":"2412:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"2477:223:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1760,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:7","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"role","nameLocation":"2733:4:7","nodeType":"VariableDeclaration","scope":1760,"src":"2725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"account","nameLocation":"2747:7:7","nodeType":"VariableDeclaration","scope":1760,"src":"2739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:7"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"2764:0:7"},"scope":1769,"src":"2705:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"2771:491:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1768,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"role","nameLocation":"3297:4:7","nodeType":"VariableDeclaration","scope":1768,"src":"3289:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:7","nodeType":"VariableDeclaration","scope":1768,"src":"3303:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:7"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"3339:0:7"},"scope":1769,"src":"3267:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1770,"src":"226:3116:7","usedErrors":[1696,1699],"usedEvents":[1708,1717,1726]}],"src":"109:3234:7"},"id":7},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[1769],"IAccessControlEnumerable":[1795]},"id":1796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1771,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:8"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":1773,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1796,"sourceUnit":1770,"src":"156:53:8","symbolAliases":[{"foreign":{"id":1772,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"164:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1775,"name":"IAccessControl","nameLocations":["350:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"350:14:8"},"id":1776,"nodeType":"InheritanceSpecifier","src":"350:14:8"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"211:100:8","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":1795,"linearizedBaseContracts":[1795,1769],"name":"IAccessControlEnumerable","nameLocation":"322:24:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"371:574:8","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":1786,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:8","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"role","nameLocation":"981:4:8","nodeType":"VariableDeclaration","scope":1786,"src":"973:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"index","nameLocation":"995:5:8","nodeType":"VariableDeclaration","scope":1786,"src":"987:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:8"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1786,"src":"1025:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:8"},"scope":1795,"src":"950:84:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"1040:157:8","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":1794,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:8","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"role","nameLocation":"1238:4:8","nodeType":"VariableDeclaration","scope":1794,"src":"1230:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:8"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"1267:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:8"},"scope":1795,"src":"1202:74:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1796,"src":"312:966:8","usedErrors":[1696,1699],"usedEvents":[1708,1717,1726]}],"src":"130:1149:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1932],"IERC20Errors":[1837],"IERC721Errors":[1885]},"id":1933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1797,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"138:141:9","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1837,"linearizedBaseContracts":[1837],"name":"IERC20Errors","nameLocation":"290:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"309:309:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1807,"name":"ERC20InsufficientBalance","nameLocation":"629:24:9","nodeType":"ErrorDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"sender","nameLocation":"662:6:9","nodeType":"VariableDeclaration","scope":1807,"src":"654:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"balance","nameLocation":"678:7:9","nodeType":"VariableDeclaration","scope":1807,"src":"670:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"needed","nameLocation":"695:6:9","nodeType":"VariableDeclaration","scope":1807,"src":"687:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:9"},"src":"623:80:9"},{"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"709:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1812,"name":"ERC20InvalidSender","nameLocation":"872:18:9","nodeType":"ErrorDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"sender","nameLocation":"899:6:9","nodeType":"VariableDeclaration","scope":1812,"src":"891:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:9"},"src":"866:41:9"},{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"913:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1817,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:9","nodeType":"ErrorDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:9","nodeType":"VariableDeclaration","scope":1817,"src":"1104:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:9"},"src":"1077:45:9"},{"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"1128:345:9","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1826,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:9","nodeType":"ErrorDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"spender","nameLocation":"1519:7:9","nodeType":"VariableDeclaration","scope":1826,"src":"1511:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:9","nodeType":"VariableDeclaration","scope":1826,"src":"1528:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"needed","nameLocation":"1555:6:9","nodeType":"VariableDeclaration","scope":1826,"src":"1547:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:9"},"src":"1478:85:9"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"1569:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1831,"name":"ERC20InvalidApprover","nameLocation":"1754:20:9","nodeType":"ErrorDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"approver","nameLocation":"1783:8:9","nodeType":"VariableDeclaration","scope":1831,"src":"1775:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:9"},"src":"1748:45:9"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"1799:195:9","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1836,"name":"ERC20InvalidSpender","nameLocation":"2005:19:9","nodeType":"ErrorDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"spender","nameLocation":"2033:7:9","nodeType":"VariableDeclaration","scope":1836,"src":"2025:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:9"},"src":"1999:43:9"}],"scope":1933,"src":"280:1764:9","usedErrors":[1807,1812,1817,1826,1831,1836],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"2046:143:9","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1885,"linearizedBaseContracts":[1885],"name":"IERC721Errors","nameLocation":"2200:13:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"2220:219:9","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1843,"name":"ERC721InvalidOwner","nameLocation":"2450:18:9","nodeType":"ErrorDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"owner","nameLocation":"2477:5:9","nodeType":"VariableDeclaration","scope":1843,"src":"2469:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:9"},"src":"2444:40:9"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"2490:132:9","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1848,"name":"ERC721NonexistentToken","nameLocation":"2633:22:9","nodeType":"ErrorDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:9","nodeType":"VariableDeclaration","scope":1848,"src":"2656:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:9"},"src":"2627:46:9"},{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"2679:289:9","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1857,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:9","nodeType":"ErrorDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"sender","nameLocation":"3008:6:9","nodeType":"VariableDeclaration","scope":1857,"src":"3000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:9","nodeType":"VariableDeclaration","scope":1857,"src":"3016:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"owner","nameLocation":"3041:5:9","nodeType":"VariableDeclaration","scope":1857,"src":"3033:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:9"},"src":"2973:75:9"},{"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"3054:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1862,"name":"ERC721InvalidSender","nameLocation":"3217:19:9","nodeType":"ErrorDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"sender","nameLocation":"3245:6:9","nodeType":"VariableDeclaration","scope":1862,"src":"3237:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:9"},"src":"3211:42:9"},{"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"3259:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1867,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:9","nodeType":"ErrorDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:9","nodeType":"VariableDeclaration","scope":1867,"src":"3451:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:9"},"src":"3423:46:9"},{"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"3475:247:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1874,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:9","nodeType":"ErrorDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"operator","nameLocation":"3768:8:9","nodeType":"VariableDeclaration","scope":1874,"src":"3760:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:9","nodeType":"VariableDeclaration","scope":1874,"src":"3778:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:9"},"src":"3727:68:9"},{"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"3801:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1879,"name":"ERC721InvalidApprover","nameLocation":"3986:21:9","nodeType":"ErrorDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"approver","nameLocation":"4016:8:9","nodeType":"VariableDeclaration","scope":1879,"src":"4008:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:9"},"src":"3980:46:9"},{"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"4032:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1884,"name":"ERC721InvalidOperator","nameLocation":"4240:21:9","nodeType":"ErrorDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"operator","nameLocation":"4270:8:9","nodeType":"VariableDeclaration","scope":1884,"src":"4262:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:9"},"src":"4234:46:9"}],"scope":1933,"src":"2190:2092:9","usedErrors":[1843,1848,1857,1862,1867,1874,1879,1884],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"4284:145:9","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1932,"linearizedBaseContracts":[1932],"name":"IERC1155Errors","nameLocation":"4440:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"4461:361:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1897,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:9","nodeType":"ErrorDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"sender","nameLocation":"4868:6:9","nodeType":"VariableDeclaration","scope":1897,"src":"4860:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"balance","nameLocation":"4884:7:9","nodeType":"VariableDeclaration","scope":1897,"src":"4876:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"needed","nameLocation":"4901:6:9","nodeType":"VariableDeclaration","scope":1897,"src":"4893:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:9","nodeType":"VariableDeclaration","scope":1897,"src":"4909:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:9"},"src":"4827:99:9"},{"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"4932:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1902,"name":"ERC1155InvalidSender","nameLocation":"5095:20:9","nodeType":"ErrorDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"sender","nameLocation":"5124:6:9","nodeType":"VariableDeclaration","scope":1902,"src":"5116:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:9"},"src":"5089:43:9"},{"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"5138:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1907,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:9","nodeType":"ErrorDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:9","nodeType":"VariableDeclaration","scope":1907,"src":"5331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:9"},"src":"5302:47:9"},{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"5355:256:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1914,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:9","nodeType":"ErrorDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"operator","nameLocation":"5659:8:9","nodeType":"VariableDeclaration","scope":1914,"src":"5651:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"owner","nameLocation":"5677:5:9","nodeType":"VariableDeclaration","scope":1914,"src":"5669:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:9"},"src":"5616:68:9"},{"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"5690:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1919,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:9","nodeType":"ErrorDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"approver","nameLocation":"5906:8:9","nodeType":"VariableDeclaration","scope":1919,"src":"5898:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:9"},"src":"5869:47:9"},{"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"5922:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1924,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:9","nodeType":"ErrorDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"operator","nameLocation":"6161:8:9","nodeType":"VariableDeclaration","scope":1924,"src":"6153:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:9"},"src":"6124:47:9"},{"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"6177:280:9","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1931,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:9","nodeType":"ErrorDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:9","nodeType":"VariableDeclaration","scope":1931,"src":"6494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:9","nodeType":"VariableDeclaration","scope":1931,"src":"6513:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:9"},"src":"6462:73:9"}],"scope":1933,"src":"4430:2107:9","usedErrors":[1897,1902,1907,1914,1919,1924,1931],"usedEvents":[]}],"src":"112:6426:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2010]},"id":2011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"132:71:10","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2010,"linearizedBaseContracts":[2010],"name":"IERC20","nameLocation":"214:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"227:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1944,"name":"Transfer","nameLocation":"396:8:10","nodeType":"EventDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:10","nodeType":"VariableDeclaration","scope":1944,"src":"405:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1940,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:10","nodeType":"VariableDeclaration","scope":1944,"src":"427:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:10","nodeType":"VariableDeclaration","scope":1944,"src":"447:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:10"},"src":"390:72:10"},{"anonymous":false,"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"468:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1953,"name":"Approval","nameLocation":"627:8:10","nodeType":"EventDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:10","nodeType":"VariableDeclaration","scope":1953,"src":"636:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:10","nodeType":"VariableDeclaration","scope":1953,"src":"659:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1951,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:10","nodeType":"VariableDeclaration","scope":1953,"src":"684:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:10"},"src":"621:78:10"},{"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"705:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1959,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:10","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"795:2:10"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:10"},"scope":2010,"src":"775:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"836:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1967,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":1967,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":2010,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"986:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1977,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:10","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"to","nameLocation":"1230:2:10","nodeType":"VariableDeclaration","scope":1977,"src":"1222:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":1977,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:10"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"1267:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1974,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:10"},"scope":2010,"src":"1204:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"1279:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1987,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:10","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"owner","nameLocation":"1575:5:10","nodeType":"VariableDeclaration","scope":1987,"src":"1567:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"spender","nameLocation":"1590:7:10","nodeType":"VariableDeclaration","scope":1987,"src":"1582:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:10"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"1622:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:10"},"scope":2010,"src":"1548:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"1637:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1997,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:10","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"spender","nameLocation":"2334:7:10","nodeType":"VariableDeclaration","scope":1997,"src":"2326:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"value","nameLocation":"2351:5:10","nodeType":"VariableDeclaration","scope":1997,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:10"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"2376:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:10"},"scope":2010,"src":"2309:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"2388:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2009,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:10","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"from","nameLocation":"2720:4:10","nodeType":"VariableDeclaration","scope":2009,"src":"2712:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"to","nameLocation":"2734:2:10","nodeType":"VariableDeclaration","scope":2009,"src":"2726:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"value","nameLocation":"2746:5:10","nodeType":"VariableDeclaration","scope":2009,"src":"2738:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:10"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"2771:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2006,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:10"},"scope":2010,"src":"2690:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2011,"src":"204:2575:10","usedErrors":[],"usedEvents":[1944,1953]}],"src":"106:2674:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2010],"IERC20Metadata":[2036]},"id":2037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2012,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":2011,"src":"151:37:11","symbolAliases":[{"foreign":{"id":2013,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2016,"name":"IERC20","nameLocations":["306:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2010,"src":"306:6:11"},"id":2017,"nodeType":"InheritanceSpecifier","src":"306:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"190:87:11","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2036,"linearizedBaseContracts":[2036,2010],"name":"IERC20Metadata","nameLocation":"288:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"319:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2023,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:11","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"391:2:11"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2023,"src":"417:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:11"},"scope":2036,"src":"378:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"438:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2029,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:11","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"514:2:11"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"540:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:11"},"scope":2036,"src":"499:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"561:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2035,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:11","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"648:2:11"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"674:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2032,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:11"},"scope":2036,"src":"631:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2037,"src":"278:405:11","usedErrors":[],"usedEvents":[1944,1953]}],"src":"125:559:11"},"id":11},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2914],"Comparators":[2946],"Math":[6790],"SlotDerivation":[3197],"StorageSlot":[3321]},"id":2915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2038,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2915,"sourceUnit":2947,"src":"209:46:12","symbolAliases":[{"foreign":{"id":2039,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"217:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2915,"sourceUnit":3198,"src":"256:52:12","symbolAliases":[{"foreign":{"id":2041,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"264:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2915,"sourceUnit":3322,"src":"309:46:12","symbolAliases":[{"foreign":{"id":2043,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"317:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2915,"sourceUnit":6791,"src":"356:37:12","symbolAliases":[{"foreign":{"id":2045,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"364:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"395:63:12","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2914,"linearizedBaseContracts":[2914],"name":"Arrays","nameLocation":"467:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2050,"libraryName":{"id":2048,"name":"SlotDerivation","nameLocations":["486:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":3197,"src":"486:14:12"},"nodeType":"UsingForDirective","src":"480:33:12","typeName":{"id":2049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2053,"libraryName":{"id":2051,"name":"StorageSlot","nameLocations":["524:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3321,"src":"524:11:12"},"nodeType":"UsingForDirective","src":"518:30:12","typeName":{"id":2052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2085,"nodeType":"Block","src":"1628:83:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2075,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1656:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2074,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2078,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1669:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2077,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1664:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2080,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1677:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2073,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"1638:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"1638:44:12"},{"expression":{"id":2083,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1699:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2072,"id":2084,"nodeType":"Return","src":"1692:12:12"}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"554:915:12","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:12","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"array","nameLocation":"1514:5:12","nodeType":"VariableDeclaration","scope":2086,"src":"1497:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ArrayTypeName","src":"1497:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"comp","nameLocation":"1576:4:12","nodeType":"VariableDeclaration","scope":2086,"src":"1529:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2066,"nodeType":"FunctionTypeName","parameterTypes":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"1538:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"1547:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:12"},"returnParameterTypes":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"1570:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2063,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:12"},"src":"1529:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:12"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"1610:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ArrayTypeName","src":"1610:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:12"},"scope":2914,"src":"1474:237:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2104,"nodeType":"Block","src":"1894:66:12","statements":[{"expression":{"arguments":[{"id":2097,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1909:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2098,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"1916:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2946_$","typeString":"type(library Comparators)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"1916:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2096,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2086,2105,2137,2158,2190,2211],"referencedDeclaration":2086,"src":"1904:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2101,"nodeType":"ExpressionStatement","src":"1904:27:12"},{"expression":{"id":2102,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1948:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2095,"id":2103,"nodeType":"Return","src":"1941:12:12"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"1717:93:12","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:12","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"array","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2105,"src":"1829:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ArrayTypeName","src":"1829:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:12"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"1876:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ArrayTypeName","src":"1876:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:12"},"scope":2914,"src":"1815:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"3040:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2127,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2126,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2362,2374],"referencedDeclaration":2362,"src":"3055:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2130,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3102:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2129,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2400,2426],"referencedDeclaration":2400,"src":"3083:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2125,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2086,2105,2137,2158,2190,2211],"referencedDeclaration":2086,"src":"3050:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2133,"nodeType":"ExpressionStatement","src":"3050:58:12"},{"expression":{"id":2134,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3125:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2124,"id":2135,"nodeType":"Return","src":"3118:12:12"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"1966:915:12","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:12","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"array","nameLocation":"2926:5:12","nodeType":"VariableDeclaration","scope":2137,"src":"2909:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2108,"nodeType":"ArrayTypeName","src":"2909:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"comp","nameLocation":"2988:4:12","nodeType":"VariableDeclaration","scope":2137,"src":"2941:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2118,"nodeType":"FunctionTypeName","parameterTypes":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"2950:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"2959:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:12"},"returnParameterTypes":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"2982:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2115,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:12"},"src":"2941:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:12"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"3022:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2122,"nodeType":"ArrayTypeName","src":"3022:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:12"},"scope":2914,"src":"2886:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"3320:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2149,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"3355:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2148,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2362,2374],"referencedDeclaration":2362,"src":"3335:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2151,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3363:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2946_$","typeString":"type(library Comparators)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"3363:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2147,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2086,2105,2137,2158,2190,2211],"referencedDeclaration":2086,"src":"3330:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2154,"nodeType":"ExpressionStatement","src":"3330:48:12"},{"expression":{"id":2155,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"3395:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2146,"id":2156,"nodeType":"Return","src":"3388:12:12"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"3143:93:12","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:12","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"array","nameLocation":"3272:5:12","nodeType":"VariableDeclaration","scope":2158,"src":"3255:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2140,"nodeType":"ArrayTypeName","src":"3255:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:12"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"3302:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2144,"nodeType":"ArrayTypeName","src":"3302:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:12"},"scope":2914,"src":"3241:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2189,"nodeType":"Block","src":"4487:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2180,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2179,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2362,2374],"referencedDeclaration":2374,"src":"4502:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2183,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2182,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2400,2426],"referencedDeclaration":2426,"src":"4530:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2178,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2086,2105,2137,2158,2190,2211],"referencedDeclaration":2086,"src":"4497:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2186,"nodeType":"ExpressionStatement","src":"4497:58:12"},{"expression":{"id":2187,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4572:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2177,"id":2188,"nodeType":"Return","src":"4565:12:12"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"3413:915:12","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:12","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"array","nameLocation":"4373:5:12","nodeType":"VariableDeclaration","scope":2190,"src":"4356:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2161,"nodeType":"ArrayTypeName","src":"4356:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"comp","nameLocation":"4435:4:12","nodeType":"VariableDeclaration","scope":2190,"src":"4388:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2171,"nodeType":"FunctionTypeName","parameterTypes":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"4397:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"4406:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:12"},"returnParameterTypes":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"4429:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2168,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:12"},"src":"4388:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:12"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"4469:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2175,"nodeType":"ArrayTypeName","src":"4469:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:12"},"scope":2914,"src":"4333:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2210,"nodeType":"Block","src":"4767:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2202,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"4802:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2201,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2362,2374],"referencedDeclaration":2374,"src":"4782:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2204,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"4810:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2946_$","typeString":"type(library Comparators)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"4810:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2200,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2086,2105,2137,2158,2190,2211],"referencedDeclaration":2086,"src":"4777:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2207,"nodeType":"ExpressionStatement","src":"4777:48:12"},{"expression":{"id":2208,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"4842:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2199,"id":2209,"nodeType":"Return","src":"4835:12:12"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"4590:93:12","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:12","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"array","nameLocation":"4719:5:12","nodeType":"VariableDeclaration","scope":2211,"src":"4702:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2193,"nodeType":"ArrayTypeName","src":"4702:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:12"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"4749:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2197,"nodeType":"ArrayTypeName","src":"4749:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:12"},"scope":2914,"src":"4688:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2298,"nodeType":"Block","src":"5470:889:12","statements":[{"id":2297,"nodeType":"UncheckedBlock","src":"5480:873:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"5508:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2230,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"5504:31:12","trueBody":{"functionReturnParameters":2228,"id":2234,"nodeType":"Return","src":"5528:7:12"}},{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:12","nodeType":"VariableDeclaration","scope":2297,"src":"5591:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2241,"initialValue":{"arguments":[{"id":2239,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5614:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"5607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:12"},{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"pos","nameLocation":"5715:3:12","nodeType":"VariableDeclaration","scope":2297,"src":"5707:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2245,"initialValue":{"id":2244,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:12"},{"body":{"id":2276,"nodeType":"Block","src":"5795:331:12","statements":[{"condition":{"arguments":[{"arguments":[{"id":2261,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"5829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"5822:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2263,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"5817:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2275,"nodeType":"IfStatement","src":"5813:299:12","trueBody":{"id":2274,"nodeType":"Block","src":"5842:270:12","statements":[{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2265,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6046:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ExpressionStatement","src":"6046:11:12"},{"expression":{"arguments":[{"id":2270,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6085:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2271,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"6090:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2269,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"6079:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"6079:14:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"5773:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"5778:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"initializationExpression":{"assignments":[2247],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"it","nameLocation":"5754:2:12","nodeType":"VariableDeclaration","scope":2277,"src":"5746:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2251,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5759:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2255,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"5783:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"5783:10:12"},"nodeType":"ForStatement","src":"5741:385:12"},{"expression":{"arguments":[{"id":2279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6146:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2280,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6153:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"6140:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2282,"nodeType":"ExpressionStatement","src":"6140:17:12"},{"expression":{"arguments":[{"id":2284,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6207:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2285,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6214:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2286,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"6219:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2283,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6196:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"ExpressionStatement","src":"6196:28:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6284:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2293,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"6296:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2294,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"6301:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2289,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6273:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"ExpressionStatement","src":"6273:33:12"}]}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"4860:491:12","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:12","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"begin","nameLocation":"5384:5:12","nodeType":"VariableDeclaration","scope":2299,"src":"5376:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"end","nameLocation":"5399:3:12","nodeType":"VariableDeclaration","scope":2299,"src":"5391:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"comp","nameLocation":"5451:4:12","nodeType":"VariableDeclaration","scope":2299,"src":"5404:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2225,"nodeType":"FunctionTypeName","parameterTypes":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"5413:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"5422:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:12"},"returnParameterTypes":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"5445:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2222,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:12"},"src":"5404:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:12"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[],"src":"5470:0:12"},"scope":2914,"src":"5356:1003:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2309,"nodeType":"Block","src":"6532:88:12","statements":[{"AST":{"nativeSrc":"6567:47:12","nodeType":"YulBlock","src":"6567:47:12","statements":[{"nativeSrc":"6581:23:12","nodeType":"YulAssignment","src":"6581:23:12","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:12","nodeType":"YulIdentifier","src":"6592:5:12"},{"kind":"number","nativeSrc":"6599:4:12","nodeType":"YulLiteral","src":"6599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:12","nodeType":"YulIdentifier","src":"6588:3:12"},"nativeSrc":"6588:16:12","nodeType":"YulFunctionCall","src":"6588:16:12"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:12","nodeType":"YulIdentifier","src":"6581:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2303,"isOffset":false,"isSlot":false,"src":"6592:5:12","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"6581:3:12","valueSize":1}],"flags":["memory-safe"],"id":2308,"nodeType":"InlineAssembly","src":"6542:72:12"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"6365:87:12","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:12","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"array","nameLocation":"6490:5:12","nodeType":"VariableDeclaration","scope":2310,"src":"6473:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ArrayTypeName","src":"6473:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:12"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:12","nodeType":"VariableDeclaration","scope":2310,"src":"6519:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:12"},"scope":2914,"src":"6457:163:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2329,"nodeType":"Block","src":"6892:93:12","statements":[{"id":2328,"nodeType":"UncheckedBlock","src":"6902:77:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2320,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"6940:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2319,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6933:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2322,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"6949:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:12","memberName":"length","nodeType":"MemberAccess","src":"6949:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2318,"id":2327,"nodeType":"Return","src":"6926:42:12"}]}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"6626:188:12","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:12","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"array","nameLocation":"6850:5:12","nodeType":"VariableDeclaration","scope":2330,"src":"6833:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ArrayTypeName","src":"6833:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:12"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:12","nodeType":"VariableDeclaration","scope":2330,"src":"6879:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:12"},"scope":2914,"src":"6819:166:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2339,"nodeType":"Block","src":"7136:68:12","statements":[{"AST":{"nativeSrc":"7155:43:12","nodeType":"YulBlock","src":"7155:43:12","statements":[{"nativeSrc":"7169:19:12","nodeType":"YulAssignment","src":"7169:19:12","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:12","nodeType":"YulIdentifier","src":"7184:3:12"}],"functionName":{"name":"mload","nativeSrc":"7178:5:12","nodeType":"YulIdentifier","src":"7178:5:12"},"nativeSrc":"7178:10:12","nodeType":"YulFunctionCall","src":"7178:10:12"},"variableNames":[{"name":"value","nativeSrc":"7169:5:12","nodeType":"YulIdentifier","src":"7169:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":false,"src":"7184:3:12","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"7169:5:12","valueSize":1}],"id":2338,"nodeType":"InlineAssembly","src":"7146:52:12"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"6991:74:12","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:12","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:12","nodeType":"VariableDeclaration","scope":2340,"src":"7086:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:12"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"value","nameLocation":"7129:5:12","nodeType":"VariableDeclaration","scope":2340,"src":"7121:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:12"},"scope":2914,"src":"7070:134:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2349,"nodeType":"Block","src":"7348:178:12","statements":[{"AST":{"nativeSrc":"7367:153:12","nodeType":"YulBlock","src":"7367:153:12","statements":[{"nativeSrc":"7381:25:12","nodeType":"YulVariableDeclaration","src":"7381:25:12","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:12","nodeType":"YulIdentifier","src":"7401:4:12"}],"functionName":{"name":"mload","nativeSrc":"7395:5:12","nodeType":"YulIdentifier","src":"7395:5:12"},"nativeSrc":"7395:11:12","nodeType":"YulFunctionCall","src":"7395:11:12"},"variables":[{"name":"value1","nativeSrc":"7385:6:12","nodeType":"YulTypedName","src":"7385:6:12","type":""}]},{"nativeSrc":"7419:25:12","nodeType":"YulVariableDeclaration","src":"7419:25:12","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:12","nodeType":"YulIdentifier","src":"7439:4:12"}],"functionName":{"name":"mload","nativeSrc":"7433:5:12","nodeType":"YulIdentifier","src":"7433:5:12"},"nativeSrc":"7433:11:12","nodeType":"YulFunctionCall","src":"7433:11:12"},"variables":[{"name":"value2","nativeSrc":"7423:6:12","nodeType":"YulTypedName","src":"7423:6:12","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:12","nodeType":"YulIdentifier","src":"7464:4:12"},{"name":"value2","nativeSrc":"7470:6:12","nodeType":"YulIdentifier","src":"7470:6:12"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:12","nodeType":"YulIdentifier","src":"7457:6:12"},"nativeSrc":"7457:20:12","nodeType":"YulFunctionCall","src":"7457:20:12"},"nativeSrc":"7457:20:12","nodeType":"YulExpressionStatement","src":"7457:20:12"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:12","nodeType":"YulIdentifier","src":"7497:4:12"},{"name":"value1","nativeSrc":"7503:6:12","nodeType":"YulIdentifier","src":"7503:6:12"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:12","nodeType":"YulIdentifier","src":"7490:6:12"},"nativeSrc":"7490:20:12","nodeType":"YulFunctionCall","src":"7490:20:12"},"nativeSrc":"7490:20:12","nodeType":"YulExpressionStatement","src":"7490:20:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2343,"isOffset":false,"isSlot":false,"src":"7401:4:12","valueSize":1},{"declaration":2343,"isOffset":false,"isSlot":false,"src":"7464:4:12","valueSize":1},{"declaration":2345,"isOffset":false,"isSlot":false,"src":"7439:4:12","valueSize":1},{"declaration":2345,"isOffset":false,"isSlot":false,"src":"7497:4:12","valueSize":1}],"id":2348,"nodeType":"InlineAssembly","src":"7358:162:12"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"7210:77:12","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:12","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:12","nodeType":"VariableDeclaration","scope":2350,"src":"7307:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:12","nodeType":"VariableDeclaration","scope":2350,"src":"7321:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:12"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[],"src":"7348:0:12"},"scope":2914,"src":"7292:234:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2361,"nodeType":"Block","src":"7713:64:12","statements":[{"AST":{"nativeSrc":"7732:39:12","nodeType":"YulBlock","src":"7732:39:12","statements":[{"nativeSrc":"7746:15:12","nodeType":"YulAssignment","src":"7746:15:12","value":{"name":"input","nativeSrc":"7756:5:12","nodeType":"YulIdentifier","src":"7756:5:12"},"variableNames":[{"name":"output","nativeSrc":"7746:6:12","nodeType":"YulIdentifier","src":"7746:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"7756:5:12","valueSize":1},{"declaration":2358,"isOffset":false,"isSlot":false,"src":"7746:6:12","valueSize":1}],"id":2360,"nodeType":"InlineAssembly","src":"7723:48:12"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"7532:76:12","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:12","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"input","nameLocation":"7659:5:12","nodeType":"VariableDeclaration","scope":2362,"src":"7642:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"nodeType":"ArrayTypeName","src":"7642:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:12"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"output","nameLocation":"7705:6:12","nodeType":"VariableDeclaration","scope":2362,"src":"7688:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ArrayTypeName","src":"7688:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:12"},"scope":2914,"src":"7613:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2373,"nodeType":"Block","src":"7964:64:12","statements":[{"AST":{"nativeSrc":"7983:39:12","nodeType":"YulBlock","src":"7983:39:12","statements":[{"nativeSrc":"7997:15:12","nodeType":"YulAssignment","src":"7997:15:12","value":{"name":"input","nativeSrc":"8007:5:12","nodeType":"YulIdentifier","src":"8007:5:12"},"variableNames":[{"name":"output","nativeSrc":"7997:6:12","nodeType":"YulIdentifier","src":"7997:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2366,"isOffset":false,"isSlot":false,"src":"8007:5:12","valueSize":1},{"declaration":2370,"isOffset":false,"isSlot":false,"src":"7997:6:12","valueSize":1}],"id":2372,"nodeType":"InlineAssembly","src":"7974:48:12"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"7783:76:12","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:12","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"input","nameLocation":"7910:5:12","nodeType":"VariableDeclaration","scope":2374,"src":"7893:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2365,"nodeType":"ArrayTypeName","src":"7893:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:12"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"output","nameLocation":"7956:6:12","nodeType":"VariableDeclaration","scope":2374,"src":"7939:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"nodeType":"ArrayTypeName","src":"7939:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:12"},"scope":2914,"src":"7864:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2399,"nodeType":"Block","src":"8290:64:12","statements":[{"AST":{"nativeSrc":"8309:39:12","nodeType":"YulBlock","src":"8309:39:12","statements":[{"nativeSrc":"8323:15:12","nodeType":"YulAssignment","src":"8323:15:12","value":{"name":"input","nativeSrc":"8333:5:12","nodeType":"YulIdentifier","src":"8333:5:12"},"variableNames":[{"name":"output","nativeSrc":"8323:6:12","nodeType":"YulIdentifier","src":"8323:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2385,"isOffset":false,"isSlot":false,"src":"8333:5:12","valueSize":1},{"declaration":2396,"isOffset":false,"isSlot":false,"src":"8323:6:12","valueSize":1}],"id":2398,"nodeType":"InlineAssembly","src":"8300:48:12"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"8034:78:12","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:12","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"input","nameLocation":"8201:5:12","nodeType":"VariableDeclaration","scope":2400,"src":"8154:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2384,"nodeType":"FunctionTypeName","parameterTypes":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"8163:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"8172:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:12"},"returnParameterTypes":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"8195:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2381,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:12"},"src":"8154:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:12"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"output","nameLocation":"8282:6:12","nodeType":"VariableDeclaration","scope":2400,"src":"8235:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2395,"nodeType":"FunctionTypeName","parameterTypes":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"8244:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"8253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:12"},"returnParameterTypes":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"8276:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2392,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:12"},"src":"8235:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:12"},"scope":2914,"src":"8117:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2425,"nodeType":"Block","src":"8616:64:12","statements":[{"AST":{"nativeSrc":"8635:39:12","nodeType":"YulBlock","src":"8635:39:12","statements":[{"nativeSrc":"8649:15:12","nodeType":"YulAssignment","src":"8649:15:12","value":{"name":"input","nativeSrc":"8659:5:12","nodeType":"YulIdentifier","src":"8659:5:12"},"variableNames":[{"name":"output","nativeSrc":"8649:6:12","nodeType":"YulIdentifier","src":"8649:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2411,"isOffset":false,"isSlot":false,"src":"8659:5:12","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"8649:6:12","valueSize":1}],"id":2424,"nodeType":"InlineAssembly","src":"8626:48:12"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"8360:78:12","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:12","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"input","nameLocation":"8527:5:12","nodeType":"VariableDeclaration","scope":2426,"src":"8480:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2410,"nodeType":"FunctionTypeName","parameterTypes":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"8489:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"8498:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:12"},"returnParameterTypes":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"8521:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2407,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:12"},"src":"8480:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:12"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"output","nameLocation":"8608:6:12","nodeType":"VariableDeclaration","scope":2426,"src":"8561:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2421,"nodeType":"FunctionTypeName","parameterTypes":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"8570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"8579:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:12"},"returnParameterTypes":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"8602:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2418,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:12"},"src":"8561:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:12"},"scope":2914,"src":"8443:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2508,"nodeType":"Block","src":"9405:834:12","statements":[{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"low","nameLocation":"9423:3:12","nodeType":"VariableDeclaration","scope":2508,"src":"9415:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2440,"initialValue":{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:12"},{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"high","nameLocation":"9448:4:12","nodeType":"VariableDeclaration","scope":2508,"src":"9440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2445,"initialValue":{"expression":{"id":2443,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"9455:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:12","memberName":"length","nodeType":"MemberAccess","src":"9455:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9482:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2452,"nodeType":"IfStatement","src":"9478:48:12","trueBody":{"id":2451,"nodeType":"Block","src":"9493:33:12","statements":[{"expression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2436,"id":2450,"nodeType":"Return","src":"9507:8:12"}]}},{"body":{"id":2484,"nodeType":"Block","src":"9555:423:12","statements":[{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"mid","nameLocation":"9577:3:12","nodeType":"VariableDeclaration","scope":2484,"src":"9569:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2463,"initialValue":{"arguments":[{"id":2460,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9596:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2461,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9601:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2458,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"9583:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"9583:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2465,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"9844:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2466,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2464,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2789,2815,2841],"referencedDeclaration":2841,"src":"9831:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3212_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3211,"src":"9831:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2469,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2482,"nodeType":"Block","src":"9922:46:12","statements":[{"expression":{"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2476,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9940:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9946:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2481,"nodeType":"ExpressionStatement","src":"9940:13:12"}]},"id":2483,"nodeType":"IfStatement","src":"9827:141:12","trueBody":{"id":2475,"nodeType":"Block","src":"9873:43:12","statements":[{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2471,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9891:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2472,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"nodeType":"ExpressionStatement","src":"9891:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9543:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2454,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9549:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"WhileStatement","src":"9536:442:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10095:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2490,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"10119:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10126:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2789,2815,2841],"referencedDeclaration":2841,"src":"10106:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3212_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3211,"src":"10106:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2496,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"10144:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2506,"nodeType":"Block","src":"10198:35:12","statements":[{"expression":{"id":2504,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10219:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2436,"id":2505,"nodeType":"Return","src":"10212:10:12"}]},"id":2507,"nodeType":"IfStatement","src":"10091:142:12","trueBody":{"id":2503,"nodeType":"Block","src":"10153:39:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10174:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2436,"id":2502,"nodeType":"Return","src":"10167:14:12"}]}}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"8686:616:12","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:12","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"array","nameLocation":"9349:5:12","nodeType":"VariableDeclaration","scope":2509,"src":"9331:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ArrayTypeName","src":"9331:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"element","nameLocation":"9364:7:12","nodeType":"VariableDeclaration","scope":2509,"src":"9356:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:12"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"9396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:12"},"scope":2914,"src":"9307:932:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"10756:709:12","statements":[{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"low","nameLocation":"10774:3:12","nodeType":"VariableDeclaration","scope":2572,"src":"10766:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2523,"initialValue":{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:12"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"high","nameLocation":"10799:4:12","nodeType":"VariableDeclaration","scope":2572,"src":"10791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2528,"initialValue":{"expression":{"id":2526,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"10806:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:12","memberName":"length","nodeType":"MemberAccess","src":"10806:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"10833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2535,"nodeType":"IfStatement","src":"10829:48:12","trueBody":{"id":2534,"nodeType":"Block","src":"10844:33:12","statements":[{"expression":{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2519,"id":2533,"nodeType":"Return","src":"10858:8:12"}]}},{"body":{"id":2568,"nodeType":"Block","src":"10906:532:12","statements":[{"assignments":[2540],"declarations":[{"constant":false,"id":2540,"mutability":"mutable","name":"mid","nameLocation":"10928:3:12","nodeType":"VariableDeclaration","scope":2568,"src":"10920:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2546,"initialValue":{"arguments":[{"id":2543,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"10947:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2544,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"10952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2541,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"10934:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"10934:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2548,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11195:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2549,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2547,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2789,2815,2841],"referencedDeclaration":2841,"src":"11182:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3212_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3211,"src":"11182:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2552,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"11215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2566,"nodeType":"Block","src":"11385:43:12","statements":[{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2563,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11410:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"11403:10:12"}]},"id":2567,"nodeType":"IfStatement","src":"11178:250:12","trueBody":{"id":2561,"nodeType":"Block","src":"11224:155:12","statements":[{"id":2560,"nodeType":"UncheckedBlock","src":"11301:64:12","statements":[{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2554,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"11333:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11339:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"11333:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"10894:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2537,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"10900:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2569,"nodeType":"WhileStatement","src":"10887:551:12"},{"expression":{"id":2570,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"11455:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2519,"id":2571,"nodeType":"Return","src":"11448:10:12"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"10245:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:12","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"array","nameLocation":"10700:5:12","nodeType":"VariableDeclaration","scope":2573,"src":"10682:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"nodeType":"ArrayTypeName","src":"10682:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"element","nameLocation":"10715:7:12","nodeType":"VariableDeclaration","scope":2573,"src":"10707:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:12"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2573,"src":"10747:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:12"},"scope":2914,"src":"10662:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2636,"nodeType":"Block","src":"11982:709:12","statements":[{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"low","nameLocation":"12000:3:12","nodeType":"VariableDeclaration","scope":2636,"src":"11992:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2587,"initialValue":{"hexValue":"30","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:12"},{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"high","nameLocation":"12025:4:12","nodeType":"VariableDeclaration","scope":2636,"src":"12017:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2592,"initialValue":{"expression":{"id":2590,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"12032:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:12","memberName":"length","nodeType":"MemberAccess","src":"12032:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2593,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"12059:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2599,"nodeType":"IfStatement","src":"12055:48:12","trueBody":{"id":2598,"nodeType":"Block","src":"12070:33:12","statements":[{"expression":{"hexValue":"30","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2583,"id":2597,"nodeType":"Return","src":"12084:8:12"}]}},{"body":{"id":2632,"nodeType":"Block","src":"12132:532:12","statements":[{"assignments":[2604],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"mid","nameLocation":"12154:3:12","nodeType":"VariableDeclaration","scope":2632,"src":"12146:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2610,"initialValue":{"arguments":[{"id":2607,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"12173:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2608,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"12178:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2605,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"12160:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"12160:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2612,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"12421:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2613,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"12428:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2789,2815,2841],"referencedDeclaration":2841,"src":"12408:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3212_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3211,"src":"12408:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2616,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"12441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2630,"nodeType":"Block","src":"12499:155:12","statements":[{"id":2629,"nodeType":"UncheckedBlock","src":"12576:64:12","statements":[{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2623,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"12608:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"12614:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"12608:13:12"}]}]},"id":2631,"nodeType":"IfStatement","src":"12404:250:12","trueBody":{"id":2622,"nodeType":"Block","src":"12450:43:12","statements":[{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2618,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"12468:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2619,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"12475:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ExpressionStatement","src":"12468:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"12120:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2601,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"12126:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2633,"nodeType":"WhileStatement","src":"12113:551:12"},{"expression":{"id":2634,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"12681:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2583,"id":2635,"nodeType":"Return","src":"12674:10:12"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"11471:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2637,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:12","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"array","nameLocation":"11926:5:12","nodeType":"VariableDeclaration","scope":2637,"src":"11908:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2576,"nodeType":"ArrayTypeName","src":"11908:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"element","nameLocation":"11941:7:12","nodeType":"VariableDeclaration","scope":2637,"src":"11933:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:12"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2637,"src":"11973:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:12"},"scope":2914,"src":"11888:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2699,"nodeType":"Block","src":"12875:709:12","statements":[{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"low","nameLocation":"12893:3:12","nodeType":"VariableDeclaration","scope":2699,"src":"12885:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2651,"initialValue":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:12"},{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"high","nameLocation":"12918:4:12","nodeType":"VariableDeclaration","scope":2699,"src":"12910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2656,"initialValue":{"expression":{"id":2654,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"12925:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:12","memberName":"length","nodeType":"MemberAccess","src":"12925:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"12952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"12948:48:12","trueBody":{"id":2662,"nodeType":"Block","src":"12963:33:12","statements":[{"expression":{"hexValue":"30","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2647,"id":2661,"nodeType":"Return","src":"12977:8:12"}]}},{"body":{"id":2695,"nodeType":"Block","src":"13025:532:12","statements":[{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"mid","nameLocation":"13047:3:12","nodeType":"VariableDeclaration","scope":2695,"src":"13039:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2674,"initialValue":{"arguments":[{"id":2671,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"13066:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2672,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13071:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2669,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"13053:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"13053:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2676,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"13320:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2677,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13327:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2854,2867,2880],"referencedDeclaration":2880,"src":"13301:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2679,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"13334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2693,"nodeType":"Block","src":"13504:43:12","statements":[{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13522:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2690,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13529:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"13522:10:12"}]},"id":2694,"nodeType":"IfStatement","src":"13297:250:12","trueBody":{"id":2688,"nodeType":"Block","src":"13343:155:12","statements":[{"id":2687,"nodeType":"UncheckedBlock","src":"13420:64:12","statements":[{"expression":{"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"13452:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2686,"nodeType":"ExpressionStatement","src":"13452:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"13013:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2665,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13019:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2696,"nodeType":"WhileStatement","src":"13006:551:12"},{"expression":{"id":2697,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"13574:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2647,"id":2698,"nodeType":"Return","src":"13567:10:12"}]},"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"12697:74:12","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:12","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"array","nameLocation":"12819:5:12","nodeType":"VariableDeclaration","scope":2700,"src":"12802:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2640,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"element","nameLocation":"12834:7:12","nodeType":"VariableDeclaration","scope":2700,"src":"12826:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:12"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"12866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:12"},"scope":2914,"src":"12776:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"13768:709:12","statements":[{"assignments":[2712],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"low","nameLocation":"13786:3:12","nodeType":"VariableDeclaration","scope":2762,"src":"13778:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2714,"initialValue":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:12"},{"assignments":[2716],"declarations":[{"constant":false,"id":2716,"mutability":"mutable","name":"high","nameLocation":"13811:4:12","nodeType":"VariableDeclaration","scope":2762,"src":"13803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2719,"initialValue":{"expression":{"id":2717,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"13818:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:12","memberName":"length","nodeType":"MemberAccess","src":"13818:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"13845:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"nodeType":"IfStatement","src":"13841:48:12","trueBody":{"id":2725,"nodeType":"Block","src":"13856:33:12","statements":[{"expression":{"hexValue":"30","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2710,"id":2724,"nodeType":"Return","src":"13870:8:12"}]}},{"body":{"id":2758,"nodeType":"Block","src":"13918:532:12","statements":[{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"mid","nameLocation":"13940:3:12","nodeType":"VariableDeclaration","scope":2758,"src":"13932:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2734,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"13959:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2735,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"13964:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2732,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"13946:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"13946:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2739,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"14213:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2740,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14220:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2738,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2854,2867,2880],"referencedDeclaration":2880,"src":"14194:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2742,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"14227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2756,"nodeType":"Block","src":"14285:155:12","statements":[{"id":2755,"nodeType":"UncheckedBlock","src":"14362:64:12","statements":[{"expression":{"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2749,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14394:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14400:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2754,"nodeType":"ExpressionStatement","src":"14394:13:12"}]}]},"id":2757,"nodeType":"IfStatement","src":"14190:250:12","trueBody":{"id":2748,"nodeType":"Block","src":"14236:43:12","statements":[{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"14254:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2745,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14261:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"14254:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"13906:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2728,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"13912:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2759,"nodeType":"WhileStatement","src":"13899:551:12"},{"expression":{"id":2760,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14467:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2710,"id":2761,"nodeType":"Return","src":"14460:10:12"}]},"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"13590:74:12","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:12","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"array","nameLocation":"13712:5:12","nodeType":"VariableDeclaration","scope":2763,"src":"13695:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ArrayTypeName","src":"13695:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"element","nameLocation":"13727:7:12","nodeType":"VariableDeclaration","scope":2763,"src":"13719:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:12"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"13759:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:12"},"scope":2914,"src":"13669:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2788,"nodeType":"Block","src":"14793:167:12","statements":[{"assignments":[2776],"declarations":[{"constant":false,"id":2776,"mutability":"mutable","name":"slot","nameLocation":"14811:4:12","nodeType":"VariableDeclaration","scope":2788,"src":"14803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2777,"nodeType":"VariableDeclarationStatement","src":"14803:12:12"},{"AST":{"nativeSrc":"14850:40:12","nodeType":"YulBlock","src":"14850:40:12","statements":[{"nativeSrc":"14864:16:12","nodeType":"YulAssignment","src":"14864:16:12","value":{"name":"arr.slot","nativeSrc":"14872:8:12","nodeType":"YulIdentifier","src":"14872:8:12"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:12","nodeType":"YulIdentifier","src":"14864:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2767,"isOffset":false,"isSlot":true,"src":"14872:8:12","suffix":"slot","valueSize":1},{"declaration":2776,"isOffset":false,"isSlot":false,"src":"14864:4:12","valueSize":1}],"flags":["memory-safe"],"id":2778,"nodeType":"InlineAssembly","src":"14825:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2783,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"14932:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2779,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"14906:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3112,"src":"14906:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"14906:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3232,"src":"14906:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3203_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3203_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2774,"id":2787,"nodeType":"Return","src":"14899:54:12"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"14483:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2789,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:12","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"arr","nameLocation":"14719:3:12","nodeType":"VariableDeclaration","scope":2789,"src":"14701:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2766,"nodeType":"ArrayTypeName","src":"14701:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"pos","nameLocation":"14732:3:12","nodeType":"VariableDeclaration","scope":2789,"src":"14724:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:12"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2789,"src":"14760:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3203_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2772,"nodeType":"UserDefinedTypeName","pathNode":{"id":2771,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:12","14772:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3203,"src":"14760:23:12"},"referencedDeclaration":3203,"src":"14760:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3203_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:12"},"scope":2914,"src":"14679:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"15276:167:12","statements":[{"assignments":[2802],"declarations":[{"constant":false,"id":2802,"mutability":"mutable","name":"slot","nameLocation":"15294:4:12","nodeType":"VariableDeclaration","scope":2814,"src":"15286:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2803,"nodeType":"VariableDeclarationStatement","src":"15286:12:12"},{"AST":{"nativeSrc":"15333:40:12","nodeType":"YulBlock","src":"15333:40:12","statements":[{"nativeSrc":"15347:16:12","nodeType":"YulAssignment","src":"15347:16:12","value":{"name":"arr.slot","nativeSrc":"15355:8:12","nodeType":"YulIdentifier","src":"15355:8:12"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:12","nodeType":"YulIdentifier","src":"15347:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2793,"isOffset":false,"isSlot":true,"src":"15355:8:12","suffix":"slot","valueSize":1},{"declaration":2802,"isOffset":false,"isSlot":false,"src":"15347:4:12","valueSize":1}],"flags":["memory-safe"],"id":2804,"nodeType":"InlineAssembly","src":"15308:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2809,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"15415:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2805,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"15389:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3112,"src":"15389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15389:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:12","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3254,"src":"15389:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3209_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3209_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2800,"id":2813,"nodeType":"Return","src":"15382:54:12"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"14966:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:12","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"arr","nameLocation":"15202:3:12","nodeType":"VariableDeclaration","scope":2815,"src":"15184:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2792,"nodeType":"ArrayTypeName","src":"15184:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"pos","nameLocation":"15215:3:12","nodeType":"VariableDeclaration","scope":2815,"src":"15207:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:12"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"15243:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3209_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2798,"nodeType":"UserDefinedTypeName","pathNode":{"id":2797,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:12","15255:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3209,"src":"15243:23:12"},"referencedDeclaration":3209,"src":"15243:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3209_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:12"},"scope":2914,"src":"15162:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"15759:167:12","statements":[{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"slot","nameLocation":"15777:4:12","nodeType":"VariableDeclaration","scope":2840,"src":"15769:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2829,"nodeType":"VariableDeclarationStatement","src":"15769:12:12"},{"AST":{"nativeSrc":"15816:40:12","nodeType":"YulBlock","src":"15816:40:12","statements":[{"nativeSrc":"15830:16:12","nodeType":"YulAssignment","src":"15830:16:12","value":{"name":"arr.slot","nativeSrc":"15838:8:12","nodeType":"YulIdentifier","src":"15838:8:12"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:12","nodeType":"YulIdentifier","src":"15830:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2819,"isOffset":false,"isSlot":true,"src":"15838:8:12","suffix":"slot","valueSize":1},{"declaration":2828,"isOffset":false,"isSlot":false,"src":"15830:4:12","valueSize":1}],"flags":["memory-safe"],"id":2830,"nodeType":"InlineAssembly","src":"15791:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2835,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"15898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2831,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"15872:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3112,"src":"15872:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15872:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:12","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"15872:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3212_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2826,"id":2839,"nodeType":"Return","src":"15865:54:12"}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"15449:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:12","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"arr","nameLocation":"15685:3:12","nodeType":"VariableDeclaration","scope":2841,"src":"15667:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ArrayTypeName","src":"15667:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"pos","nameLocation":"15698:3:12","nodeType":"VariableDeclaration","scope":2841,"src":"15690:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:12"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"15726:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:12","15738:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"15726:23:12"},"referencedDeclaration":3212,"src":"15726:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:12"},"scope":2914,"src":"15645:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"16227:98:12","statements":[{"AST":{"nativeSrc":"16246:73:12","nodeType":"YulBlock","src":"16246:73:12","statements":[{"nativeSrc":"16260:49:12","nodeType":"YulAssignment","src":"16260:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:12","nodeType":"YulIdentifier","src":"16281:3:12"},{"kind":"number","nativeSrc":"16286:4:12","nodeType":"YulLiteral","src":"16286:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:12","nodeType":"YulIdentifier","src":"16277:3:12"},"nativeSrc":"16277:14:12","nodeType":"YulFunctionCall","src":"16277:14:12"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:12","nodeType":"YulIdentifier","src":"16297:3:12"},{"kind":"number","nativeSrc":"16302:4:12","nodeType":"YulLiteral","src":"16302:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:12","nodeType":"YulIdentifier","src":"16293:3:12"},"nativeSrc":"16293:14:12","nodeType":"YulFunctionCall","src":"16293:14:12"}],"functionName":{"name":"add","nativeSrc":"16273:3:12","nodeType":"YulIdentifier","src":"16273:3:12"},"nativeSrc":"16273:35:12","nodeType":"YulFunctionCall","src":"16273:35:12"}],"functionName":{"name":"mload","nativeSrc":"16267:5:12","nodeType":"YulIdentifier","src":"16267:5:12"},"nativeSrc":"16267:42:12","nodeType":"YulFunctionCall","src":"16267:42:12"},"variableNames":[{"name":"res","nativeSrc":"16260:3:12","nodeType":"YulIdentifier","src":"16260:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2845,"isOffset":false,"isSlot":false,"src":"16281:3:12","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"16297:3:12","valueSize":1},{"declaration":2850,"isOffset":false,"isSlot":false,"src":"16260:3:12","valueSize":1}],"id":2852,"nodeType":"InlineAssembly","src":"16237:82:12"}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"15932:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:12","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"arr","nameLocation":"16173:3:12","nodeType":"VariableDeclaration","scope":2854,"src":"16156:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2844,"nodeType":"ArrayTypeName","src":"16156:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"pos","nameLocation":"16186:3:12","nodeType":"VariableDeclaration","scope":2854,"src":"16178:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:12"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"res","nameLocation":"16222:3:12","nodeType":"VariableDeclaration","scope":2854,"src":"16214:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:12"},"scope":2914,"src":"16128:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2866,"nodeType":"Block","src":"16626:98:12","statements":[{"AST":{"nativeSrc":"16645:73:12","nodeType":"YulBlock","src":"16645:73:12","statements":[{"nativeSrc":"16659:49:12","nodeType":"YulAssignment","src":"16659:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:12","nodeType":"YulIdentifier","src":"16680:3:12"},{"kind":"number","nativeSrc":"16685:4:12","nodeType":"YulLiteral","src":"16685:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:12","nodeType":"YulIdentifier","src":"16676:3:12"},"nativeSrc":"16676:14:12","nodeType":"YulFunctionCall","src":"16676:14:12"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:12","nodeType":"YulIdentifier","src":"16696:3:12"},{"kind":"number","nativeSrc":"16701:4:12","nodeType":"YulLiteral","src":"16701:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:12","nodeType":"YulIdentifier","src":"16692:3:12"},"nativeSrc":"16692:14:12","nodeType":"YulFunctionCall","src":"16692:14:12"}],"functionName":{"name":"add","nativeSrc":"16672:3:12","nodeType":"YulIdentifier","src":"16672:3:12"},"nativeSrc":"16672:35:12","nodeType":"YulFunctionCall","src":"16672:35:12"}],"functionName":{"name":"mload","nativeSrc":"16666:5:12","nodeType":"YulIdentifier","src":"16666:5:12"},"nativeSrc":"16666:42:12","nodeType":"YulFunctionCall","src":"16666:42:12"},"variableNames":[{"name":"res","nativeSrc":"16659:3:12","nodeType":"YulIdentifier","src":"16659:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2858,"isOffset":false,"isSlot":false,"src":"16680:3:12","valueSize":1},{"declaration":2860,"isOffset":false,"isSlot":false,"src":"16696:3:12","valueSize":1},{"declaration":2863,"isOffset":false,"isSlot":false,"src":"16659:3:12","valueSize":1}],"id":2865,"nodeType":"InlineAssembly","src":"16636:82:12"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"16331:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2867,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:12","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"arr","nameLocation":"16572:3:12","nodeType":"VariableDeclaration","scope":2867,"src":"16555:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2857,"nodeType":"ArrayTypeName","src":"16555:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"pos","nameLocation":"16585:3:12","nodeType":"VariableDeclaration","scope":2867,"src":"16577:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:12"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"res","nameLocation":"16621:3:12","nodeType":"VariableDeclaration","scope":2867,"src":"16613:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:12"},"scope":2914,"src":"16527:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"17025:98:12","statements":[{"AST":{"nativeSrc":"17044:73:12","nodeType":"YulBlock","src":"17044:73:12","statements":[{"nativeSrc":"17058:49:12","nodeType":"YulAssignment","src":"17058:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:12","nodeType":"YulIdentifier","src":"17079:3:12"},{"kind":"number","nativeSrc":"17084:4:12","nodeType":"YulLiteral","src":"17084:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:12","nodeType":"YulIdentifier","src":"17075:3:12"},"nativeSrc":"17075:14:12","nodeType":"YulFunctionCall","src":"17075:14:12"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:12","nodeType":"YulIdentifier","src":"17095:3:12"},{"kind":"number","nativeSrc":"17100:4:12","nodeType":"YulLiteral","src":"17100:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:12","nodeType":"YulIdentifier","src":"17091:3:12"},"nativeSrc":"17091:14:12","nodeType":"YulFunctionCall","src":"17091:14:12"}],"functionName":{"name":"add","nativeSrc":"17071:3:12","nodeType":"YulIdentifier","src":"17071:3:12"},"nativeSrc":"17071:35:12","nodeType":"YulFunctionCall","src":"17071:35:12"}],"functionName":{"name":"mload","nativeSrc":"17065:5:12","nodeType":"YulIdentifier","src":"17065:5:12"},"nativeSrc":"17065:42:12","nodeType":"YulFunctionCall","src":"17065:42:12"},"variableNames":[{"name":"res","nativeSrc":"17058:3:12","nodeType":"YulIdentifier","src":"17058:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2871,"isOffset":false,"isSlot":false,"src":"17079:3:12","valueSize":1},{"declaration":2873,"isOffset":false,"isSlot":false,"src":"17095:3:12","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"17058:3:12","valueSize":1}],"id":2878,"nodeType":"InlineAssembly","src":"17035:82:12"}]},"documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"16730:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:12","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"arr","nameLocation":"16971:3:12","nodeType":"VariableDeclaration","scope":2880,"src":"16954:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ArrayTypeName","src":"16954:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"pos","nameLocation":"16984:3:12","nodeType":"VariableDeclaration","scope":2880,"src":"16976:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:12"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"res","nameLocation":"17020:3:12","nodeType":"VariableDeclaration","scope":2880,"src":"17012:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:12"},"scope":2914,"src":"16926:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2890,"nodeType":"Block","src":"17439:88:12","statements":[{"AST":{"nativeSrc":"17474:47:12","nodeType":"YulBlock","src":"17474:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:12","nodeType":"YulIdentifier","src":"17495:10:12"},{"name":"len","nativeSrc":"17507:3:12","nodeType":"YulIdentifier","src":"17507:3:12"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:12","nodeType":"YulIdentifier","src":"17488:6:12"},"nativeSrc":"17488:23:12","nodeType":"YulFunctionCall","src":"17488:23:12"},"nativeSrc":"17488:23:12","nodeType":"YulExpressionStatement","src":"17488:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2884,"isOffset":false,"isSlot":true,"src":"17495:10:12","suffix":"slot","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"17507:3:12","valueSize":1}],"flags":["memory-safe"],"id":2889,"nodeType":"InlineAssembly","src":"17449:72:12"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"17129:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:12","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"array","nameLocation":"17410:5:12","nodeType":"VariableDeclaration","scope":2891,"src":"17392:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2883,"nodeType":"ArrayTypeName","src":"17392:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"len","nameLocation":"17425:3:12","nodeType":"VariableDeclaration","scope":2891,"src":"17417:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:12"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[],"src":"17439:0:12"},"scope":2914,"src":"17367:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2901,"nodeType":"Block","src":"17843:88:12","statements":[{"AST":{"nativeSrc":"17878:47:12","nodeType":"YulBlock","src":"17878:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:12","nodeType":"YulIdentifier","src":"17899:10:12"},{"name":"len","nativeSrc":"17911:3:12","nodeType":"YulIdentifier","src":"17911:3:12"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:12","nodeType":"YulIdentifier","src":"17892:6:12"},"nativeSrc":"17892:23:12","nodeType":"YulFunctionCall","src":"17892:23:12"},"nativeSrc":"17892:23:12","nodeType":"YulExpressionStatement","src":"17892:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2895,"isOffset":false,"isSlot":true,"src":"17899:10:12","suffix":"slot","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"17911:3:12","valueSize":1}],"flags":["memory-safe"],"id":2900,"nodeType":"InlineAssembly","src":"17853:72:12"}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"17533:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:12","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"array","nameLocation":"17814:5:12","nodeType":"VariableDeclaration","scope":2902,"src":"17796:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2894,"nodeType":"ArrayTypeName","src":"17796:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"len","nameLocation":"17829:3:12","nodeType":"VariableDeclaration","scope":2902,"src":"17821:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:12"},"returnParameters":{"id":2899,"nodeType":"ParameterList","parameters":[],"src":"17843:0:12"},"scope":2914,"src":"17771:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"18247:88:12","statements":[{"AST":{"nativeSrc":"18282:47:12","nodeType":"YulBlock","src":"18282:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:12","nodeType":"YulIdentifier","src":"18303:10:12"},{"name":"len","nativeSrc":"18315:3:12","nodeType":"YulIdentifier","src":"18315:3:12"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:12","nodeType":"YulIdentifier","src":"18296:6:12"},"nativeSrc":"18296:23:12","nodeType":"YulFunctionCall","src":"18296:23:12"},"nativeSrc":"18296:23:12","nodeType":"YulExpressionStatement","src":"18296:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2906,"isOffset":false,"isSlot":true,"src":"18303:10:12","suffix":"slot","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"18315:3:12","valueSize":1}],"flags":["memory-safe"],"id":2911,"nodeType":"InlineAssembly","src":"18257:72:12"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"17937:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:12","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"array","nameLocation":"18218:5:12","nodeType":"VariableDeclaration","scope":2913,"src":"18200:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ArrayTypeName","src":"18200:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"len","nameLocation":"18233:3:12","nodeType":"VariableDeclaration","scope":2913,"src":"18225:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:12"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[],"src":"18247:0:12"},"scope":2914,"src":"18175:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2915,"src":"459:17878:12","usedErrors":[],"usedEvents":[]}],"src":"183:18155:12"},"id":12},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2946]},"id":2947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2916,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"131:92:13","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2946,"linearizedBaseContracts":[2946],"name":"Comparators","nameLocation":"232:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2930,"nodeType":"Block","src":"313:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"334:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2925,"id":2929,"nodeType":"Return","src":"323:12:13"}]},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:13","nodeType":"FunctionDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"a","nameLocation":"270:1:13","nodeType":"VariableDeclaration","scope":2931,"src":"262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"b","nameLocation":"281:1:13","nodeType":"VariableDeclaration","scope":2931,"src":"273:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:13"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2931,"src":"307:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:13"},"scope":2946,"src":"250:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"411:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"428:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"432:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2939,"id":2943,"nodeType":"Return","src":"421:12:13"}]},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:13","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"a","nameLocation":"368:1:13","nodeType":"VariableDeclaration","scope":2945,"src":"360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"b","nameLocation":"379:1:13","nodeType":"VariableDeclaration","scope":2945,"src":"371:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:13"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"405:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2937,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:13"},"scope":2946,"src":"348:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2947,"src":"224:218:13","usedErrors":[],"usedEvents":[]}],"src":"105:338:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2998]},"id":2999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2948,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2998,"linearizedBaseContracts":[2998],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":2953,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":2998,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":2957,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":2998,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":2961,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":2998,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":2965,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":2998,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2966,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":2969,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":2998,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":2973,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":2998,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":2977,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":2998,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":2981,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":2998,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":2985,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":2998,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":2989,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":2998,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nativeSrc":"1854:110:14","nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:14","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:14","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:14","nodeType":"YulIdentifier","src":"1868:6:14"},"nativeSrc":"1868:24:14","nodeType":"YulFunctionCall","src":"1868:24:14"},"nativeSrc":"1868:24:14","nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:14","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:14","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:14","nodeType":"YulIdentifier","src":"1905:6:14"},"nativeSrc":"1905:18:14","nodeType":"YulFunctionCall","src":"1905:18:14"},"nativeSrc":"1905:18:14","nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:14","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:14","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:14","nodeType":"YulIdentifier","src":"1936:6:14"},"nativeSrc":"1936:18:14","nodeType":"YulFunctionCall","src":"1936:18:14"},"nativeSrc":"1936:18:14","nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2992,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":2995,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":2997,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":2998,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2999,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3067]},"id":3068,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3000,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"135:894:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3067,"linearizedBaseContracts":[3067],"name":"ReentrancyGuard","nameLocation":"1048:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3004,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:15","nodeType":"VariableDeclaration","scope":3067,"src":"1818:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3007,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:15","nodeType":"VariableDeclaration","scope":3067,"src":"1864:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3009,"mutability":"mutable","name":"_status","nameLocation":"1923:7:15","nodeType":"VariableDeclaration","scope":3067,"src":"1907:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"1937:52:15","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3012,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:15","nodeType":"ErrorDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[],"src":"2028:2:15"},"src":"1994:37:15"},{"body":{"id":3019,"nodeType":"Block","src":"2051:38:15","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3016,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2071:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"2061:21:15"}]},"id":3020,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[],"src":"2048:2:15"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[],"src":"2051:0:15"},"scope":3067,"src":"2037:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"2490:79:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3023,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"2500:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"ExpressionStatement","src":"2500:21:15"},{"id":3026,"nodeType":"PlaceholderStatement","src":"2531:1:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3027,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2542:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"ExpressionStatement","src":"2542:20:15"}]},"documentation":{"id":3021,"nodeType":"StructuredDocumentation","src":"2095:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3031,"name":"nonReentrant","nameLocation":"2475:12:15","nodeType":"ModifierDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[],"src":"2487:2:15"},"src":"2466:103:15","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"2614:268:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3035,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3041,"nodeType":"IfStatement","src":"2698:86:15","trueBody":{"id":3040,"nodeType":"Block","src":"2722:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3037,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2743:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"RevertStatement","src":"2736:37:15"}]}},{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3043,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ExpressionStatement","src":"2858:17:15"}]},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:15","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[],"src":"2614:0:15"},"scope":3067,"src":"2575:307:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3054,"nodeType":"Block","src":"2926:170:15","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3051,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"3068:21:15"}]},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:15","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"2915:2:15"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"2926:0:15"},"scope":3067,"src":"2888:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3065,"nodeType":"Block","src":"3339:42:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"3356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3062,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"3367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3060,"id":3064,"nodeType":"Return","src":"3349:25:15"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"3102:168:15","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:15","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[],"src":"3307:2:15"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"3333:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3058,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:15"},"scope":3067,"src":"3275:106:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3068,"src":"1030:2353:15","usedErrors":[3012],"usedEvents":[]}],"src":"109:3275:15"},"id":15},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3197]},"id":3198,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3069,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"225:1373:16","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3197,"linearizedBaseContracts":[3197],"name":"SlotDerivation","nameLocation":"1607:14:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3079,"nodeType":"Block","src":"1790:194:16","statements":[{"AST":{"nativeSrc":"1825:153:16","nodeType":"YulBlock","src":"1825:153:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:16","nodeType":"YulLiteral","src":"1846:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:16","nodeType":"YulIdentifier","src":"1870:9:16"},{"kind":"number","nativeSrc":"1881:4:16","nodeType":"YulLiteral","src":"1881:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:16","nodeType":"YulIdentifier","src":"1866:3:16"},"nativeSrc":"1866:20:16","nodeType":"YulFunctionCall","src":"1866:20:16"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:16","nodeType":"YulIdentifier","src":"1894:9:16"}],"functionName":{"name":"mload","nativeSrc":"1888:5:16","nodeType":"YulIdentifier","src":"1888:5:16"},"nativeSrc":"1888:16:16","nodeType":"YulFunctionCall","src":"1888:16:16"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:16","nodeType":"YulIdentifier","src":"1856:9:16"},"nativeSrc":"1856:49:16","nodeType":"YulFunctionCall","src":"1856:49:16"},{"kind":"number","nativeSrc":"1907:1:16","nodeType":"YulLiteral","src":"1907:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:16","nodeType":"YulIdentifier","src":"1852:3:16"},"nativeSrc":"1852:57:16","nodeType":"YulFunctionCall","src":"1852:57:16"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:16","nodeType":"YulIdentifier","src":"1839:6:16"},"nativeSrc":"1839:71:16","nodeType":"YulFunctionCall","src":"1839:71:16"},"nativeSrc":"1839:71:16","nodeType":"YulExpressionStatement","src":"1839:71:16"},{"nativeSrc":"1923:45:16","nodeType":"YulAssignment","src":"1923:45:16","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:16","nodeType":"YulLiteral","src":"1945:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:16","nodeType":"YulLiteral","src":"1951:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:16","nodeType":"YulIdentifier","src":"1935:9:16"},"nativeSrc":"1935:21:16","nodeType":"YulFunctionCall","src":"1935:21:16"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:16","nodeType":"YulLiteral","src":"1962:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:16","nodeType":"YulIdentifier","src":"1958:3:16"},"nativeSrc":"1958:9:16","nodeType":"YulFunctionCall","src":"1958:9:16"}],"functionName":{"name":"and","nativeSrc":"1931:3:16","nodeType":"YulIdentifier","src":"1931:3:16"},"nativeSrc":"1931:37:16","nodeType":"YulFunctionCall","src":"1931:37:16"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:16","nodeType":"YulIdentifier","src":"1923:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3073,"isOffset":false,"isSlot":false,"src":"1870:9:16","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"1894:9:16","valueSize":1},{"declaration":3076,"isOffset":false,"isSlot":false,"src":"1923:4:16","valueSize":1}],"flags":["memory-safe"],"id":3078,"nodeType":"InlineAssembly","src":"1800:178:16"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"1628:74:16","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:16","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:16","nodeType":"VariableDeclaration","scope":3080,"src":"1728:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3072,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:16"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"slot","nameLocation":"1784:4:16","nodeType":"VariableDeclaration","scope":3080,"src":"1776:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:16"},"scope":3197,"src":"1707:277:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"2176:86:16","statements":[{"id":3100,"nodeType":"UncheckedBlock","src":"2186:70:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3094,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2233:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:16","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3096,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2241:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:16","typeDescriptions":{}}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3089,"id":3099,"nodeType":"Return","src":"2210:35:16"}]}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"1990:99:16","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:16","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"slot","nameLocation":"2118:4:16","nodeType":"VariableDeclaration","scope":3102,"src":"2110:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"pos","nameLocation":"2132:3:16","nodeType":"VariableDeclaration","scope":3102,"src":"2124:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:16"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"result","nameLocation":"2168:6:16","nodeType":"VariableDeclaration","scope":3102,"src":"2160:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:16"},"scope":3197,"src":"2094:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"2465:127:16","statements":[{"AST":{"nativeSrc":"2500:86:16","nodeType":"YulBlock","src":"2500:86:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:16","nodeType":"YulLiteral","src":"2521:4:16","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:16","nodeType":"YulIdentifier","src":"2527:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:16","nodeType":"YulIdentifier","src":"2514:6:16"},"nativeSrc":"2514:18:16","nodeType":"YulFunctionCall","src":"2514:18:16"},"nativeSrc":"2514:18:16","nodeType":"YulExpressionStatement","src":"2514:18:16"},{"nativeSrc":"2545:31:16","nodeType":"YulAssignment","src":"2545:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:16","nodeType":"YulLiteral","src":"2565:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:16","nodeType":"YulLiteral","src":"2571:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:16","nodeType":"YulIdentifier","src":"2555:9:16"},"nativeSrc":"2555:21:16","nodeType":"YulFunctionCall","src":"2555:21:16"},"variableNames":[{"name":"result","nativeSrc":"2545:6:16","nodeType":"YulIdentifier","src":"2545:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3108,"isOffset":false,"isSlot":false,"src":"2545:6:16","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"2527:4:16","valueSize":1}],"flags":["memory-safe"],"id":3110,"nodeType":"InlineAssembly","src":"2475:111:16"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"2268:118:16","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:16","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"slot","nameLocation":"2420:4:16","nodeType":"VariableDeclaration","scope":3112,"src":"2412:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:16"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"result","nameLocation":"2457:6:16","nodeType":"VariableDeclaration","scope":3112,"src":"2449:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:16"},"scope":3197,"src":"2391:201:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"2770:179:16","statements":[{"AST":{"nativeSrc":"2805:138:16","nodeType":"YulBlock","src":"2805:138:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:16","nodeType":"YulLiteral","src":"2826:4:16","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:16","nodeType":"YulIdentifier","src":"2836:3:16"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:16","nodeType":"YulLiteral","src":"2845:2:16","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:16","nodeType":"YulLiteral","src":"2853:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:16","nodeType":"YulIdentifier","src":"2849:3:16"},"nativeSrc":"2849:6:16","nodeType":"YulFunctionCall","src":"2849:6:16"}],"functionName":{"name":"shr","nativeSrc":"2841:3:16","nodeType":"YulIdentifier","src":"2841:3:16"},"nativeSrc":"2841:15:16","nodeType":"YulFunctionCall","src":"2841:15:16"}],"functionName":{"name":"and","nativeSrc":"2832:3:16","nodeType":"YulIdentifier","src":"2832:3:16"},"nativeSrc":"2832:25:16","nodeType":"YulFunctionCall","src":"2832:25:16"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:16","nodeType":"YulIdentifier","src":"2819:6:16"},"nativeSrc":"2819:39:16","nodeType":"YulFunctionCall","src":"2819:39:16"},"nativeSrc":"2819:39:16","nodeType":"YulExpressionStatement","src":"2819:39:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:16","nodeType":"YulLiteral","src":"2878:4:16","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:16","nodeType":"YulIdentifier","src":"2884:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:16","nodeType":"YulIdentifier","src":"2871:6:16"},"nativeSrc":"2871:18:16","nodeType":"YulFunctionCall","src":"2871:18:16"},"nativeSrc":"2871:18:16","nodeType":"YulExpressionStatement","src":"2871:18:16"},{"nativeSrc":"2902:31:16","nodeType":"YulAssignment","src":"2902:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:16","nodeType":"YulLiteral","src":"2922:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:16","nodeType":"YulLiteral","src":"2928:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:16","nodeType":"YulIdentifier","src":"2912:9:16"},"nativeSrc":"2912:21:16","nodeType":"YulFunctionCall","src":"2912:21:16"},"variableNames":[{"name":"result","nativeSrc":"2902:6:16","nodeType":"YulIdentifier","src":"2902:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3117,"isOffset":false,"isSlot":false,"src":"2836:3:16","valueSize":1},{"declaration":3120,"isOffset":false,"isSlot":false,"src":"2902:6:16","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"2884:4:16","valueSize":1}],"flags":["memory-safe"],"id":3122,"nodeType":"InlineAssembly","src":"2780:163:16"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"2598:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:16","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"slot","nameLocation":"2712:4:16","nodeType":"VariableDeclaration","scope":3124,"src":"2704:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"key","nameLocation":"2726:3:16","nodeType":"VariableDeclaration","scope":3124,"src":"2718:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:16"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"result","nameLocation":"2762:6:16","nodeType":"VariableDeclaration","scope":3124,"src":"2754:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:16"},"scope":3197,"src":"2681:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3135,"nodeType":"Block","src":"3124:173:16","statements":[{"AST":{"nativeSrc":"3159:132:16","nodeType":"YulBlock","src":"3159:132:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:16","nodeType":"YulLiteral","src":"3180:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:16","nodeType":"YulIdentifier","src":"3200:3:16"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:16","nodeType":"YulIdentifier","src":"3193:6:16"},"nativeSrc":"3193:11:16","nodeType":"YulFunctionCall","src":"3193:11:16"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:16","nodeType":"YulIdentifier","src":"3186:6:16"},"nativeSrc":"3186:19:16","nodeType":"YulFunctionCall","src":"3186:19:16"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:16","nodeType":"YulIdentifier","src":"3173:6:16"},"nativeSrc":"3173:33:16","nodeType":"YulFunctionCall","src":"3173:33:16"},"nativeSrc":"3173:33:16","nodeType":"YulExpressionStatement","src":"3173:33:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:16","nodeType":"YulLiteral","src":"3226:4:16","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:16","nodeType":"YulIdentifier","src":"3232:4:16"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:16","nodeType":"YulIdentifier","src":"3219:6:16"},"nativeSrc":"3219:18:16","nodeType":"YulFunctionCall","src":"3219:18:16"},"nativeSrc":"3219:18:16","nodeType":"YulExpressionStatement","src":"3219:18:16"},{"nativeSrc":"3250:31:16","nodeType":"YulAssignment","src":"3250:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:16","nodeType":"YulLiteral","src":"3270:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:16","nodeType":"YulLiteral","src":"3276:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:16","nodeType":"YulIdentifier","src":"3260:9:16"},"nativeSrc":"3260:21:16","nodeType":"YulFunctionCall","src":"3260:21:16"},"variableNames":[{"name":"result","nativeSrc":"3250:6:16","nodeType":"YulIdentifier","src":"3250:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3129,"isOffset":false,"isSlot":false,"src":"3200:3:16","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"3250:6:16","valueSize":1},{"declaration":3127,"isOffset":false,"isSlot":false,"src":"3232:4:16","valueSize":1}],"flags":["memory-safe"],"id":3134,"nodeType":"InlineAssembly","src":"3134:157:16"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"2955:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:16","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"slot","nameLocation":"3069:4:16","nodeType":"VariableDeclaration","scope":3136,"src":"3061:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"key","nameLocation":"3080:3:16","nodeType":"VariableDeclaration","scope":3136,"src":"3075:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:16"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"result","nameLocation":"3116:6:16","nodeType":"VariableDeclaration","scope":3136,"src":"3108:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:16"},"scope":3197,"src":"3038:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3147,"nodeType":"Block","src":"3475:157:16","statements":[{"AST":{"nativeSrc":"3510:116:16","nodeType":"YulBlock","src":"3510:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:16","nodeType":"YulLiteral","src":"3531:4:16","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:16","nodeType":"YulIdentifier","src":"3537:3:16"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:16","nodeType":"YulIdentifier","src":"3524:6:16"},"nativeSrc":"3524:17:16","nodeType":"YulFunctionCall","src":"3524:17:16"},"nativeSrc":"3524:17:16","nodeType":"YulExpressionStatement","src":"3524:17:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:16","nodeType":"YulLiteral","src":"3561:4:16","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:16","nodeType":"YulIdentifier","src":"3567:4:16"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:16","nodeType":"YulIdentifier","src":"3554:6:16"},"nativeSrc":"3554:18:16","nodeType":"YulFunctionCall","src":"3554:18:16"},"nativeSrc":"3554:18:16","nodeType":"YulExpressionStatement","src":"3554:18:16"},{"nativeSrc":"3585:31:16","nodeType":"YulAssignment","src":"3585:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:16","nodeType":"YulLiteral","src":"3605:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:16","nodeType":"YulLiteral","src":"3611:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:16","nodeType":"YulIdentifier","src":"3595:9:16"},"nativeSrc":"3595:21:16","nodeType":"YulFunctionCall","src":"3595:21:16"},"variableNames":[{"name":"result","nativeSrc":"3585:6:16","nodeType":"YulIdentifier","src":"3585:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3141,"isOffset":false,"isSlot":false,"src":"3537:3:16","valueSize":1},{"declaration":3144,"isOffset":false,"isSlot":false,"src":"3585:6:16","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"3567:4:16","valueSize":1}],"flags":["memory-safe"],"id":3146,"nodeType":"InlineAssembly","src":"3485:141:16"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"3303:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3148,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:16","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"slot","nameLocation":"3417:4:16","nodeType":"VariableDeclaration","scope":3148,"src":"3409:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"key","nameLocation":"3431:3:16","nodeType":"VariableDeclaration","scope":3148,"src":"3423:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:16"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"result","nameLocation":"3467:6:16","nodeType":"VariableDeclaration","scope":3148,"src":"3459:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:16"},"scope":3197,"src":"3386:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"3810:157:16","statements":[{"AST":{"nativeSrc":"3845:116:16","nodeType":"YulBlock","src":"3845:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:16","nodeType":"YulLiteral","src":"3866:4:16","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:16","nodeType":"YulIdentifier","src":"3872:3:16"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:16","nodeType":"YulIdentifier","src":"3859:6:16"},"nativeSrc":"3859:17:16","nodeType":"YulFunctionCall","src":"3859:17:16"},"nativeSrc":"3859:17:16","nodeType":"YulExpressionStatement","src":"3859:17:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:16","nodeType":"YulLiteral","src":"3896:4:16","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:16","nodeType":"YulIdentifier","src":"3902:4:16"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:16","nodeType":"YulIdentifier","src":"3889:6:16"},"nativeSrc":"3889:18:16","nodeType":"YulFunctionCall","src":"3889:18:16"},"nativeSrc":"3889:18:16","nodeType":"YulExpressionStatement","src":"3889:18:16"},{"nativeSrc":"3920:31:16","nodeType":"YulAssignment","src":"3920:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:16","nodeType":"YulLiteral","src":"3940:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:16","nodeType":"YulLiteral","src":"3946:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:16","nodeType":"YulIdentifier","src":"3930:9:16"},"nativeSrc":"3930:21:16","nodeType":"YulFunctionCall","src":"3930:21:16"},"variableNames":[{"name":"result","nativeSrc":"3920:6:16","nodeType":"YulIdentifier","src":"3920:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3153,"isOffset":false,"isSlot":false,"src":"3872:3:16","valueSize":1},{"declaration":3156,"isOffset":false,"isSlot":false,"src":"3920:6:16","valueSize":1},{"declaration":3151,"isOffset":false,"isSlot":false,"src":"3902:4:16","valueSize":1}],"flags":["memory-safe"],"id":3158,"nodeType":"InlineAssembly","src":"3820:141:16"}]},"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"3638:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:16","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"slot","nameLocation":"3752:4:16","nodeType":"VariableDeclaration","scope":3160,"src":"3744:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"key","nameLocation":"3766:3:16","nodeType":"VariableDeclaration","scope":3160,"src":"3758:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:16"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"result","nameLocation":"3802:6:16","nodeType":"VariableDeclaration","scope":3160,"src":"3794:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:16"},"scope":3197,"src":"3721:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"4144:157:16","statements":[{"AST":{"nativeSrc":"4179:116:16","nodeType":"YulBlock","src":"4179:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:16","nodeType":"YulLiteral","src":"4200:4:16","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:16","nodeType":"YulIdentifier","src":"4206:3:16"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:16","nodeType":"YulIdentifier","src":"4193:6:16"},"nativeSrc":"4193:17:16","nodeType":"YulFunctionCall","src":"4193:17:16"},"nativeSrc":"4193:17:16","nodeType":"YulExpressionStatement","src":"4193:17:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:16","nodeType":"YulLiteral","src":"4230:4:16","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:16","nodeType":"YulIdentifier","src":"4236:4:16"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:16","nodeType":"YulIdentifier","src":"4223:6:16"},"nativeSrc":"4223:18:16","nodeType":"YulFunctionCall","src":"4223:18:16"},"nativeSrc":"4223:18:16","nodeType":"YulExpressionStatement","src":"4223:18:16"},{"nativeSrc":"4254:31:16","nodeType":"YulAssignment","src":"4254:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:16","nodeType":"YulLiteral","src":"4274:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:16","nodeType":"YulLiteral","src":"4280:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:16","nodeType":"YulIdentifier","src":"4264:9:16"},"nativeSrc":"4264:21:16","nodeType":"YulFunctionCall","src":"4264:21:16"},"variableNames":[{"name":"result","nativeSrc":"4254:6:16","nodeType":"YulIdentifier","src":"4254:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3165,"isOffset":false,"isSlot":false,"src":"4206:3:16","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"4254:6:16","valueSize":1},{"declaration":3163,"isOffset":false,"isSlot":false,"src":"4236:4:16","valueSize":1}],"flags":["memory-safe"],"id":3170,"nodeType":"InlineAssembly","src":"4154:141:16"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"3973:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:16","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"slot","nameLocation":"4087:4:16","nodeType":"VariableDeclaration","scope":3172,"src":"4079:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"key","nameLocation":"4100:3:16","nodeType":"VariableDeclaration","scope":3172,"src":"4093:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3164,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:16"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"result","nameLocation":"4136:6:16","nodeType":"VariableDeclaration","scope":3172,"src":"4128:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:16"},"scope":3197,"src":"4056:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3183,"nodeType":"Block","src":"4485:326:16","statements":[{"AST":{"nativeSrc":"4520:285:16","nodeType":"YulBlock","src":"4520:285:16","statements":[{"nativeSrc":"4534:24:16","nodeType":"YulVariableDeclaration","src":"4534:24:16","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:16","nodeType":"YulIdentifier","src":"4554:3:16"}],"functionName":{"name":"mload","nativeSrc":"4548:5:16","nodeType":"YulIdentifier","src":"4548:5:16"},"nativeSrc":"4548:10:16","nodeType":"YulFunctionCall","src":"4548:10:16"},"variables":[{"name":"length","nativeSrc":"4538:6:16","nodeType":"YulTypedName","src":"4538:6:16","type":""}]},{"nativeSrc":"4571:27:16","nodeType":"YulVariableDeclaration","src":"4571:27:16","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:16","nodeType":"YulIdentifier","src":"4588:3:16"},{"kind":"number","nativeSrc":"4593:4:16","nodeType":"YulLiteral","src":"4593:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:16","nodeType":"YulIdentifier","src":"4584:3:16"},"nativeSrc":"4584:14:16","nodeType":"YulFunctionCall","src":"4584:14:16"},"variables":[{"name":"begin","nativeSrc":"4575:5:16","nodeType":"YulTypedName","src":"4575:5:16","type":""}]},{"nativeSrc":"4611:29:16","nodeType":"YulVariableDeclaration","src":"4611:29:16","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:16","nodeType":"YulIdentifier","src":"4626:5:16"},{"name":"length","nativeSrc":"4633:6:16","nodeType":"YulIdentifier","src":"4633:6:16"}],"functionName":{"name":"add","nativeSrc":"4622:3:16","nodeType":"YulIdentifier","src":"4622:3:16"},"nativeSrc":"4622:18:16","nodeType":"YulFunctionCall","src":"4622:18:16"},"variables":[{"name":"end","nativeSrc":"4615:3:16","nodeType":"YulTypedName","src":"4615:3:16","type":""}]},{"nativeSrc":"4653:23:16","nodeType":"YulVariableDeclaration","src":"4653:23:16","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:16","nodeType":"YulIdentifier","src":"4672:3:16"}],"functionName":{"name":"mload","nativeSrc":"4666:5:16","nodeType":"YulIdentifier","src":"4666:5:16"},"nativeSrc":"4666:10:16","nodeType":"YulFunctionCall","src":"4666:10:16"},"variables":[{"name":"cache","nativeSrc":"4657:5:16","nodeType":"YulTypedName","src":"4657:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:16","nodeType":"YulIdentifier","src":"4696:3:16"},{"name":"slot","nativeSrc":"4701:4:16","nodeType":"YulIdentifier","src":"4701:4:16"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:16","nodeType":"YulIdentifier","src":"4689:6:16"},"nativeSrc":"4689:17:16","nodeType":"YulFunctionCall","src":"4689:17:16"},"nativeSrc":"4689:17:16","nodeType":"YulExpressionStatement","src":"4689:17:16"},{"nativeSrc":"4719:45:16","nodeType":"YulAssignment","src":"4719:45:16","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:16","nodeType":"YulIdentifier","src":"4739:5:16"},{"arguments":[{"name":"length","nativeSrc":"4750:6:16","nodeType":"YulIdentifier","src":"4750:6:16"},{"kind":"number","nativeSrc":"4758:4:16","nodeType":"YulLiteral","src":"4758:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:16","nodeType":"YulIdentifier","src":"4746:3:16"},"nativeSrc":"4746:17:16","nodeType":"YulFunctionCall","src":"4746:17:16"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:16","nodeType":"YulIdentifier","src":"4729:9:16"},"nativeSrc":"4729:35:16","nodeType":"YulFunctionCall","src":"4729:35:16"},"variableNames":[{"name":"result","nativeSrc":"4719:6:16","nodeType":"YulIdentifier","src":"4719:6:16"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:16","nodeType":"YulIdentifier","src":"4784:3:16"},{"name":"cache","nativeSrc":"4789:5:16","nodeType":"YulIdentifier","src":"4789:5:16"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:16","nodeType":"YulIdentifier","src":"4777:6:16"},"nativeSrc":"4777:18:16","nodeType":"YulFunctionCall","src":"4777:18:16"},"nativeSrc":"4777:18:16","nodeType":"YulExpressionStatement","src":"4777:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3177,"isOffset":false,"isSlot":false,"src":"4554:3:16","valueSize":1},{"declaration":3177,"isOffset":false,"isSlot":false,"src":"4588:3:16","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"4719:6:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"4701:4:16","valueSize":1}],"flags":["memory-safe"],"id":3182,"nodeType":"InlineAssembly","src":"4495:310:16"}]},"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"4307:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:16","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"slot","nameLocation":"4421:4:16","nodeType":"VariableDeclaration","scope":3184,"src":"4413:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"key","nameLocation":"4441:3:16","nodeType":"VariableDeclaration","scope":3184,"src":"4427:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3176,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:16"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"result","nameLocation":"4477:6:16","nodeType":"VariableDeclaration","scope":3184,"src":"4469:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:16"},"scope":3197,"src":"4390:421:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3195,"nodeType":"Block","src":"4994:326:16","statements":[{"AST":{"nativeSrc":"5029:285:16","nodeType":"YulBlock","src":"5029:285:16","statements":[{"nativeSrc":"5043:24:16","nodeType":"YulVariableDeclaration","src":"5043:24:16","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:16","nodeType":"YulIdentifier","src":"5063:3:16"}],"functionName":{"name":"mload","nativeSrc":"5057:5:16","nodeType":"YulIdentifier","src":"5057:5:16"},"nativeSrc":"5057:10:16","nodeType":"YulFunctionCall","src":"5057:10:16"},"variables":[{"name":"length","nativeSrc":"5047:6:16","nodeType":"YulTypedName","src":"5047:6:16","type":""}]},{"nativeSrc":"5080:27:16","nodeType":"YulVariableDeclaration","src":"5080:27:16","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:16","nodeType":"YulIdentifier","src":"5097:3:16"},{"kind":"number","nativeSrc":"5102:4:16","nodeType":"YulLiteral","src":"5102:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:16","nodeType":"YulIdentifier","src":"5093:3:16"},"nativeSrc":"5093:14:16","nodeType":"YulFunctionCall","src":"5093:14:16"},"variables":[{"name":"begin","nativeSrc":"5084:5:16","nodeType":"YulTypedName","src":"5084:5:16","type":""}]},{"nativeSrc":"5120:29:16","nodeType":"YulVariableDeclaration","src":"5120:29:16","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:16","nodeType":"YulIdentifier","src":"5135:5:16"},{"name":"length","nativeSrc":"5142:6:16","nodeType":"YulIdentifier","src":"5142:6:16"}],"functionName":{"name":"add","nativeSrc":"5131:3:16","nodeType":"YulIdentifier","src":"5131:3:16"},"nativeSrc":"5131:18:16","nodeType":"YulFunctionCall","src":"5131:18:16"},"variables":[{"name":"end","nativeSrc":"5124:3:16","nodeType":"YulTypedName","src":"5124:3:16","type":""}]},{"nativeSrc":"5162:23:16","nodeType":"YulVariableDeclaration","src":"5162:23:16","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:16","nodeType":"YulIdentifier","src":"5181:3:16"}],"functionName":{"name":"mload","nativeSrc":"5175:5:16","nodeType":"YulIdentifier","src":"5175:5:16"},"nativeSrc":"5175:10:16","nodeType":"YulFunctionCall","src":"5175:10:16"},"variables":[{"name":"cache","nativeSrc":"5166:5:16","nodeType":"YulTypedName","src":"5166:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:16","nodeType":"YulIdentifier","src":"5205:3:16"},{"name":"slot","nativeSrc":"5210:4:16","nodeType":"YulIdentifier","src":"5210:4:16"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:16","nodeType":"YulIdentifier","src":"5198:6:16"},"nativeSrc":"5198:17:16","nodeType":"YulFunctionCall","src":"5198:17:16"},"nativeSrc":"5198:17:16","nodeType":"YulExpressionStatement","src":"5198:17:16"},{"nativeSrc":"5228:45:16","nodeType":"YulAssignment","src":"5228:45:16","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:16","nodeType":"YulIdentifier","src":"5248:5:16"},{"arguments":[{"name":"length","nativeSrc":"5259:6:16","nodeType":"YulIdentifier","src":"5259:6:16"},{"kind":"number","nativeSrc":"5267:4:16","nodeType":"YulLiteral","src":"5267:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:16","nodeType":"YulIdentifier","src":"5255:3:16"},"nativeSrc":"5255:17:16","nodeType":"YulFunctionCall","src":"5255:17:16"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:16","nodeType":"YulIdentifier","src":"5238:9:16"},"nativeSrc":"5238:35:16","nodeType":"YulFunctionCall","src":"5238:35:16"},"variableNames":[{"name":"result","nativeSrc":"5228:6:16","nodeType":"YulIdentifier","src":"5228:6:16"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:16","nodeType":"YulIdentifier","src":"5293:3:16"},{"name":"cache","nativeSrc":"5298:5:16","nodeType":"YulIdentifier","src":"5298:5:16"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:16","nodeType":"YulIdentifier","src":"5286:6:16"},"nativeSrc":"5286:18:16","nodeType":"YulFunctionCall","src":"5286:18:16"},"nativeSrc":"5286:18:16","nodeType":"YulExpressionStatement","src":"5286:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3189,"isOffset":false,"isSlot":false,"src":"5063:3:16","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"5097:3:16","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"5228:6:16","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"5210:4:16","valueSize":1}],"flags":["memory-safe"],"id":3194,"nodeType":"InlineAssembly","src":"5004:310:16"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"4817:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3196,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:16","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"slot","nameLocation":"4931:4:16","nodeType":"VariableDeclaration","scope":3196,"src":"4923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"key","nameLocation":"4950:3:16","nodeType":"VariableDeclaration","scope":3196,"src":"4937:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:16"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"result","nameLocation":"4986:6:16","nodeType":"VariableDeclaration","scope":3196,"src":"4978:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:16"},"scope":3197,"src":"4900:420:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3198,"src":"1599:3723:16","usedErrors":[],"usedEvents":[]}],"src":"199:5124:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3321]},"id":3322,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3199,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3321,"linearizedBaseContracts":[3321],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3203,"members":[{"constant":false,"id":3202,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":3203,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":3321,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3206,"members":[{"constant":false,"id":3205,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":3206,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3204,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":3321,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3209,"members":[{"constant":false,"id":3208,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":3209,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":3321,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3212,"members":[{"constant":false,"id":3211,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":3212,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":3321,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3215,"members":[{"constant":false,"id":3214,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":3215,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3213,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":3321,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3218,"members":[{"constant":false,"id":3217,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":3218,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3216,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":3321,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3221,"members":[{"constant":false,"id":3220,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":3221,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":3321,"src":"1756:45:17","visibility":"public"},{"body":{"id":3231,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nativeSrc":"2018:38:17","nodeType":"YulBlock","src":"2018:38:17","statements":[{"nativeSrc":"2032:14:17","nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nativeSrc":"2042:4:17","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3228,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":3230,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":3232,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":3232,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3203_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3227,"nodeType":"UserDefinedTypeName","pathNode":{"id":3226,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3203,"src":"1960:11:17"},"referencedDeclaration":3203,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3203_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":3321,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nativeSrc":"2278:38:17","nodeType":"YulBlock","src":"2278:38:17","statements":[{"nativeSrc":"2292:14:17","nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nativeSrc":"2302:4:17","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:17","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3239,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":3241,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":3243,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":3243,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3206_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3238,"nodeType":"UserDefinedTypeName","pathNode":{"id":3237,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3206,"src":"2220:11:17"},"referencedDeclaration":3206,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3206_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":3321,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nativeSrc":"2538:38:17","nodeType":"YulBlock","src":"2538:38:17","statements":[{"nativeSrc":"2552:14:17","nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nativeSrc":"2562:4:17","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:17","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3250,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":3246,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":3252,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":3254,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":3254,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3209_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3249,"nodeType":"UserDefinedTypeName","pathNode":{"id":3248,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3209,"src":"2480:11:17"},"referencedDeclaration":3209,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3209_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":3321,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nativeSrc":"2798:38:17","nodeType":"YulBlock","src":"2798:38:17","statements":[{"nativeSrc":"2812:14:17","nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nativeSrc":"2822:4:17","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:17","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3261,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":3263,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":3265,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":3265,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3260,"nodeType":"UserDefinedTypeName","pathNode":{"id":3259,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"2740:11:17"},"referencedDeclaration":3212,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3212_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":3321,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3275,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nativeSrc":"3055:38:17","nodeType":"YulBlock","src":"3055:38:17","statements":[{"nativeSrc":"3069:14:17","nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nativeSrc":"3079:4:17","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:17","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3272,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":3268,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":3274,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":3276,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":3276,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3215_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3271,"nodeType":"UserDefinedTypeName","pathNode":{"id":3270,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3215,"src":"2998:10:17"},"referencedDeclaration":3215,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3215_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":3321,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nativeSrc":"3312:38:17","nodeType":"YulBlock","src":"3312:38:17","statements":[{"nativeSrc":"3326:14:17","nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nativeSrc":"3336:4:17","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:17","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3283,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":3285,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":3287,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":3287,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3218_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3282,"nodeType":"UserDefinedTypeName","pathNode":{"id":3281,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3218,"src":"3255:10:17"},"referencedDeclaration":3218,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3218_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":3321,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3297,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nativeSrc":"3593:44:17","nodeType":"YulBlock","src":"3593:44:17","statements":[{"nativeSrc":"3607:20:17","nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nativeSrc":"3617:10:17","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:17","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3294,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3296,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":3298,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3289,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":3298,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3218_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3218,"src":"3536:10:17"},"referencedDeclaration":3218,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3218_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":3321,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nativeSrc":"3853:38:17","nodeType":"YulBlock","src":"3853:38:17","statements":[{"nativeSrc":"3867:14:17","nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nativeSrc":"3877:4:17","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:17","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3305,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":3301,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":3307,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":3309,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":3309,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3221_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3304,"nodeType":"UserDefinedTypeName","pathNode":{"id":3303,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3221,"src":"3797:9:17"},"referencedDeclaration":3221,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3221_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":3321,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nativeSrc":"4129:44:17","nodeType":"YulBlock","src":"4129:44:17","statements":[{"nativeSrc":"4143:20:17","nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nativeSrc":"4153:10:17","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:17","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3316,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":3312,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3318,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":3320,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3311,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":3320,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3221_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3315,"nodeType":"UserDefinedTypeName","pathNode":{"id":3314,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3221,"src":"4073:9:17"},"referencedDeclaration":3221,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3221_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":3321,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3322,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6790],"SafeCast":[8555],"SignedMath":[8699],"Strings":[4723]},"id":4724,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3323,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4724,"sourceUnit":6791,"src":"127:37:18","symbolAliases":[{"foreign":{"id":3324,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4724,"sourceUnit":8556,"src":"165:45:18","symbolAliases":[{"foreign":{"id":3326,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4724,"sourceUnit":8700,"src":"211:49:18","symbolAliases":[{"foreign":{"id":3328,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"219:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"262:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":4723,"linearizedBaseContracts":[4723],"name":"Strings","nameLocation":"305:7:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3332,"libraryName":{"id":3331,"name":"SafeCast","nameLocations":["325:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":8555,"src":"325:8:18"},"nodeType":"UsingForDirective","src":"319:21:18"},{"constant":true,"id":3335,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:18","nodeType":"VariableDeclaration","scope":4723,"src":"346:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3333,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3338,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:18","nodeType":"VariableDeclaration","scope":4723,"src":"408:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3336,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3374,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:18","nodeType":"VariableDeclaration","scope":4723,"src":"456:302:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:18","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:18","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:18","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:18","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:18","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"778:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3381,"name":"StringsInsufficientHexLength","nameLocation":"870:28:18","nodeType":"ErrorDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"907:5:18","nodeType":"VariableDeclaration","scope":3381,"src":"899:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"length","nameLocation":"922:6:18","nodeType":"VariableDeclaration","scope":3381,"src":"914:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:18"},"src":"864:66:18"},{"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"936:108:18","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3384,"name":"StringsInvalidChar","nameLocation":"1055:18:18","nodeType":"ErrorDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[],"src":"1073:2:18"},"src":"1049:27:18"},{"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"1082:84:18","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3387,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:18","nodeType":"ErrorDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[],"src":"1204:2:18"},"src":"1171:36:18"},{"body":{"id":3434,"nodeType":"Block","src":"1379:561:18","statements":[{"id":3433,"nodeType":"UncheckedBlock","src":"1389:545:18","statements":[{"assignments":[3396],"declarations":[{"constant":false,"id":3396,"mutability":"mutable","name":"length","nameLocation":"1421:6:18","nodeType":"VariableDeclaration","scope":3433,"src":"1413:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3403,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"1441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3397,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"1430:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"1430:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:18"},{"assignments":[3405],"declarations":[{"constant":false,"id":3405,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:18","nodeType":"VariableDeclaration","scope":3433,"src":"1465:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3404,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3410,"initialValue":{"arguments":[{"id":3408,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"1499:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3406,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:18"},{"assignments":[3412],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:18","nodeType":"VariableDeclaration","scope":3433,"src":"1520:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3413,"nodeType":"VariableDeclarationStatement","src":"1520:11:18"},{"AST":{"nativeSrc":"1570:67:18","nodeType":"YulBlock","src":"1570:67:18","statements":[{"nativeSrc":"1588:35:18","nodeType":"YulAssignment","src":"1588:35:18","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:18","nodeType":"YulIdentifier","src":"1599:6:18"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:18","nodeType":"YulLiteral","src":"1611:2:18","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:18","nodeType":"YulIdentifier","src":"1615:6:18"}],"functionName":{"name":"add","nativeSrc":"1607:3:18","nodeType":"YulIdentifier","src":"1607:3:18"},"nativeSrc":"1607:15:18","nodeType":"YulFunctionCall","src":"1607:15:18"}],"functionName":{"name":"add","nativeSrc":"1595:3:18","nodeType":"YulIdentifier","src":"1595:3:18"},"nativeSrc":"1595:28:18","nodeType":"YulFunctionCall","src":"1595:28:18"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:18","nodeType":"YulIdentifier","src":"1588:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3405,"isOffset":false,"isSlot":false,"src":"1599:6:18","valueSize":1},{"declaration":3396,"isOffset":false,"isSlot":false,"src":"1615:6:18","valueSize":1},{"declaration":3412,"isOffset":false,"isSlot":false,"src":"1588:3:18","valueSize":1}],"flags":["memory-safe"],"id":3414,"nodeType":"InlineAssembly","src":"1545:92:18"},{"body":{"id":3429,"nodeType":"Block","src":"1663:234:18","statements":[{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:18","subExpression":{"id":3416,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"1681:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"1681:5:18"},{"AST":{"nativeSrc":"1729:86:18","nodeType":"YulBlock","src":"1729:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:18","nodeType":"YulIdentifier","src":"1759:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:18","nodeType":"YulIdentifier","src":"1773:5:18"},{"kind":"number","nativeSrc":"1780:2:18","nodeType":"YulLiteral","src":"1780:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:18","nodeType":"YulIdentifier","src":"1769:3:18"},"nativeSrc":"1769:14:18","nodeType":"YulFunctionCall","src":"1769:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:18","nodeType":"YulIdentifier","src":"1785:10:18"}],"functionName":{"name":"byte","nativeSrc":"1764:4:18","nodeType":"YulIdentifier","src":"1764:4:18"},"nativeSrc":"1764:32:18","nodeType":"YulFunctionCall","src":"1764:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:18","nodeType":"YulIdentifier","src":"1751:7:18"},"nativeSrc":"1751:46:18","nodeType":"YulFunctionCall","src":"1751:46:18"},"nativeSrc":"1751:46:18","nodeType":"YulExpressionStatement","src":"1751:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3335,"isOffset":false,"isSlot":false,"src":"1785:10:18","valueSize":1},{"declaration":3412,"isOffset":false,"isSlot":false,"src":"1759:3:18","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"1773:5:18","valueSize":1}],"flags":["memory-safe"],"id":3419,"nodeType":"InlineAssembly","src":"1704:111:18"},{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"1832:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"1832:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"1865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3428,"nodeType":"IfStatement","src":"1861:21:18","trueBody":{"id":3427,"nodeType":"Break","src":"1877:5:18"}}]},"condition":{"hexValue":"74727565","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3430,"nodeType":"WhileStatement","src":"1650:247:18"},{"expression":{"id":3431,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"1917:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3394,"id":3432,"nodeType":"Return","src":"1910:13:18"}]}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"1213:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3435,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:18","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"value","nameLocation":"1334:5:18","nodeType":"VariableDeclaration","scope":3435,"src":"1326:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:18"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3435,"src":"1364:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3392,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:18"},"scope":4723,"src":"1308:632:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3460,"nodeType":"Block","src":"2116:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2147:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:18","trueExpression":{"hexValue":"2d","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2193:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3453,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"2178:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8699_$","typeString":"type(library SignedMath)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"2178:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3452,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"2169:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3443,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:18","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3442,"id":3459,"nodeType":"Return","src":"2126:75:18"}]},"documentation":{"id":3436,"nodeType":"StructuredDocumentation","src":"1946:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:18","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"value","nameLocation":"2071:5:18","nodeType":"VariableDeclaration","scope":3461,"src":"2064:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3437,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:18"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3461,"src":"2101:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3440,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:18"},"scope":4723,"src":"2040:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"2387:100:18","statements":[{"id":3479,"nodeType":"UncheckedBlock","src":"2397:84:18","statements":[{"expression":{"arguments":[{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"2440:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"2459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3471,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"2447:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"2447:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3469,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3481,3564,3584],"referencedDeclaration":3564,"src":"2428:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3468,"id":3478,"nodeType":"Return","src":"2421:49:18"}]}]},"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"2214:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:18","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"value","nameLocation":"2342:5:18","nodeType":"VariableDeclaration","scope":3481,"src":"2334:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:18"},"returnParameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"2372:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3466,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:18"},"scope":4723,"src":"2313:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3563,"nodeType":"Block","src":"2700:435:18","statements":[{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:18","nodeType":"VariableDeclaration","scope":3563,"src":"2710:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3494,"initialValue":{"id":3493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2731:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:18"},{"assignments":[3496],"declarations":[{"constant":false,"id":3496,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:18","nodeType":"VariableDeclaration","scope":3563,"src":"2746:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3495,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3505,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3500,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"2782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3497,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:18"},{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3506,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2803:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3508,"indexExpression":{"hexValue":"30","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3511,"nodeType":"ExpressionStatement","src":"2803:15:18"},{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3512,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2828:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3514,"indexExpression":{"hexValue":"31","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3517,"nodeType":"ExpressionStatement","src":"2828:15:18"},{"body":{"id":3546,"nodeType":"Block","src":"2898:95:18","statements":[{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3532,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2912:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3534,"indexExpression":{"id":3533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2919:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3535,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"2924:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3539,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2935:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3541,"nodeType":"ExpressionStatement","src":"2912:40:18"},{"expression":{"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3542,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2966:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3545,"nodeType":"ExpressionStatement","src":"2966:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2886:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3547,"initializationExpression":{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"i","nameLocation":"2866:1:18","nodeType":"VariableDeclaration","scope":3547,"src":"2858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3525,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3521,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"2874:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:18","subExpression":{"id":3529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2895:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"2893:3:18"},"nodeType":"ForStatement","src":"2853:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3006:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3557,"nodeType":"IfStatement","src":"3002:96:18","trueBody":{"id":3556,"nodeType":"Block","src":"3023:75:18","statements":[{"errorCall":{"arguments":[{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3073:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3553,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"3080:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3551,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"3044:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"RevertStatement","src":"3037:50:18"}]}},{"expression":{"arguments":[{"id":3560,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3121:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3558,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:18","typeDescriptions":{}}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3490,"id":3562,"nodeType":"Return","src":"3107:21:18"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"2493:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:18","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"value","nameLocation":"2639:5:18","nodeType":"VariableDeclaration","scope":3564,"src":"2631:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"length","nameLocation":"2654:6:18","nodeType":"VariableDeclaration","scope":3564,"src":"2646:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:18"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3564,"src":"2685:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3488,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:18"},"scope":4723,"src":"2610:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"3367:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3577,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"3412:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3575,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:18","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:18","typeDescriptions":{}}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3580,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3420:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3572,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3481,3564,3584],"referencedDeclaration":3564,"src":"3384:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3571,"id":3582,"nodeType":"Return","src":"3377:58:18"}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"3141:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:18","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"addr","nameLocation":"3323:4:18","nodeType":"VariableDeclaration","scope":3584,"src":"3315:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:18"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"3352:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3569,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:18"},"scope":4723,"src":"3294:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"3699:642:18","statements":[{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:18","nodeType":"VariableDeclaration","scope":3648,"src":"3709:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3592,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3600,"initialValue":{"arguments":[{"arguments":[{"id":3597,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3749:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3596,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3481,3564,3584],"referencedDeclaration":3584,"src":"3737:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3594,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:18","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:18"},{"assignments":[3602],"declarations":[{"constant":false,"id":3602,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:18","nodeType":"VariableDeclaration","scope":3648,"src":"3840:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3603,"nodeType":"VariableDeclarationStatement","src":"3840:17:18"},{"AST":{"nativeSrc":"3892:78:18","nodeType":"YulBlock","src":"3892:78:18","statements":[{"nativeSrc":"3906:54:18","nodeType":"YulAssignment","src":"3906:54:18","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:18","nodeType":"YulLiteral","src":"3923:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:18","nodeType":"YulIdentifier","src":"3941:6:18"},{"kind":"number","nativeSrc":"3949:4:18","nodeType":"YulLiteral","src":"3949:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:18","nodeType":"YulIdentifier","src":"3937:3:18"},"nativeSrc":"3937:17:18","nodeType":"YulFunctionCall","src":"3937:17:18"},{"kind":"number","nativeSrc":"3956:2:18","nodeType":"YulLiteral","src":"3956:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:18","nodeType":"YulIdentifier","src":"3927:9:18"},"nativeSrc":"3927:32:18","nodeType":"YulFunctionCall","src":"3927:32:18"}],"functionName":{"name":"shr","nativeSrc":"3919:3:18","nodeType":"YulIdentifier","src":"3919:3:18"},"nativeSrc":"3919:41:18","nodeType":"YulFunctionCall","src":"3919:41:18"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:18","nodeType":"YulIdentifier","src":"3906:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3593,"isOffset":false,"isSlot":false,"src":"3941:6:18","valueSize":1},{"declaration":3602,"isOffset":false,"isSlot":false,"src":"3906:9:18","valueSize":1}],"flags":["memory-safe"],"id":3604,"nodeType":"InlineAssembly","src":"3867:103:18"},{"body":{"id":3641,"nodeType":"Block","src":"4013:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"4119:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3622,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4148:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3624,"indexExpression":{"id":3623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"4155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3620,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:18","typeDescriptions":{}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"nodeType":"IfStatement","src":"4115:150:18","trueBody":{"id":3635,"nodeType":"Block","src":"4165:100:18","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3629,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4233:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3631,"indexExpression":{"id":3630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"4240:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3634,"nodeType":"ExpressionStatement","src":"4233:17:18"}]}},{"expression":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3637,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"4278:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ExpressionStatement","src":"4278:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"4001:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3642,"initializationExpression":{"assignments":[3606],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"i","nameLocation":"3993:1:18","nodeType":"VariableDeclaration","scope":3642,"src":"3985:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3608,"initialValue":{"hexValue":"3431","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:18","subExpression":{"id":3612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"4010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"4008:3:18"},"nodeType":"ForStatement","src":"3980:324:18"},{"expression":{"arguments":[{"id":3645,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4327:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3643,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:18","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3591,"id":3647,"nodeType":"Return","src":"4313:21:18"}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"3448:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:18","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"addr","nameLocation":"3655:4:18","nodeType":"VariableDeclaration","scope":3649,"src":"3647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3586,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:18"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"3684:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3589,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:18"},"scope":4723,"src":"3618:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"4496:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3661,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4519:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:18","typeDescriptions":{}}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:18","memberName":"length","nodeType":"MemberAccess","src":"4513:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4538:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:18","typeDescriptions":{}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:18","memberName":"length","nodeType":"MemberAccess","src":"4532:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4567:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3671,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:18","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4590:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3677,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:18","typeDescriptions":{}}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3676,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3658,"id":3684,"nodeType":"Return","src":"4506:87:18"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"4347:66:18","text":" @dev Returns true if the two strings are equal."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:18","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"a","nameLocation":"4447:1:18","nodeType":"VariableDeclaration","scope":3686,"src":"4433:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3651,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"b","nameLocation":"4464:1:18","nodeType":"VariableDeclaration","scope":3686,"src":"4450:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3653,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:18"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"4490:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3656,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:18"},"scope":4723,"src":"4418:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3704,"nodeType":"Block","src":"4897:64:18","statements":[{"expression":{"arguments":[{"id":3695,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"4924:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"4940:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3697,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:18","typeDescriptions":{}}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:18","memberName":"length","nodeType":"MemberAccess","src":"4934:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3694,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3705,3736],"referencedDeclaration":3736,"src":"4914:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3693,"id":3703,"nodeType":"Return","src":"4907:47:18"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"4606:214:18","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3705,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:18","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"input","nameLocation":"4858:5:18","nodeType":"VariableDeclaration","scope":3705,"src":"4844:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3688,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:18"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3705,"src":"4888:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:18"},"scope":4723,"src":"4825:136:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"5366:153:18","statements":[{"assignments":[3718,3720],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"success","nameLocation":"5382:7:18","nodeType":"VariableDeclaration","scope":3735,"src":"5377:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3717,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3720,"mutability":"mutable","name":"value","nameLocation":"5399:5:18","nodeType":"VariableDeclaration","scope":3735,"src":"5391:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3726,"initialValue":{"arguments":[{"id":3722,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5421:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"5435:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3721,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3757,3794],"referencedDeclaration":3794,"src":"5408:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:18"},{"condition":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:18","subExpression":{"id":3727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"5454:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"IfStatement","src":"5449:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3729,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"5470:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"RevertStatement","src":"5463:27:18"}},{"expression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"5507:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3734,"nodeType":"Return","src":"5500:12:18"}]},"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"4967:294:18","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:18","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"input","nameLocation":"5299:5:18","nodeType":"VariableDeclaration","scope":3736,"src":"5285:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3707,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"begin","nameLocation":"5314:5:18","nodeType":"VariableDeclaration","scope":3736,"src":"5306:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"end","nameLocation":"5329:3:18","nodeType":"VariableDeclaration","scope":3736,"src":"5321:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:18"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"5357:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:18"},"scope":4723,"src":"5266:253:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"5840:83:18","statements":[{"expression":{"arguments":[{"id":3747,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5886:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5902:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3749,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:18","typeDescriptions":{}}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:18","memberName":"length","nodeType":"MemberAccess","src":"5896:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3746,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5857:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3745,"id":3755,"nodeType":"Return","src":"5850:66:18"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"5525:215:18","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:18","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"input","nameLocation":"5781:5:18","nodeType":"VariableDeclaration","scope":3757,"src":"5767:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3738,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:18"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"success","nameLocation":"5816:7:18","nodeType":"VariableDeclaration","scope":3757,"src":"5811:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3741,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"value","nameLocation":"5833:5:18","nodeType":"VariableDeclaration","scope":3757,"src":"5825:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:18"},"scope":4723,"src":"5745:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3793,"nodeType":"Block","src":"6325:144:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6339:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3774,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"6351:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:18","typeDescriptions":{}}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:18","memberName":"length","nodeType":"MemberAccess","src":"6345:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6368:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6376:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3786,"nodeType":"IfStatement","src":"6335:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3770,"id":3785,"nodeType":"Return","src":"6381:17:18"}},{"expression":{"arguments":[{"id":3788,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"6444:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3789,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3790,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"6415:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3770,"id":3792,"nodeType":"Return","src":"6408:54:18"}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"5929:238:18","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:18","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"input","nameLocation":"6217:5:18","nodeType":"VariableDeclaration","scope":3794,"src":"6203:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3759,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"begin","nameLocation":"6240:5:18","nodeType":"VariableDeclaration","scope":3794,"src":"6232:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"end","nameLocation":"6263:3:18","nodeType":"VariableDeclaration","scope":3794,"src":"6255:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:18"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"success","nameLocation":"6301:7:18","nodeType":"VariableDeclaration","scope":3794,"src":"6296:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"value","nameLocation":"6318:5:18","nodeType":"VariableDeclaration","scope":3794,"src":"6310:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:18"},"scope":4723,"src":"6172:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"6872:347:18","statements":[{"assignments":[3809],"declarations":[{"constant":false,"id":3809,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:18","nodeType":"VariableDeclaration","scope":3863,"src":"6882:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3808,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3814,"initialValue":{"arguments":[{"id":3812,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"6910:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3810,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:18","typeDescriptions":{}}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:18"},{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"result","nameLocation":"6935:6:18","nodeType":"VariableDeclaration","scope":3863,"src":"6927:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3818,"initialValue":{"hexValue":"30","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:18"},{"body":{"id":3857,"nodeType":"Block","src":"6993:189:18","statements":[{"assignments":[3830],"declarations":[{"constant":false,"id":3830,"mutability":"mutable","name":"chr","nameLocation":"7013:3:18","nodeType":"VariableDeclaration","scope":3857,"src":"7007:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3829,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3840,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3835,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"7062:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"7070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"7039:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3832,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:18","typeDescriptions":{}}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3831,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"7019:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7092:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3848,"nodeType":"IfStatement","src":"7088:30:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3807,"id":3847,"nodeType":"Return","src":"7101:17:18"}},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7132:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"7132:12:18"},{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7158:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3854,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7168:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"7158:13:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"6979:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3824,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"6983:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3858,"initializationExpression":{"assignments":[3820],"declarations":[{"constant":false,"id":3820,"mutability":"mutable","name":"i","nameLocation":"6968:1:18","nodeType":"VariableDeclaration","scope":3858,"src":"6960:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3822,"initialValue":{"id":3821,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"6972:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:18","subExpression":{"id":3826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"6990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"6988:3:18"},"nodeType":"ForStatement","src":"6955:227:18"},{"expression":{"components":[{"hexValue":"74727565","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"7205:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3807,"id":3862,"nodeType":"Return","src":"7191:21:18"}]},"documentation":{"id":3795,"nodeType":"StructuredDocumentation","src":"6475:224:18","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:18","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"input","nameLocation":"6765:5:18","nodeType":"VariableDeclaration","scope":3864,"src":"6751:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3796,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"begin","nameLocation":"6788:5:18","nodeType":"VariableDeclaration","scope":3864,"src":"6780:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"end","nameLocation":"6811:3:18","nodeType":"VariableDeclaration","scope":3864,"src":"6803:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:18"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"success","nameLocation":"6848:7:18","nodeType":"VariableDeclaration","scope":3864,"src":"6843:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3803,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"value","nameLocation":"6865:5:18","nodeType":"VariableDeclaration","scope":3864,"src":"6857:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:18"},"scope":4723,"src":"6704:515:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3882,"nodeType":"Block","src":"7516:63:18","statements":[{"expression":{"arguments":[{"id":3873,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7542:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7558:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3875,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:18","typeDescriptions":{}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:18","memberName":"length","nodeType":"MemberAccess","src":"7552:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3872,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3883,3914],"referencedDeclaration":3914,"src":"7533:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3871,"id":3881,"nodeType":"Return","src":"7526:46:18"}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"7225:216:18","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:18","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"input","nameLocation":"7478:5:18","nodeType":"VariableDeclaration","scope":3883,"src":"7464:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3866,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:18"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"7508:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3869,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:18"},"scope":4723,"src":"7446:133:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3913,"nodeType":"Block","src":"7984:151:18","statements":[{"assignments":[3896,3898],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"success","nameLocation":"8000:7:18","nodeType":"VariableDeclaration","scope":3913,"src":"7995:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3895,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"value","nameLocation":"8016:5:18","nodeType":"VariableDeclaration","scope":3913,"src":"8009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3897,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3904,"initialValue":{"arguments":[{"id":3900,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"8037:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3901,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"8044:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3902,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"8051:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3899,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3935,3977],"referencedDeclaration":3977,"src":"8025:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:18"},{"condition":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:18","subExpression":{"id":3905,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"8070:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3910,"nodeType":"IfStatement","src":"8065:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3907,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"8086:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"RevertStatement","src":"8079:27:18"}},{"expression":{"id":3911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"8123:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3894,"id":3912,"nodeType":"Return","src":"8116:12:18"}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"7585:296:18","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3914,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:18","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"input","nameLocation":"7918:5:18","nodeType":"VariableDeclaration","scope":3914,"src":"7904:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3885,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"begin","nameLocation":"7933:5:18","nodeType":"VariableDeclaration","scope":3914,"src":"7925:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"end","nameLocation":"7948:3:18","nodeType":"VariableDeclaration","scope":3914,"src":"7940:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:18"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"7976:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3892,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:18"},"scope":4723,"src":"7886:249:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"8526:82:18","statements":[{"expression":{"arguments":[{"id":3925,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"8571:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3929,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"8587:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3927,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:18","typeDescriptions":{}}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:18","memberName":"length","nodeType":"MemberAccess","src":"8581:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3924,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"8543:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3923,"id":3933,"nodeType":"Return","src":"8536:65:18"}]},"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"8141:287:18","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:18","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"input","nameLocation":"8468:5:18","nodeType":"VariableDeclaration","scope":3935,"src":"8454:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3916,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:18"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"success","nameLocation":"8503:7:18","nodeType":"VariableDeclaration","scope":3935,"src":"8498:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3919,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"value","nameLocation":"8519:5:18","nodeType":"VariableDeclaration","scope":3935,"src":"8512:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3921,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:18"},"scope":4723,"src":"8433:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3940,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:18","nodeType":"VariableDeclaration","scope":4723,"src":"8614:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3976,"nodeType":"Block","src":"9130:143:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9144:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3957,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9156:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3955,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:18","typeDescriptions":{}}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:18","memberName":"length","nodeType":"MemberAccess","src":"9150:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9173:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3962,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9181:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"nodeType":"IfStatement","src":"9140:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3953,"id":3968,"nodeType":"Return","src":"9186:17:18"}},{"expression":{"arguments":[{"id":3971,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9248:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3972,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3973,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9262:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"9220:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3953,"id":3975,"nodeType":"Return","src":"9213:53:18"}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"8671:303:18","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:18","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"input","nameLocation":"9023:5:18","nodeType":"VariableDeclaration","scope":3977,"src":"9009:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3942,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"begin","nameLocation":"9046:5:18","nodeType":"VariableDeclaration","scope":3977,"src":"9038:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"end","nameLocation":"9069:3:18","nodeType":"VariableDeclaration","scope":3977,"src":"9061:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:18"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"success","nameLocation":"9107:7:18","nodeType":"VariableDeclaration","scope":3977,"src":"9102:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3949,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"value","nameLocation":"9123:5:18","nodeType":"VariableDeclaration","scope":3977,"src":"9116:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3951,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:18"},"scope":4723,"src":"8979:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"9673:812:18","statements":[{"assignments":[3992],"declarations":[{"constant":false,"id":3992,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:18","nodeType":"VariableDeclaration","scope":4097,"src":"9683:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3991,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3997,"initialValue":{"arguments":[{"id":3995,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"9711:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3993,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:18","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:18"},{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"sign","nameLocation":"9781:4:18","nodeType":"VariableDeclaration","scope":4097,"src":"9774:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3998,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4015,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"9788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4001,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9797:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4010,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"9845:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4011,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"9822:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4007,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:18","typeDescriptions":{}}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:18","trueExpression":{"arguments":[{"hexValue":"30","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4003,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:18","typeDescriptions":{}}},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:18"},{"assignments":[4017],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:18","nodeType":"VariableDeclaration","scope":4097,"src":"9941:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4016,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4024,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4018,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"9961:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4019,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:18","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:18"},{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:18","nodeType":"VariableDeclaration","scope":4097,"src":"9990:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4025,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4033,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4027,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"10010:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4028,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:18","typeDescriptions":{}}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:18"},{"assignments":[4035],"declarations":[{"constant":false,"id":4035,"mutability":"mutable","name":"offset","nameLocation":"10047:6:18","nodeType":"VariableDeclaration","scope":4097,"src":"10039:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"10057:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4037,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"10073:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"10056:37:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:18"},{"assignments":[4044,4046],"declarations":[{"constant":false,"id":4044,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:18","nodeType":"VariableDeclaration","scope":4097,"src":"10107:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4043,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:18","nodeType":"VariableDeclaration","scope":4097,"src":"10124:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4054,"initialValue":{"arguments":[{"id":4048,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"10157:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"10164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4050,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"10172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4052,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10180:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4047,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3757,3794],"referencedDeclaration":3794,"src":"10144:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"10199:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10213:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4057,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10224:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"10341:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4076,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"10355:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4079,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10383:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3990,"id":4094,"nodeType":"Return","src":"10461:17:18"},"id":4095,"nodeType":"IfStatement","src":"10337:141:18","trueBody":{"id":4090,"nodeType":"Block","src":"10399:56:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4084,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:18","memberName":"min","nodeType":"MemberAccess","src":"10427:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3990,"id":4089,"nodeType":"Return","src":"10413:31:18"}]}},"id":4096,"nodeType":"IfStatement","src":"10195:283:18","trueBody":{"id":4074,"nodeType":"Block","src":"10240:91:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4061,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"10268:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4069,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10310:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4067,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:18","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:18","trueExpression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:18","subExpression":{"arguments":[{"id":4064,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10291:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4062,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:18","typeDescriptions":{}}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3990,"id":4073,"nodeType":"Return","src":"10254:66:18"}]}}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"9279:223:18","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:18","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"input","nameLocation":"9567:5:18","nodeType":"VariableDeclaration","scope":4098,"src":"9553:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3979,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"begin","nameLocation":"9590:5:18","nodeType":"VariableDeclaration","scope":4098,"src":"9582:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"end","nameLocation":"9613:3:18","nodeType":"VariableDeclaration","scope":4098,"src":"9605:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:18"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"success","nameLocation":"9650:7:18","nodeType":"VariableDeclaration","scope":4098,"src":"9645:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3986,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"value","nameLocation":"9666:5:18","nodeType":"VariableDeclaration","scope":4098,"src":"9659:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3988,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:18"},"scope":4723,"src":"9507:978:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4116,"nodeType":"Block","src":"10830:67:18","statements":[{"expression":{"arguments":[{"id":4107,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"10860:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4111,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"10876:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:18","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:18","memberName":"length","nodeType":"MemberAccess","src":"10870:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4106,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4117,4148],"referencedDeclaration":4148,"src":"10847:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4105,"id":4115,"nodeType":"Return","src":"10840:50:18"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"10491:259:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:18","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"input","nameLocation":"10791:5:18","nodeType":"VariableDeclaration","scope":4117,"src":"10777:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4100,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:18"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"10821:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:18"},"scope":4723,"src":"10755:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4147,"nodeType":"Block","src":"11318:156:18","statements":[{"assignments":[4130,4132],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"success","nameLocation":"11334:7:18","nodeType":"VariableDeclaration","scope":4147,"src":"11329:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4129,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"value","nameLocation":"11351:5:18","nodeType":"VariableDeclaration","scope":4147,"src":"11343:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4138,"initialValue":{"arguments":[{"id":4134,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11376:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4135,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11383:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4136,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"11390:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4133,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4169,4206],"referencedDeclaration":4206,"src":"11360:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:18"},{"condition":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:18","subExpression":{"id":4139,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"11409:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4144,"nodeType":"IfStatement","src":"11404:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4141,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"11425:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"RevertStatement","src":"11418:27:18"}},{"expression":{"id":4145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"11462:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4128,"id":4146,"nodeType":"Return","src":"11455:12:18"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"10903:307:18","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:18","nodeType":"FunctionDefinition","parameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"input","nameLocation":"11251:5:18","nodeType":"VariableDeclaration","scope":4148,"src":"11237:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4119,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"begin","nameLocation":"11266:5:18","nodeType":"VariableDeclaration","scope":4148,"src":"11258:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"end","nameLocation":"11281:3:18","nodeType":"VariableDeclaration","scope":4148,"src":"11273:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:18"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"11309:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:18"},"scope":4723,"src":"11215:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"11801:86:18","statements":[{"expression":{"arguments":[{"id":4159,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11850:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4163,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11866:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4161,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:18","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:18","memberName":"length","nodeType":"MemberAccess","src":"11860:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"11818:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4157,"id":4167,"nodeType":"Return","src":"11811:69:18"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"11480:218:18","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:18","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"input","nameLocation":"11742:5:18","nodeType":"VariableDeclaration","scope":4169,"src":"11728:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4150,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:18"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"success","nameLocation":"11777:7:18","nodeType":"VariableDeclaration","scope":4169,"src":"11772:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4153,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"value","nameLocation":"11794:5:18","nodeType":"VariableDeclaration","scope":4169,"src":"11786:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:18"},"scope":4723,"src":"11703:184:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4205,"nodeType":"Block","src":"12295:147:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"12309:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4186,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"12321:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:18","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:18","memberName":"length","nodeType":"MemberAccess","src":"12315:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"12338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4191,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"12346:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4198,"nodeType":"IfStatement","src":"12305:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4182,"id":4197,"nodeType":"Return","src":"12351:17:18"}},{"expression":{"arguments":[{"id":4200,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"12417:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4201,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"12424:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4202,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"12431:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4199,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"12385:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4182,"id":4204,"nodeType":"Return","src":"12378:57:18"}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"11893:241:18","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:18","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"input","nameLocation":"12187:5:18","nodeType":"VariableDeclaration","scope":4206,"src":"12173:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4171,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"begin","nameLocation":"12210:5:18","nodeType":"VariableDeclaration","scope":4206,"src":"12202:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"end","nameLocation":"12233:3:18","nodeType":"VariableDeclaration","scope":4206,"src":"12225:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:18"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"success","nameLocation":"12271:7:18","nodeType":"VariableDeclaration","scope":4206,"src":"12266:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4178,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"value","nameLocation":"12288:5:18","nodeType":"VariableDeclaration","scope":4206,"src":"12280:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:18"},"scope":4723,"src":"12139:303:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4308,"nodeType":"Block","src":"12851:881:18","statements":[{"assignments":[4221],"declarations":[{"constant":false,"id":4221,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:18","nodeType":"VariableDeclaration","scope":4308,"src":"12861:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4220,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4226,"initialValue":{"arguments":[{"id":4224,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"12889:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4222,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:18","typeDescriptions":{}}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:18"},{"assignments":[4228],"declarations":[{"constant":false,"id":4228,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:18","nodeType":"VariableDeclaration","scope":4308,"src":"12943:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4227,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4248,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"12961:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4238,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"13011:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4239,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"13019:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"12988:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4235,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:18","typeDescriptions":{}}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4242,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:18","typeDescriptions":{}}},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:18"},{"assignments":[4250],"declarations":[{"constant":false,"id":4250,"mutability":"mutable","name":"offset","nameLocation":"13131:6:18","nodeType":"VariableDeclaration","scope":4308,"src":"13123:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4256,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4251,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"13140:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"13140:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:18"},{"assignments":[4258],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"result","nameLocation":"13181:6:18","nodeType":"VariableDeclaration","scope":4308,"src":"13173:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4260,"initialValue":{"hexValue":"30","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:18"},{"body":{"id":4302,"nodeType":"Block","src":"13248:447:18","statements":[{"assignments":[4274],"declarations":[{"constant":false,"id":4274,"mutability":"mutable","name":"chr","nameLocation":"13268:3:18","nodeType":"VariableDeclaration","scope":4302,"src":"13262:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4273,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4284,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4279,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"13317:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4280,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"13325:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4278,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"13294:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4276,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:18","typeDescriptions":{}}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4275,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"13274:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"13347:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"13343:31:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4219,"id":4291,"nodeType":"Return","src":"13357:17:18"}},{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"13388:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4296,"nodeType":"ExpressionStatement","src":"13388:12:18"},{"id":4301,"nodeType":"UncheckedBlock","src":"13414:271:18","statements":[{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"13657:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4298,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"13667:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4300,"nodeType":"ExpressionStatement","src":"13657:13:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"13234:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4268,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"13238:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4303,"initializationExpression":{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"i","nameLocation":"13214:1:18","nodeType":"VariableDeclaration","scope":4303,"src":"13206:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"13218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4264,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"13226:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:18","subExpression":{"id":4270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"13245:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"13243:3:18"},"nodeType":"ForStatement","src":"13201:494:18"},{"expression":{"components":[{"hexValue":"74727565","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"13718:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4219,"id":4307,"nodeType":"Return","src":"13704:21:18"}]},"documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"12448:227:18","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:18","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"input","nameLocation":"12744:5:18","nodeType":"VariableDeclaration","scope":4309,"src":"12730:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4208,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"begin","nameLocation":"12767:5:18","nodeType":"VariableDeclaration","scope":4309,"src":"12759:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"end","nameLocation":"12790:3:18","nodeType":"VariableDeclaration","scope":4309,"src":"12782:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:18"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"success","nameLocation":"12827:7:18","nodeType":"VariableDeclaration","scope":4309,"src":"12822:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4215,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"value","nameLocation":"12844:5:18","nodeType":"VariableDeclaration","scope":4309,"src":"12836:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:18"},"scope":4723,"src":"12680:1052:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4327,"nodeType":"Block","src":"14030:67:18","statements":[{"expression":{"arguments":[{"id":4318,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"14060:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4322,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"14076:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4320,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:18","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:18","memberName":"length","nodeType":"MemberAccess","src":"14070:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4317,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4328,4359],"referencedDeclaration":4359,"src":"14047:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4316,"id":4326,"nodeType":"Return","src":"14040:50:18"}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"13738:212:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:18","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"input","nameLocation":"13991:5:18","nodeType":"VariableDeclaration","scope":4328,"src":"13977:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4311,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:18"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4328,"src":"14021:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4314,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:18"},"scope":4723,"src":"13955:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4358,"nodeType":"Block","src":"14470:165:18","statements":[{"assignments":[4341,4343],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"success","nameLocation":"14486:7:18","nodeType":"VariableDeclaration","scope":4358,"src":"14481:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4340,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"value","nameLocation":"14503:5:18","nodeType":"VariableDeclaration","scope":4358,"src":"14495:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4342,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4349,"initialValue":{"arguments":[{"id":4345,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"14528:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4346,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"14535:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4347,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"14542:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4344,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4380,4484],"referencedDeclaration":4484,"src":"14512:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:18"},{"condition":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:18","subExpression":{"id":4350,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"14561:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"IfStatement","src":"14556:50:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4352,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"14577:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4354,"nodeType":"RevertStatement","src":"14570:36:18"}},{"expression":{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"14623:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4339,"id":4357,"nodeType":"Return","src":"14616:12:18"}]},"documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"14103:259:18","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4359,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:18","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"input","nameLocation":"14403:5:18","nodeType":"VariableDeclaration","scope":4359,"src":"14389:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4330,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"begin","nameLocation":"14418:5:18","nodeType":"VariableDeclaration","scope":4359,"src":"14410:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4335,"mutability":"mutable","name":"end","nameLocation":"14433:3:18","nodeType":"VariableDeclaration","scope":4359,"src":"14425:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:18"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4359,"src":"14461:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4337,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:18"},"scope":4723,"src":"14367:268:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4379,"nodeType":"Block","src":"14942:70:18","statements":[{"expression":{"arguments":[{"id":4370,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"14975:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"14991:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4372,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:18","typeDescriptions":{}}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:18","memberName":"length","nodeType":"MemberAccess","src":"14985:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4369,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4380,4484],"referencedDeclaration":4484,"src":"14959:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4368,"id":4378,"nodeType":"Return","src":"14952:53:18"}]},"documentation":{"id":4360,"nodeType":"StructuredDocumentation","src":"14641:198:18","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:18","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"input","nameLocation":"14883:5:18","nodeType":"VariableDeclaration","scope":4380,"src":"14869:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4361,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:18"},"returnParameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"success","nameLocation":"14918:7:18","nodeType":"VariableDeclaration","scope":4380,"src":"14913:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4364,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"value","nameLocation":"14935:5:18","nodeType":"VariableDeclaration","scope":4380,"src":"14927:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:18"},"scope":4723,"src":"14844:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4483,"nodeType":"Block","src":"15405:733:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"15419:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4397,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"15431:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4395,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:18","typeDescriptions":{}}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:18","memberName":"length","nodeType":"MemberAccess","src":"15425:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"15448:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4402,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"15456:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4412,"nodeType":"IfStatement","src":"15415:72:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4406,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:18","typeDescriptions":{}}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4393,"id":4411,"nodeType":"Return","src":"15461:26:18"}},{"assignments":[4414],"declarations":[{"constant":false,"id":4414,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:18","nodeType":"VariableDeclaration","scope":4483,"src":"15498:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4413,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4437,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"15516:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"15522:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4426,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"15572:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4424,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:18","typeDescriptions":{}}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4428,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"15580:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4423,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"15543:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4421,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:18","typeDescriptions":{}}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4431,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:18","typeDescriptions":{}}},"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:18"},{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:18","nodeType":"VariableDeclaration","scope":4483,"src":"15684:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4441,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"15714:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"15714:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"15801:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4449,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"15807:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4451,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"15816:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4481,"nodeType":"Block","src":"16081:51:18","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4475,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:18","typeDescriptions":{}}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4393,"id":4480,"nodeType":"Return","src":"16095:26:18"}]},"id":4482,"nodeType":"IfStatement","src":"15797:335:18","trueBody":{"id":4473,"nodeType":"Block","src":"15832:243:18","statements":[{"assignments":[4454,4456],"declarations":[{"constant":false,"id":4454,"mutability":"mutable","name":"s","nameLocation":"15953:1:18","nodeType":"VariableDeclaration","scope":4473,"src":"15948:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4453,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"v","nameLocation":"15964:1:18","nodeType":"VariableDeclaration","scope":4473,"src":"15956:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4462,"initialValue":{"arguments":[{"id":4458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"16001:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4459,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"16008:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4460,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"16015:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"15969:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:18"},{"expression":{"components":[{"id":4463,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"16041:1:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4468,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"16060:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4466,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:18","typeDescriptions":{}}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:18","typeDescriptions":{}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4393,"id":4472,"nodeType":"Return","src":"16033:31:18"}]}}]},"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"15018:226:18","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4484,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:18","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"input","nameLocation":"15297:5:18","nodeType":"VariableDeclaration","scope":4484,"src":"15283:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4382,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4385,"mutability":"mutable","name":"begin","nameLocation":"15320:5:18","nodeType":"VariableDeclaration","scope":4484,"src":"15312:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4387,"mutability":"mutable","name":"end","nameLocation":"15343:3:18","nodeType":"VariableDeclaration","scope":4484,"src":"15335:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:18"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"success","nameLocation":"15381:7:18","nodeType":"VariableDeclaration","scope":4484,"src":"15376:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4389,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"value","nameLocation":"15398:5:18","nodeType":"VariableDeclaration","scope":4484,"src":"15390:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4391,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:18"},"scope":4723,"src":"15249:889:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4543,"nodeType":"Block","src":"16207:461:18","statements":[{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"value","nameLocation":"16223:5:18","nodeType":"VariableDeclaration","scope":4543,"src":"16217:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4491,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4497,"initialValue":{"arguments":[{"id":4495,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"16237:3:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4493,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:18","typeDescriptions":{}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:18"},{"id":4540,"nodeType":"UncheckedBlock","src":"16401:238:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16429:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:18","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16443:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:18","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16489:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16503:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:18","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16550:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16564:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4532,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:18","memberName":"max","nodeType":"MemberAccess","src":"16613:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4490,"id":4536,"nodeType":"Return","src":"16606:22:18"},"id":4537,"nodeType":"IfStatement","src":"16546:82:18","trueBody":{"expression":{"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16576:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:18","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4530,"nodeType":"ExpressionStatement","src":"16576:11:18"}},"id":4538,"nodeType":"IfStatement","src":"16485:143:18","trueBody":{"expression":{"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16516:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:18","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4519,"nodeType":"ExpressionStatement","src":"16516:11:18"}},"id":4539,"nodeType":"IfStatement","src":"16425:203:18","trueBody":{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16455:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4508,"nodeType":"ExpressionStatement","src":"16455:11:18"}}]},{"expression":{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"16656:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4490,"id":4542,"nodeType":"Return","src":"16649:12:18"}]},"id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:18","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"chr","nameLocation":"16173:3:18","nodeType":"VariableDeclaration","scope":4544,"src":"16166:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4485,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:18"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4544,"src":"16200:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4488,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:18"},"scope":4723,"src":"16144:524:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4709,"nodeType":"Block","src":"17334:1331:18","statements":[{"assignments":[4553],"declarations":[{"constant":false,"id":4553,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:18","nodeType":"VariableDeclaration","scope":4709,"src":"17344:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4552,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4558,"initialValue":{"arguments":[{"id":4556,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"17372:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4554,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:18","typeDescriptions":{}}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:18"},{"assignments":[4560],"declarations":[{"constant":false,"id":4560,"mutability":"mutable","name":"output","nameLocation":"17401:6:18","nodeType":"VariableDeclaration","scope":4709,"src":"17388:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4559,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4568,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4564,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"17424:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:18","memberName":"length","nodeType":"MemberAccess","src":"17424:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4561,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:18"},{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:18","nodeType":"VariableDeclaration","scope":4709,"src":"17471:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4572,"initialValue":{"hexValue":"30","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:18"},{"body":{"id":4701,"nodeType":"Block","src":"17546:854:18","statements":[{"assignments":[4584],"declarations":[{"constant":false,"id":4584,"mutability":"mutable","name":"char","nameLocation":"17567:4:18","nodeType":"VariableDeclaration","scope":4701,"src":"17560:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4583,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4592,"initialValue":{"arguments":[{"arguments":[{"id":4588,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"17604:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"17612:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4587,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"17581:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4585,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:18","typeDescriptions":{}}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:18"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"17635:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4597,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17670:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4595,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:18","typeDescriptions":{}}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4699,"nodeType":"Block","src":"18328:62:18","statements":[{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4692,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"18346:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4695,"indexExpression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:18","subExpression":{"id":4693,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18353:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4696,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"18371:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4698,"nodeType":"ExpressionStatement","src":"18346:29:18"}]},"id":4700,"nodeType":"IfStatement","src":"17629:761:18","trueBody":{"id":4691,"nodeType":"Block","src":"17685:637:18","statements":[{"expression":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4606,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"17703:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4609,"indexExpression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:18","subExpression":{"id":4607,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17710:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4612,"nodeType":"ExpressionStatement","src":"17703:29:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17754:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17823:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17892:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17961:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"18030:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"18099:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"18169:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"18165:143:18","trueBody":{"id":4683,"nodeType":"Block","src":"18183:125:18","statements":[{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4676,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"18261:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4679,"indexExpression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:18","subExpression":{"id":4677,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18268:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4682,"nodeType":"ExpressionStatement","src":"18261:28:18"}]}},"id":4685,"nodeType":"IfStatement","src":"18095:213:18","trueBody":{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4666,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"18113:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4669,"indexExpression":{"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:18","subExpression":{"id":4667,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18120:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4672,"nodeType":"ExpressionStatement","src":"18113:29:18"}},"id":4686,"nodeType":"IfStatement","src":"18026:282:18","trueBody":{"expression":{"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4656,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"18044:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4659,"indexExpression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:18","subExpression":{"id":4657,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18051:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4662,"nodeType":"ExpressionStatement","src":"18044:28:18"}},"id":4687,"nodeType":"IfStatement","src":"17957:351:18","trueBody":{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4646,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"17975:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4649,"indexExpression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:18","subExpression":{"id":4647,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17982:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4652,"nodeType":"ExpressionStatement","src":"17975:28:18"}},"id":4688,"nodeType":"IfStatement","src":"17888:420:18","trueBody":{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4636,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"17906:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4639,"indexExpression":{"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:18","subExpression":{"id":4637,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17913:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4642,"nodeType":"ExpressionStatement","src":"17906:28:18"}},"id":4689,"nodeType":"IfStatement","src":"17819:489:18","trueBody":{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4626,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"17837:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4629,"indexExpression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:18","subExpression":{"id":4627,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17844:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4632,"nodeType":"ExpressionStatement","src":"17837:28:18"}},"id":4690,"nodeType":"IfStatement","src":"17750:558:18","trueBody":{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4616,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"17768:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4619,"indexExpression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:18","subExpression":{"id":4617,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17775:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4622,"nodeType":"ExpressionStatement","src":"17768:28:18"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"17522:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4577,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"17526:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:18","memberName":"length","nodeType":"MemberAccess","src":"17526:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4702,"initializationExpression":{"assignments":[4574],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"i","nameLocation":"17519:1:18","nodeType":"VariableDeclaration","scope":4702,"src":"17511:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4575,"nodeType":"VariableDeclarationStatement","src":"17511:9:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:18","subExpression":{"id":4580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"17543:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"17541:3:18"},"nodeType":"ForStatement","src":"17506:894:18"},{"AST":{"nativeSrc":"18498:129:18","nodeType":"YulBlock","src":"18498:129:18","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:18","nodeType":"YulIdentifier","src":"18519:6:18"},{"name":"outputLength","nativeSrc":"18527:12:18","nodeType":"YulIdentifier","src":"18527:12:18"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:18","nodeType":"YulIdentifier","src":"18512:6:18"},"nativeSrc":"18512:28:18","nodeType":"YulFunctionCall","src":"18512:28:18"},"nativeSrc":"18512:28:18","nodeType":"YulExpressionStatement","src":"18512:28:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:18","nodeType":"YulLiteral","src":"18560:4:18","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:18","nodeType":"YulIdentifier","src":"18570:6:18"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:18","nodeType":"YulLiteral","src":"18582:1:18","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:18","nodeType":"YulLiteral","src":"18589:1:18","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:18","nodeType":"YulIdentifier","src":"18596:12:18"},{"kind":"number","nativeSrc":"18610:2:18","nodeType":"YulLiteral","src":"18610:2:18","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:18","nodeType":"YulIdentifier","src":"18592:3:18"},"nativeSrc":"18592:21:18","nodeType":"YulFunctionCall","src":"18592:21:18"}],"functionName":{"name":"shr","nativeSrc":"18585:3:18","nodeType":"YulIdentifier","src":"18585:3:18"},"nativeSrc":"18585:29:18","nodeType":"YulFunctionCall","src":"18585:29:18"}],"functionName":{"name":"shl","nativeSrc":"18578:3:18","nodeType":"YulIdentifier","src":"18578:3:18"},"nativeSrc":"18578:37:18","nodeType":"YulFunctionCall","src":"18578:37:18"}],"functionName":{"name":"add","nativeSrc":"18566:3:18","nodeType":"YulIdentifier","src":"18566:3:18"},"nativeSrc":"18566:50:18","nodeType":"YulFunctionCall","src":"18566:50:18"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:18","nodeType":"YulIdentifier","src":"18553:6:18"},"nativeSrc":"18553:64:18","nodeType":"YulFunctionCall","src":"18553:64:18"},"nativeSrc":"18553:64:18","nodeType":"YulExpressionStatement","src":"18553:64:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4560,"isOffset":false,"isSlot":false,"src":"18519:6:18","valueSize":1},{"declaration":4560,"isOffset":false,"isSlot":false,"src":"18570:6:18","valueSize":1},{"declaration":4570,"isOffset":false,"isSlot":false,"src":"18527:12:18","valueSize":1},{"declaration":4570,"isOffset":false,"isSlot":false,"src":"18596:12:18","valueSize":1}],"flags":["memory-safe"],"id":4703,"nodeType":"InlineAssembly","src":"18473:154:18"},{"expression":{"arguments":[{"id":4706,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"18651:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4704,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:18","typeDescriptions":{}}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4551,"id":4708,"nodeType":"Return","src":"18637:21:18"}]},"documentation":{"id":4545,"nodeType":"StructuredDocumentation","src":"16674:576:18","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4710,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:18","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"input","nameLocation":"17289:5:18","nodeType":"VariableDeclaration","scope":4710,"src":"17275:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4546,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:18"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"17319:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4549,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:18"},"scope":4723,"src":"17255:1410:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"19050:225:18","statements":[{"AST":{"nativeSrc":"19199:70:18","nodeType":"YulBlock","src":"19199:70:18","statements":[{"nativeSrc":"19213:46:18","nodeType":"YulAssignment","src":"19213:46:18","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:18","nodeType":"YulIdentifier","src":"19232:6:18"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:18","nodeType":"YulLiteral","src":"19244:4:18","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:18","nodeType":"YulIdentifier","src":"19250:6:18"}],"functionName":{"name":"add","nativeSrc":"19240:3:18","nodeType":"YulIdentifier","src":"19240:3:18"},"nativeSrc":"19240:17:18","nodeType":"YulFunctionCall","src":"19240:17:18"}],"functionName":{"name":"add","nativeSrc":"19228:3:18","nodeType":"YulIdentifier","src":"19228:3:18"},"nativeSrc":"19228:30:18","nodeType":"YulFunctionCall","src":"19228:30:18"}],"functionName":{"name":"mload","nativeSrc":"19222:5:18","nodeType":"YulIdentifier","src":"19222:5:18"},"nativeSrc":"19222:37:18","nodeType":"YulFunctionCall","src":"19222:37:18"},"variableNames":[{"name":"value","nativeSrc":"19213:5:18","nodeType":"YulIdentifier","src":"19213:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4713,"isOffset":false,"isSlot":false,"src":"19232:6:18","valueSize":1},{"declaration":4715,"isOffset":false,"isSlot":false,"src":"19250:6:18","valueSize":1},{"declaration":4718,"isOffset":false,"isSlot":false,"src":"19213:5:18","valueSize":1}],"flags":["memory-safe"],"id":4720,"nodeType":"InlineAssembly","src":"19174:95:18"}]},"documentation":{"id":4711,"nodeType":"StructuredDocumentation","src":"18671:268:18","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:18","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:18","nodeType":"VariableDeclaration","scope":4722,"src":"18976:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4712,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4715,"mutability":"mutable","name":"offset","nameLocation":"19005:6:18","nodeType":"VariableDeclaration","scope":4722,"src":"18997:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:18"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"value","nameLocation":"19043:5:18","nodeType":"VariableDeclaration","scope":4722,"src":"19035:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:18"},"scope":4723,"src":"18944:331:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4724,"src":"297:18980:18","usedErrors":[3381,3384,3387],"usedEvents":[]}],"src":"101:19177:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5071]},"id":5072,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4725,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5071,"linearizedBaseContracts":[5071],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4731,"members":[{"id":4727,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":4728,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":4729,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":4730,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":4732,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4734,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4739,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":4739,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4744,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":4744,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":4796,"nodeType":"Block","src":"2285:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4759,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"2299:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:19","memberName":"length","nodeType":"MemberAccess","src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4794,"nodeType":"Block","src":"2793:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4781,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{}}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4785,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"2827:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4789,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"2872:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:19","memberName":"length","nodeType":"MemberAccess","src":"2872:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:19","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4758,"id":4793,"nodeType":"Return","src":"2807:83:19"}]},"id":4795,"nodeType":"IfStatement","src":"2295:606:19","trueBody":{"id":4780,"nodeType":"Block","src":"2323:464:19","statements":[{"assignments":[4764],"declarations":[{"constant":false,"id":4764,"mutability":"mutable","name":"r","nameLocation":"2345:1:19","nodeType":"VariableDeclaration","scope":4780,"src":"2337:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4765,"nodeType":"VariableDeclarationStatement","src":"2337:9:19"},{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"s","nameLocation":"2368:1:19","nodeType":"VariableDeclaration","scope":4780,"src":"2360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4768,"nodeType":"VariableDeclarationStatement","src":"2360:9:19"},{"assignments":[4770],"declarations":[{"constant":false,"id":4770,"mutability":"mutable","name":"v","nameLocation":"2389:1:19","nodeType":"VariableDeclaration","scope":4780,"src":"2383:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4769,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4771,"nodeType":"VariableDeclarationStatement","src":"2383:7:19"},{"AST":{"nativeSrc":"2560:171:19","nodeType":"YulBlock","src":"2560:171:19","statements":[{"nativeSrc":"2578:32:19","nodeType":"YulAssignment","src":"2578:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:19","nodeType":"YulIdentifier","src":"2593:9:19"},{"kind":"number","nativeSrc":"2604:4:19","nodeType":"YulLiteral","src":"2604:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:19","nodeType":"YulIdentifier","src":"2589:3:19"},"nativeSrc":"2589:20:19","nodeType":"YulFunctionCall","src":"2589:20:19"}],"functionName":{"name":"mload","nativeSrc":"2583:5:19","nodeType":"YulIdentifier","src":"2583:5:19"},"nativeSrc":"2583:27:19","nodeType":"YulFunctionCall","src":"2583:27:19"},"variableNames":[{"name":"r","nativeSrc":"2578:1:19","nodeType":"YulIdentifier","src":"2578:1:19"}]},{"nativeSrc":"2627:32:19","nodeType":"YulAssignment","src":"2627:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:19","nodeType":"YulIdentifier","src":"2642:9:19"},{"kind":"number","nativeSrc":"2653:4:19","nodeType":"YulLiteral","src":"2653:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:19","nodeType":"YulIdentifier","src":"2638:3:19"},"nativeSrc":"2638:20:19","nodeType":"YulFunctionCall","src":"2638:20:19"}],"functionName":{"name":"mload","nativeSrc":"2632:5:19","nodeType":"YulIdentifier","src":"2632:5:19"},"nativeSrc":"2632:27:19","nodeType":"YulFunctionCall","src":"2632:27:19"},"variableNames":[{"name":"s","nativeSrc":"2627:1:19","nodeType":"YulIdentifier","src":"2627:1:19"}]},{"nativeSrc":"2676:41:19","nodeType":"YulAssignment","src":"2676:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:19","nodeType":"YulLiteral","src":"2686:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:19","nodeType":"YulIdentifier","src":"2699:9:19"},{"kind":"number","nativeSrc":"2710:4:19","nodeType":"YulLiteral","src":"2710:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:19","nodeType":"YulIdentifier","src":"2695:3:19"},"nativeSrc":"2695:20:19","nodeType":"YulFunctionCall","src":"2695:20:19"}],"functionName":{"name":"mload","nativeSrc":"2689:5:19","nodeType":"YulIdentifier","src":"2689:5:19"},"nativeSrc":"2689:27:19","nodeType":"YulFunctionCall","src":"2689:27:19"}],"functionName":{"name":"byte","nativeSrc":"2681:4:19","nodeType":"YulIdentifier","src":"2681:4:19"},"nativeSrc":"2681:36:19","nodeType":"YulFunctionCall","src":"2681:36:19"},"variableNames":[{"name":"v","nativeSrc":"2676:1:19","nodeType":"YulIdentifier","src":"2676:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4764,"isOffset":false,"isSlot":false,"src":"2578:1:19","valueSize":1},{"declaration":4767,"isOffset":false,"isSlot":false,"src":"2627:1:19","valueSize":1},{"declaration":4749,"isOffset":false,"isSlot":false,"src":"2593:9:19","valueSize":1},{"declaration":4749,"isOffset":false,"isSlot":false,"src":"2642:9:19","valueSize":1},{"declaration":4749,"isOffset":false,"isSlot":false,"src":"2699:9:19","valueSize":1},{"declaration":4770,"isOffset":false,"isSlot":false,"src":"2676:1:19","valueSize":1}],"flags":["memory-safe"],"id":4772,"nodeType":"InlineAssembly","src":"2535:196:19"},{"expression":{"arguments":[{"id":4774,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"2762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4775,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"2768:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4776,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"2771:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4777,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"2774:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4773,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4797,4877,4985],"referencedDeclaration":4985,"src":"2751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4758,"id":4779,"nodeType":"Return","src":"2744:32:19"}]}}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"hash","nameLocation":"2166:4:19","nodeType":"VariableDeclaration","scope":4797,"src":"2158:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"signature","nameLocation":"2193:9:19","nodeType":"VariableDeclaration","scope":4797,"src":"2180:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4748,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:19"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:19","nodeType":"VariableDeclaration","scope":4797,"src":"2232:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4755,"mutability":"mutable","name":"err","nameLocation":"2264:3:19","nodeType":"VariableDeclaration","scope":4797,"src":"2251:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4754,"nodeType":"UserDefinedTypeName","pathNode":{"id":4753,"name":"RecoverError","nameLocations":["2251:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"2251:12:19"},"referencedDeclaration":4731,"src":"2251:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:19","nodeType":"VariableDeclaration","scope":4797,"src":"2269:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:19"},"scope":5071,"src":"2129:778:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"3801:168:19","statements":[{"assignments":[4808,4811,4813],"declarations":[{"constant":false,"id":4808,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:19","nodeType":"VariableDeclaration","scope":4826,"src":"3812:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"error","nameLocation":"3844:5:19","nodeType":"VariableDeclaration","scope":4826,"src":"3831:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4810,"nodeType":"UserDefinedTypeName","pathNode":{"id":4809,"name":"RecoverError","nameLocations":["3831:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"3831:12:19"},"referencedDeclaration":4731,"src":"3831:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:19","nodeType":"VariableDeclaration","scope":4826,"src":"3851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4818,"initialValue":{"arguments":[{"id":4815,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"3882:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4816,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"3888:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4814,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4797,4877,4985],"referencedDeclaration":4797,"src":"3871:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:19"},{"expression":{"arguments":[{"id":4820,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"3920:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"id":4821,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"3927:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4819,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"3908:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4731_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4823,"nodeType":"ExpressionStatement","src":"3908:28:19"},{"expression":{"id":4824,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"3953:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4806,"id":4825,"nodeType":"Return","src":"3946:16:19"}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"2913:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:19","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"hash","nameLocation":"3739:4:19","nodeType":"VariableDeclaration","scope":4827,"src":"3731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"signature","nameLocation":"3758:9:19","nodeType":"VariableDeclaration","scope":4827,"src":"3745:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4801,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:19"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"3792:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4804,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:19"},"scope":5071,"src":"3714:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4876,"nodeType":"Block","src":"4348:342:19","statements":[{"id":4875,"nodeType":"UncheckedBlock","src":"4358:326:19","statements":[{"assignments":[4845],"declarations":[{"constant":false,"id":4845,"mutability":"mutable","name":"s","nameLocation":"4390:1:19","nodeType":"VariableDeclaration","scope":4875,"src":"4382:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4852,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4394:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:19"},{"assignments":[4854],"declarations":[{"constant":false,"id":4854,"mutability":"mutable","name":"v","nameLocation":"4591:1:19","nodeType":"VariableDeclaration","scope":4875,"src":"4585:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4853,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4867,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4859,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4610:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:19","typeDescriptions":{}}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4855,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:19","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:19"},{"expression":{"arguments":[{"id":4869,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4870,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"4665:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4871,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4872,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"4671:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4868,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4797,4877,4985],"referencedDeclaration":4985,"src":"4648:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4843,"id":4874,"nodeType":"Return","src":"4641:32:19"}]}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"3975:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:19","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"hash","nameLocation":"4222:4:19","nodeType":"VariableDeclaration","scope":4877,"src":"4214:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"r","nameLocation":"4244:1:19","nodeType":"VariableDeclaration","scope":4877,"src":"4236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"vs","nameLocation":"4263:2:19","nodeType":"VariableDeclaration","scope":4877,"src":"4255:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:19"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:19","nodeType":"VariableDeclaration","scope":4877,"src":"4295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4836,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"err","nameLocation":"4327:3:19","nodeType":"VariableDeclaration","scope":4877,"src":"4314:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4839,"nodeType":"UserDefinedTypeName","pathNode":{"id":4838,"name":"RecoverError","nameLocations":["4314:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"4314:12:19"},"referencedDeclaration":4731,"src":"4314:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:19","nodeType":"VariableDeclaration","scope":4877,"src":"4332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:19"},"scope":5071,"src":"4185:505:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4909,"nodeType":"Block","src":"4903:164:19","statements":[{"assignments":[4890,4893,4895],"declarations":[{"constant":false,"id":4890,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:19","nodeType":"VariableDeclaration","scope":4909,"src":"4914:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4889,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4893,"mutability":"mutable","name":"error","nameLocation":"4946:5:19","nodeType":"VariableDeclaration","scope":4909,"src":"4933:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4892,"nodeType":"UserDefinedTypeName","pathNode":{"id":4891,"name":"RecoverError","nameLocations":["4933:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"4933:12:19"},"referencedDeclaration":4731,"src":"4933:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:19","nodeType":"VariableDeclaration","scope":4909,"src":"4953:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4901,"initialValue":{"arguments":[{"id":4897,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4898,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"4990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4899,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"4993:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4896,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4797,4877,4985],"referencedDeclaration":4877,"src":"4973:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:19"},{"expression":{"arguments":[{"id":4903,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"id":4904,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"5025:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4902,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"5006:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4731_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4906,"nodeType":"ExpressionStatement","src":"5006:28:19"},{"expression":{"id":4907,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"5051:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4888,"id":4908,"nodeType":"Return","src":"5044:16:19"}]},"documentation":{"id":4878,"nodeType":"StructuredDocumentation","src":"4696:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4910,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:19","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"hash","nameLocation":"4842:4:19","nodeType":"VariableDeclaration","scope":4910,"src":"4834:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"r","nameLocation":"4856:1:19","nodeType":"VariableDeclaration","scope":4910,"src":"4848:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4884,"mutability":"mutable","name":"vs","nameLocation":"4867:2:19","nodeType":"VariableDeclaration","scope":4910,"src":"4859:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:19"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4910,"src":"4894:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:19"},"scope":5071,"src":"4817:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4984,"nodeType":"Block","src":"5382:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4931,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"6278:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:19","typeDescriptions":{}}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"nodeType":"IfStatement","src":"6266:164:19","trueBody":{"id":4944,"nodeType":"Block","src":"6351:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:19","typeDescriptions":{}}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4939,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"6385:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4730,"src":"6385:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"id":4941,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"6417:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4928,"id":4943,"nodeType":"Return","src":"6365:54:19"}]}},{"assignments":[4947],"declarations":[{"constant":false,"id":4947,"mutability":"mutable","name":"signer","nameLocation":"6532:6:19","nodeType":"VariableDeclaration","scope":4984,"src":"6524:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4946,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4954,"initialValue":{"arguments":[{"id":4949,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"6551:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4950,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"6557:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4951,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4952,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4948,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"6579:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4956,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:19","typeDescriptions":{}}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4974,"nodeType":"IfStatement","src":"6575:113:19","trueBody":{"id":4973,"nodeType":"Block","src":"6601:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:19","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4965,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"6635:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4728,"src":"6635:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:19","typeDescriptions":{}}},"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4928,"id":4972,"nodeType":"Return","src":"6615:62:19"}]}},{"expression":{"components":[{"id":4975,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"6706:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4976,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"6714:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4727,"src":"6714:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:19","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4928,"id":4983,"nodeType":"Return","src":"6698:49:19"}]},"documentation":{"id":4911,"nodeType":"StructuredDocumentation","src":"5073:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:19","nodeType":"FunctionDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"hash","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":4985,"src":"5232:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4915,"mutability":"mutable","name":"v","nameLocation":"5260:1:19","nodeType":"VariableDeclaration","scope":4985,"src":"5254:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4914,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4917,"mutability":"mutable","name":"r","nameLocation":"5279:1:19","nodeType":"VariableDeclaration","scope":4985,"src":"5271:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4919,"mutability":"mutable","name":"s","nameLocation":"5298:1:19","nodeType":"VariableDeclaration","scope":4985,"src":"5290:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:19"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:19","nodeType":"VariableDeclaration","scope":4985,"src":"5329:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4921,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4925,"mutability":"mutable","name":"err","nameLocation":"5361:3:19","nodeType":"VariableDeclaration","scope":4985,"src":"5348:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4924,"nodeType":"UserDefinedTypeName","pathNode":{"id":4923,"name":"RecoverError","nameLocations":["5348:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"5348:12:19"},"referencedDeclaration":4731,"src":"5348:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:19","nodeType":"VariableDeclaration","scope":4985,"src":"5366:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:19"},"scope":5071,"src":"5203:1551:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5020,"nodeType":"Block","src":"6981:166:19","statements":[{"assignments":[5000,5003,5005],"declarations":[{"constant":false,"id":5000,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:19","nodeType":"VariableDeclaration","scope":5020,"src":"6992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4999,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"error","nameLocation":"7024:5:19","nodeType":"VariableDeclaration","scope":5020,"src":"7011:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5002,"nodeType":"UserDefinedTypeName","pathNode":{"id":5001,"name":"RecoverError","nameLocations":["7011:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"7011:12:19"},"referencedDeclaration":4731,"src":"7011:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:19","nodeType":"VariableDeclaration","scope":5020,"src":"7031:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5012,"initialValue":{"arguments":[{"id":5007,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7062:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5008,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"7068:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5009,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7071:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5010,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"7074:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5006,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4797,4877,4985],"referencedDeclaration":4985,"src":"7051:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4731_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:19"},{"expression":{"arguments":[{"id":5014,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"7098:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},{"id":5015,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"7105:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5013,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"7086:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4731_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5017,"nodeType":"ExpressionStatement","src":"7086:28:19"},{"expression":{"id":5018,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"7131:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4998,"id":5019,"nodeType":"Return","src":"7124:16:19"}]},"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"6760:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5021,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:19","nodeType":"FunctionDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"hash","nameLocation":"6912:4:19","nodeType":"VariableDeclaration","scope":5021,"src":"6904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4990,"mutability":"mutable","name":"v","nameLocation":"6924:1:19","nodeType":"VariableDeclaration","scope":5021,"src":"6918:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4989,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"r","nameLocation":"6935:1:19","nodeType":"VariableDeclaration","scope":5021,"src":"6927:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"s","nameLocation":"6946:1:19","nodeType":"VariableDeclaration","scope":5021,"src":"6938:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:19"},"returnParameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"6972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4996,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:19"},"scope":5071,"src":"6887:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5069,"nodeType":"Block","src":"7352:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"7366:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5031,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"7375:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4727,"src":"7375:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"7462:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5037,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4728,"src":"7471:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"7567:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5045,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"7576:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"7576:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"7701:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5057,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"7710:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4731_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4730,"src":"7710:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5065,"nodeType":"IfStatement","src":"7697:109:19","trueBody":{"id":5064,"nodeType":"Block","src":"7742:64:19","statements":[{"errorCall":{"arguments":[{"id":5061,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"7786:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5060,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"7763:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5063,"nodeType":"RevertStatement","src":"7756:39:19"}]}},"id":5066,"nodeType":"IfStatement","src":"7563:243:19","trueBody":{"id":5055,"nodeType":"Block","src":"7613:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":5051,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"7670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:19","typeDescriptions":{}}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5048,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"7634:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5054,"nodeType":"RevertStatement","src":"7627:53:19"}]}},"id":5067,"nodeType":"IfStatement","src":"7458:348:19","trueBody":{"id":5043,"nodeType":"Block","src":"7502:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5040,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"7523:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"7516:30:19"}]}},"id":5068,"nodeType":"IfStatement","src":"7362:444:19","trueBody":{"id":5035,"nodeType":"Block","src":"7397:55:19","statements":[{"functionReturnParameters":5029,"id":5034,"nodeType":"Return","src":"7411:7:19"}]}}]},"documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"7153:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:19","nodeType":"FunctionDefinition","parameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"error","nameLocation":"7314:5:19","nodeType":"VariableDeclaration","scope":5070,"src":"7301:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5024,"nodeType":"UserDefinedTypeName","pathNode":{"id":5023,"name":"RecoverError","nameLocations":["7301:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":4731,"src":"7301:12:19"},"referencedDeclaration":4731,"src":"7301:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4731","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:19","nodeType":"VariableDeclaration","scope":5070,"src":"7321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:19"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[],"src":"7352:0:19"},"scope":5071,"src":"7280:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5072,"src":"344:7470:19","usedErrors":[4734,4739,4744],"usedEvents":[]}],"src":"112:7703:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[5157],"Strings":[4723]},"id":5158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5073,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5158,"sourceUnit":4724,"src":"149:39:20","symbolAliases":[{"foreign":{"id":5074,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":5157,"linearizedBaseContracts":[5157],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5085,"nodeType":"Block","src":"1339:341:20","statements":[{"AST":{"nativeSrc":"1374:300:20","nodeType":"YulBlock","src":"1374:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:20","nodeType":"YulLiteral","src":"1395:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:20","nodeType":"YulLiteral","src":"1401:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:20","nodeType":"YulIdentifier","src":"1388:6:20"},"nativeSrc":"1388:48:20","nodeType":"YulFunctionCall","src":"1388:48:20"},"nativeSrc":"1388:48:20","nodeType":"YulExpressionStatement","src":"1388:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:20","nodeType":"YulLiteral","src":"1497:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:20","nodeType":"YulIdentifier","src":"1503:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:20","nodeType":"YulIdentifier","src":"1490:6:20"},"nativeSrc":"1490:25:20","nodeType":"YulFunctionCall","src":"1490:25:20"},"nativeSrc":"1490:25:20","nodeType":"YulExpressionStatement","src":"1490:25:20"},{"nativeSrc":"1569:31:20","nodeType":"YulAssignment","src":"1569:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:20","nodeType":"YulLiteral","src":"1589:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:20","nodeType":"YulLiteral","src":"1595:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:20","nodeType":"YulIdentifier","src":"1579:9:20"},"nativeSrc":"1579:21:20","nodeType":"YulFunctionCall","src":"1579:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:20","nodeType":"YulIdentifier","src":"1569:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5082,"isOffset":false,"isSlot":false,"src":"1569:6:20","valueSize":1},{"declaration":5079,"isOffset":false,"isSlot":false,"src":"1503:11:20","valueSize":1}],"flags":["memory-safe"],"id":5084,"nodeType":"InlineAssembly","src":"1349:325:20"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"552:690:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:20","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:20","nodeType":"VariableDeclaration","scope":5086,"src":"1279:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:20"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"digest","nameLocation":"1331:6:20","nodeType":"VariableDeclaration","scope":5086,"src":"1323:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:20"},"scope":5157,"src":"1247:433:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5111,"nodeType":"Block","src":"2257:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":5103,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"2366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:20","memberName":"length","nodeType":"MemberAccess","src":"2366:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5101,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"2349:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4723_$","typeString":"type(library Strings)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3435,"src":"2349:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5099,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:20","typeDescriptions":{}}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5107,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"2384:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5095,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:20","typeDescriptions":{}}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5094,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5093,"id":5110,"nodeType":"Return","src":"2267:126:20"}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"1686:480:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":5112,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:20","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"message","nameLocation":"2216:7:20","nodeType":"VariableDeclaration","scope":5112,"src":"2203:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5088,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:20"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5112,"src":"2248:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:20"},"scope":5157,"src":"2171:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"2854:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5126,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"2910:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5127,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"2921:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5122,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5121,"id":5130,"nodeType":"Return","src":"2864:63:20"}]},"documentation":{"id":5113,"nodeType":"StructuredDocumentation","src":"2406:332:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:20","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"validator","nameLocation":"2792:9:20","nodeType":"VariableDeclaration","scope":5132,"src":"2784:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5114,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"data","nameLocation":"2816:4:20","nodeType":"VariableDeclaration","scope":5132,"src":"2803:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5116,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:20"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5132,"src":"2845:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:20"},"scope":5157,"src":"2743:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5143,"nodeType":"Block","src":"3216:216:20","statements":[{"AST":{"nativeSrc":"3251:175:20","nodeType":"YulBlock","src":"3251:175:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:20","nodeType":"YulLiteral","src":"3272:4:20","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:20","nodeType":"YulLiteral","src":"3278:10:20","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:20","nodeType":"YulIdentifier","src":"3265:6:20"},"nativeSrc":"3265:24:20","nodeType":"YulFunctionCall","src":"3265:24:20"},"nativeSrc":"3265:24:20","nodeType":"YulExpressionStatement","src":"3265:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:20","nodeType":"YulLiteral","src":"3309:4:20","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:20","nodeType":"YulLiteral","src":"3319:2:20","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:20","nodeType":"YulIdentifier","src":"3323:9:20"}],"functionName":{"name":"shl","nativeSrc":"3315:3:20","nodeType":"YulIdentifier","src":"3315:3:20"},"nativeSrc":"3315:18:20","nodeType":"YulFunctionCall","src":"3315:18:20"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:20","nodeType":"YulIdentifier","src":"3302:6:20"},"nativeSrc":"3302:32:20","nodeType":"YulFunctionCall","src":"3302:32:20"},"nativeSrc":"3302:32:20","nodeType":"YulExpressionStatement","src":"3302:32:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:20","nodeType":"YulLiteral","src":"3354:4:20","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:20","nodeType":"YulIdentifier","src":"3360:11:20"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:20","nodeType":"YulIdentifier","src":"3347:6:20"},"nativeSrc":"3347:25:20","nodeType":"YulFunctionCall","src":"3347:25:20"},"nativeSrc":"3347:25:20","nodeType":"YulExpressionStatement","src":"3347:25:20"},{"nativeSrc":"3385:31:20","nodeType":"YulAssignment","src":"3385:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:20","nodeType":"YulLiteral","src":"3405:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:20","nodeType":"YulLiteral","src":"3411:4:20","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:20","nodeType":"YulIdentifier","src":"3395:9:20"},"nativeSrc":"3395:21:20","nodeType":"YulFunctionCall","src":"3395:21:20"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:20","nodeType":"YulIdentifier","src":"3385:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5140,"isOffset":false,"isSlot":false,"src":"3385:6:20","valueSize":1},{"declaration":5137,"isOffset":false,"isSlot":false,"src":"3360:11:20","valueSize":1},{"declaration":5135,"isOffset":false,"isSlot":false,"src":"3323:9:20","valueSize":1}],"flags":["memory-safe"],"id":5142,"nodeType":"InlineAssembly","src":"3226:200:20"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"2940:129:20","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":5144,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:20","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"validator","nameLocation":"3132:9:20","nodeType":"VariableDeclaration","scope":5144,"src":"3124:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5134,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:20","nodeType":"VariableDeclaration","scope":5144,"src":"3151:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:20"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"digest","nameLocation":"3208:6:20","nodeType":"VariableDeclaration","scope":5144,"src":"3200:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:20"},"scope":5157,"src":"3074:358:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5155,"nodeType":"Block","src":"3983:265:20","statements":[{"AST":{"nativeSrc":"4018:224:20","nodeType":"YulBlock","src":"4018:224:20","statements":[{"nativeSrc":"4032:22:20","nodeType":"YulVariableDeclaration","src":"4032:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:20","nodeType":"YulLiteral","src":"4049:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:20","nodeType":"YulIdentifier","src":"4043:5:20"},"nativeSrc":"4043:11:20","nodeType":"YulFunctionCall","src":"4043:11:20"},"variables":[{"name":"ptr","nativeSrc":"4036:3:20","nodeType":"YulTypedName","src":"4036:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:20","nodeType":"YulIdentifier","src":"4074:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:20","nodeType":"YulLiteral","src":"4079:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:20","nodeType":"YulIdentifier","src":"4067:6:20"},"nativeSrc":"4067:23:20","nodeType":"YulFunctionCall","src":"4067:23:20"},"nativeSrc":"4067:23:20","nodeType":"YulExpressionStatement","src":"4067:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:20","nodeType":"YulIdentifier","src":"4114:3:20"},{"kind":"number","nativeSrc":"4119:4:20","nodeType":"YulLiteral","src":"4119:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:20","nodeType":"YulIdentifier","src":"4110:3:20"},"nativeSrc":"4110:14:20","nodeType":"YulFunctionCall","src":"4110:14:20"},{"name":"domainSeparator","nativeSrc":"4126:15:20","nodeType":"YulIdentifier","src":"4126:15:20"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:20","nodeType":"YulIdentifier","src":"4103:6:20"},"nativeSrc":"4103:39:20","nodeType":"YulFunctionCall","src":"4103:39:20"},"nativeSrc":"4103:39:20","nodeType":"YulExpressionStatement","src":"4103:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:20","nodeType":"YulIdentifier","src":"4166:3:20"},{"kind":"number","nativeSrc":"4171:4:20","nodeType":"YulLiteral","src":"4171:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:20","nodeType":"YulIdentifier","src":"4162:3:20"},"nativeSrc":"4162:14:20","nodeType":"YulFunctionCall","src":"4162:14:20"},{"name":"structHash","nativeSrc":"4178:10:20","nodeType":"YulIdentifier","src":"4178:10:20"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:20","nodeType":"YulIdentifier","src":"4155:6:20"},"nativeSrc":"4155:34:20","nodeType":"YulFunctionCall","src":"4155:34:20"},"nativeSrc":"4155:34:20","nodeType":"YulExpressionStatement","src":"4155:34:20"},{"nativeSrc":"4202:30:20","nodeType":"YulAssignment","src":"4202:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:20","nodeType":"YulIdentifier","src":"4222:3:20"},{"kind":"number","nativeSrc":"4227:4:20","nodeType":"YulLiteral","src":"4227:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:20","nodeType":"YulIdentifier","src":"4212:9:20"},"nativeSrc":"4212:20:20","nodeType":"YulFunctionCall","src":"4212:20:20"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:20","nodeType":"YulIdentifier","src":"4202:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5152,"isOffset":false,"isSlot":false,"src":"4202:6:20","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"4126:15:20","valueSize":1},{"declaration":5149,"isOffset":false,"isSlot":false,"src":"4178:10:20","valueSize":1}],"flags":["memory-safe"],"id":5154,"nodeType":"InlineAssembly","src":"3993:249:20"}]},"documentation":{"id":5145,"nodeType":"StructuredDocumentation","src":"3438:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":5156,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:20","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:20","nodeType":"VariableDeclaration","scope":5156,"src":"3899:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:20","nodeType":"VariableDeclaration","scope":5156,"src":"3924:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:20"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"digest","nameLocation":"3975:6:20","nodeType":"VariableDeclaration","scope":5156,"src":"3967:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:20"},"scope":5157,"src":"3874:374:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5158,"src":"521:3729:20","usedErrors":[],"usedEvents":[]}],"src":"123:4128:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5169]},"id":5170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5160,"nodeType":"StructuredDocumentation","src":"141:280:21","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5169,"linearizedBaseContracts":[5169],"name":"IERC165","nameLocation":"432:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"446:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5168,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:21","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:21","nodeType":"VariableDeclaration","scope":5168,"src":"818:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5162,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:21"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"861:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5165,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:21"},"scope":5169,"src":"791:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5170,"src":"422:447:21","usedErrors":[],"usedEvents":[]}],"src":"115:755:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6790],"Panic":[2998],"SafeCast":[8555]},"id":6791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5171,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6791,"sourceUnit":2999,"src":"129:35:22","symbolAliases":[{"foreign":{"id":5172,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6791,"sourceUnit":8556,"src":"165:40:22","symbolAliases":[{"foreign":{"id":5174,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6790,"linearizedBaseContracts":[6790],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5181,"members":[{"id":5177,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":5178,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":5179,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":5180,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":5194,"nodeType":"Block","src":"731:112:22","statements":[{"AST":{"nativeSrc":"766:71:22","nodeType":"YulBlock","src":"766:71:22","statements":[{"nativeSrc":"780:16:22","nodeType":"YulAssignment","src":"780:16:22","value":{"arguments":[{"name":"a","nativeSrc":"791:1:22","nodeType":"YulIdentifier","src":"791:1:22"},{"name":"b","nativeSrc":"794:1:22","nodeType":"YulIdentifier","src":"794:1:22"}],"functionName":{"name":"add","nativeSrc":"787:3:22","nodeType":"YulIdentifier","src":"787:3:22"},"nativeSrc":"787:9:22","nodeType":"YulFunctionCall","src":"787:9:22"},"variableNames":[{"name":"low","nativeSrc":"780:3:22","nodeType":"YulIdentifier","src":"780:3:22"}]},{"nativeSrc":"809:18:22","nodeType":"YulAssignment","src":"809:18:22","value":{"arguments":[{"name":"low","nativeSrc":"820:3:22","nodeType":"YulIdentifier","src":"820:3:22"},{"name":"a","nativeSrc":"825:1:22","nodeType":"YulIdentifier","src":"825:1:22"}],"functionName":{"name":"lt","nativeSrc":"817:2:22","nodeType":"YulIdentifier","src":"817:2:22"},"nativeSrc":"817:10:22","nodeType":"YulFunctionCall","src":"817:10:22"},"variableNames":[{"name":"high","nativeSrc":"809:4:22","nodeType":"YulIdentifier","src":"809:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5184,"isOffset":false,"isSlot":false,"src":"791:1:22","valueSize":1},{"declaration":5184,"isOffset":false,"isSlot":false,"src":"825:1:22","valueSize":1},{"declaration":5186,"isOffset":false,"isSlot":false,"src":"794:1:22","valueSize":1},{"declaration":5189,"isOffset":false,"isSlot":false,"src":"809:4:22","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"780:3:22","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"820:3:22","valueSize":1}],"flags":["memory-safe"],"id":5193,"nodeType":"InlineAssembly","src":"741:96:22"}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"475:163:22","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:22","nodeType":"FunctionDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"a","nameLocation":"667:1:22","nodeType":"VariableDeclaration","scope":5195,"src":"659:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5186,"mutability":"mutable","name":"b","nameLocation":"678:1:22","nodeType":"VariableDeclaration","scope":5195,"src":"670:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:22"},"returnParameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"high","nameLocation":"712:4:22","nodeType":"VariableDeclaration","scope":5195,"src":"704:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"low","nameLocation":"726:3:22","nodeType":"VariableDeclaration","scope":5195,"src":"718:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:22"},"scope":6790,"src":"643:200:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"1115:462:22","statements":[{"AST":{"nativeSrc":"1437:134:22","nodeType":"YulBlock","src":"1437:134:22","statements":[{"nativeSrc":"1451:30:22","nodeType":"YulVariableDeclaration","src":"1451:30:22","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:22","nodeType":"YulIdentifier","src":"1468:1:22"},{"name":"b","nativeSrc":"1471:1:22","nodeType":"YulIdentifier","src":"1471:1:22"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:22","nodeType":"YulLiteral","src":"1478:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:22","nodeType":"YulIdentifier","src":"1474:3:22"},"nativeSrc":"1474:6:22","nodeType":"YulFunctionCall","src":"1474:6:22"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:22","nodeType":"YulIdentifier","src":"1461:6:22"},"nativeSrc":"1461:20:22","nodeType":"YulFunctionCall","src":"1461:20:22"},"variables":[{"name":"mm","nativeSrc":"1455:2:22","nodeType":"YulTypedName","src":"1455:2:22","type":""}]},{"nativeSrc":"1494:16:22","nodeType":"YulAssignment","src":"1494:16:22","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:22","nodeType":"YulIdentifier","src":"1505:1:22"},{"name":"b","nativeSrc":"1508:1:22","nodeType":"YulIdentifier","src":"1508:1:22"}],"functionName":{"name":"mul","nativeSrc":"1501:3:22","nodeType":"YulIdentifier","src":"1501:3:22"},"nativeSrc":"1501:9:22","nodeType":"YulFunctionCall","src":"1501:9:22"},"variableNames":[{"name":"low","nativeSrc":"1494:3:22","nodeType":"YulIdentifier","src":"1494:3:22"}]},{"nativeSrc":"1523:38:22","nodeType":"YulAssignment","src":"1523:38:22","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:22","nodeType":"YulIdentifier","src":"1539:2:22"},{"name":"low","nativeSrc":"1543:3:22","nodeType":"YulIdentifier","src":"1543:3:22"}],"functionName":{"name":"sub","nativeSrc":"1535:3:22","nodeType":"YulIdentifier","src":"1535:3:22"},"nativeSrc":"1535:12:22","nodeType":"YulFunctionCall","src":"1535:12:22"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:22","nodeType":"YulIdentifier","src":"1552:2:22"},{"name":"low","nativeSrc":"1556:3:22","nodeType":"YulIdentifier","src":"1556:3:22"}],"functionName":{"name":"lt","nativeSrc":"1549:2:22","nodeType":"YulIdentifier","src":"1549:2:22"},"nativeSrc":"1549:11:22","nodeType":"YulFunctionCall","src":"1549:11:22"}],"functionName":{"name":"sub","nativeSrc":"1531:3:22","nodeType":"YulIdentifier","src":"1531:3:22"},"nativeSrc":"1531:30:22","nodeType":"YulFunctionCall","src":"1531:30:22"},"variableNames":[{"name":"high","nativeSrc":"1523:4:22","nodeType":"YulIdentifier","src":"1523:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5198,"isOffset":false,"isSlot":false,"src":"1468:1:22","valueSize":1},{"declaration":5198,"isOffset":false,"isSlot":false,"src":"1505:1:22","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"1471:1:22","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"1508:1:22","valueSize":1},{"declaration":5203,"isOffset":false,"isSlot":false,"src":"1523:4:22","valueSize":1},{"declaration":5205,"isOffset":false,"isSlot":false,"src":"1494:3:22","valueSize":1},{"declaration":5205,"isOffset":false,"isSlot":false,"src":"1543:3:22","valueSize":1},{"declaration":5205,"isOffset":false,"isSlot":false,"src":"1556:3:22","valueSize":1}],"flags":["memory-safe"],"id":5207,"nodeType":"InlineAssembly","src":"1412:159:22"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"849:173:22","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:22","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"a","nameLocation":"1051:1:22","nodeType":"VariableDeclaration","scope":5209,"src":"1043:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5200,"mutability":"mutable","name":"b","nameLocation":"1062:1:22","nodeType":"VariableDeclaration","scope":5209,"src":"1054:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:22"},"returnParameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"high","nameLocation":"1096:4:22","nodeType":"VariableDeclaration","scope":5209,"src":"1088:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5205,"mutability":"mutable","name":"low","nameLocation":"1110:3:22","nodeType":"VariableDeclaration","scope":5209,"src":"1102:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:22"},"scope":6790,"src":"1027:550:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"1784:149:22","statements":[{"id":5242,"nodeType":"UncheckedBlock","src":"1794:133:22","statements":[{"assignments":[5222],"declarations":[{"constant":false,"id":5222,"mutability":"mutable","name":"c","nameLocation":"1826:1:22","nodeType":"VariableDeclaration","scope":5242,"src":"1818:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1830:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5224,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"1834:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:22"},{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5227,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"1849:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"1859:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1864:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5232,"nodeType":"ExpressionStatement","src":"1849:16:22"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"1879:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"1888:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5237,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"1908:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"1892:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"1892:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"1879:37:22"}]}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"1583:105:22","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:22","nodeType":"FunctionDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"a","nameLocation":"1717:1:22","nodeType":"VariableDeclaration","scope":5244,"src":"1709:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5214,"mutability":"mutable","name":"b","nameLocation":"1728:1:22","nodeType":"VariableDeclaration","scope":5244,"src":"1720:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:22"},"returnParameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"success","nameLocation":"1759:7:22","nodeType":"VariableDeclaration","scope":5244,"src":"1754:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5216,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5219,"mutability":"mutable","name":"result","nameLocation":"1776:6:22","nodeType":"VariableDeclaration","scope":5244,"src":"1768:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:22"},"scope":6790,"src":"1693:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"2143:149:22","statements":[{"id":5277,"nodeType":"UncheckedBlock","src":"2153:133:22","statements":[{"assignments":[5257],"declarations":[{"constant":false,"id":5257,"mutability":"mutable","name":"c","nameLocation":"2185:1:22","nodeType":"VariableDeclaration","scope":5277,"src":"2177:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"2189:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"2193:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:22"},{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"2208:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"2218:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"2223:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5267,"nodeType":"ExpressionStatement","src":"2208:16:22"},{"expression":{"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"2238:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"2247:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5272,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"2267:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5270,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"2251:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"2251:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5276,"nodeType":"ExpressionStatement","src":"2238:37:22"}]}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"1939:108:22","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:22","nodeType":"FunctionDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"a","nameLocation":"2076:1:22","nodeType":"VariableDeclaration","scope":5279,"src":"2068:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"b","nameLocation":"2087:1:22","nodeType":"VariableDeclaration","scope":5279,"src":"2079:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:22"},"returnParameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"success","nameLocation":"2118:7:22","nodeType":"VariableDeclaration","scope":5279,"src":"2113:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5251,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"result","nameLocation":"2135:6:22","nodeType":"VariableDeclaration","scope":5279,"src":"2127:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:22"},"scope":6790,"src":"2052:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"2505:391:22","statements":[{"id":5307,"nodeType":"UncheckedBlock","src":"2515:375:22","statements":[{"assignments":[5292],"declarations":[{"constant":false,"id":5292,"mutability":"mutable","name":"c","nameLocation":"2547:1:22","nodeType":"VariableDeclaration","scope":5307,"src":"2539:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"2551:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"2555:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:22"},{"AST":{"nativeSrc":"2595:188:22","nodeType":"YulBlock","src":"2595:188:22","statements":[{"nativeSrc":"2727:42:22","nodeType":"YulAssignment","src":"2727:42:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:22","nodeType":"YulIdentifier","src":"2748:1:22"},{"name":"a","nativeSrc":"2751:1:22","nodeType":"YulIdentifier","src":"2751:1:22"}],"functionName":{"name":"div","nativeSrc":"2744:3:22","nodeType":"YulIdentifier","src":"2744:3:22"},"nativeSrc":"2744:9:22","nodeType":"YulFunctionCall","src":"2744:9:22"},{"name":"b","nativeSrc":"2755:1:22","nodeType":"YulIdentifier","src":"2755:1:22"}],"functionName":{"name":"eq","nativeSrc":"2741:2:22","nodeType":"YulIdentifier","src":"2741:2:22"},"nativeSrc":"2741:16:22","nodeType":"YulFunctionCall","src":"2741:16:22"},{"arguments":[{"name":"a","nativeSrc":"2766:1:22","nodeType":"YulIdentifier","src":"2766:1:22"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:22","nodeType":"YulIdentifier","src":"2759:6:22"},"nativeSrc":"2759:9:22","nodeType":"YulFunctionCall","src":"2759:9:22"}],"functionName":{"name":"or","nativeSrc":"2738:2:22","nodeType":"YulIdentifier","src":"2738:2:22"},"nativeSrc":"2738:31:22","nodeType":"YulFunctionCall","src":"2738:31:22"},"variableNames":[{"name":"success","nativeSrc":"2727:7:22","nodeType":"YulIdentifier","src":"2727:7:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5282,"isOffset":false,"isSlot":false,"src":"2751:1:22","valueSize":1},{"declaration":5282,"isOffset":false,"isSlot":false,"src":"2766:1:22","valueSize":1},{"declaration":5284,"isOffset":false,"isSlot":false,"src":"2755:1:22","valueSize":1},{"declaration":5292,"isOffset":false,"isSlot":false,"src":"2748:1:22","valueSize":1},{"declaration":5287,"isOffset":false,"isSlot":false,"src":"2727:7:22","valueSize":1}],"flags":["memory-safe"],"id":5297,"nodeType":"InlineAssembly","src":"2570:213:22"},{"expression":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"2851:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5302,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"2871:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5300,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"2855:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"2855:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5306,"nodeType":"ExpressionStatement","src":"2842:37:22"}]}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"2298:111:22","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:22","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"a","nameLocation":"2438:1:22","nodeType":"VariableDeclaration","scope":5309,"src":"2430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5284,"mutability":"mutable","name":"b","nameLocation":"2449:1:22","nodeType":"VariableDeclaration","scope":5309,"src":"2441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:22"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"success","nameLocation":"2480:7:22","nodeType":"VariableDeclaration","scope":5309,"src":"2475:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5286,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"result","nameLocation":"2497:6:22","nodeType":"VariableDeclaration","scope":5309,"src":"2489:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:22"},"scope":6790,"src":"2414:482:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5329,"nodeType":"Block","src":"3111:231:22","statements":[{"id":5328,"nodeType":"UncheckedBlock","src":"3121:215:22","statements":[{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"3145:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"3155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5326,"nodeType":"ExpressionStatement","src":"3145:15:22"},{"AST":{"nativeSrc":"3199:127:22","nodeType":"YulBlock","src":"3199:127:22","statements":[{"nativeSrc":"3293:19:22","nodeType":"YulAssignment","src":"3293:19:22","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:22","nodeType":"YulIdentifier","src":"3307:1:22"},{"name":"b","nativeSrc":"3310:1:22","nodeType":"YulIdentifier","src":"3310:1:22"}],"functionName":{"name":"div","nativeSrc":"3303:3:22","nodeType":"YulIdentifier","src":"3303:3:22"},"nativeSrc":"3303:9:22","nodeType":"YulFunctionCall","src":"3303:9:22"},"variableNames":[{"name":"result","nativeSrc":"3293:6:22","nodeType":"YulIdentifier","src":"3293:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5312,"isOffset":false,"isSlot":false,"src":"3307:1:22","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"3310:1:22","valueSize":1},{"declaration":5319,"isOffset":false,"isSlot":false,"src":"3293:6:22","valueSize":1}],"flags":["memory-safe"],"id":5327,"nodeType":"InlineAssembly","src":"3174:152:22"}]}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"2902:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5330,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:22","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"a","nameLocation":"3044:1:22","nodeType":"VariableDeclaration","scope":5330,"src":"3036:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5314,"mutability":"mutable","name":"b","nameLocation":"3055:1:22","nodeType":"VariableDeclaration","scope":5330,"src":"3047:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:22"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"success","nameLocation":"3086:7:22","nodeType":"VariableDeclaration","scope":5330,"src":"3081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5316,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5319,"mutability":"mutable","name":"result","nameLocation":"3103:6:22","nodeType":"VariableDeclaration","scope":5330,"src":"3095:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:22"},"scope":6790,"src":"3020:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"3567:231:22","statements":[{"id":5349,"nodeType":"UncheckedBlock","src":"3577:215:22","statements":[{"expression":{"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"3601:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3611:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"ExpressionStatement","src":"3601:15:22"},{"AST":{"nativeSrc":"3655:127:22","nodeType":"YulBlock","src":"3655:127:22","statements":[{"nativeSrc":"3749:19:22","nodeType":"YulAssignment","src":"3749:19:22","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:22","nodeType":"YulIdentifier","src":"3763:1:22"},{"name":"b","nativeSrc":"3766:1:22","nodeType":"YulIdentifier","src":"3766:1:22"}],"functionName":{"name":"mod","nativeSrc":"3759:3:22","nodeType":"YulIdentifier","src":"3759:3:22"},"nativeSrc":"3759:9:22","nodeType":"YulFunctionCall","src":"3759:9:22"},"variableNames":[{"name":"result","nativeSrc":"3749:6:22","nodeType":"YulIdentifier","src":"3749:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5333,"isOffset":false,"isSlot":false,"src":"3763:1:22","valueSize":1},{"declaration":5335,"isOffset":false,"isSlot":false,"src":"3766:1:22","valueSize":1},{"declaration":5340,"isOffset":false,"isSlot":false,"src":"3749:6:22","valueSize":1}],"flags":["memory-safe"],"id":5348,"nodeType":"InlineAssembly","src":"3630:152:22"}]}]},"documentation":{"id":5331,"nodeType":"StructuredDocumentation","src":"3348:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:22","nodeType":"FunctionDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"a","nameLocation":"3500:1:22","nodeType":"VariableDeclaration","scope":5351,"src":"3492:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5335,"mutability":"mutable","name":"b","nameLocation":"3511:1:22","nodeType":"VariableDeclaration","scope":5351,"src":"3503:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:22"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"success","nameLocation":"3542:7:22","nodeType":"VariableDeclaration","scope":5351,"src":"3537:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5337,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5340,"mutability":"mutable","name":"result","nameLocation":"3559:6:22","nodeType":"VariableDeclaration","scope":5351,"src":"3551:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:22"},"scope":6790,"src":"3476:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"3989:122:22","statements":[{"assignments":[5362,5364],"declarations":[{"constant":false,"id":5362,"mutability":"mutable","name":"success","nameLocation":"4005:7:22","nodeType":"VariableDeclaration","scope":5380,"src":"4000:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5361,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"result","nameLocation":"4022:6:22","nodeType":"VariableDeclaration","scope":5380,"src":"4014:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5369,"initialValue":{"arguments":[{"id":5366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"4039:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"4042:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"4032:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:22"},{"expression":{"arguments":[{"id":5371,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4069:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"4078:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:22","memberName":"max","nodeType":"MemberAccess","src":"4086:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5370,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4061:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5360,"id":5379,"nodeType":"Return","src":"4054:50:22"}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"3804:103:22","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:22","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"a","nameLocation":"3943:1:22","nodeType":"VariableDeclaration","scope":5381,"src":"3935:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"b","nameLocation":"3954:1:22","nodeType":"VariableDeclaration","scope":5381,"src":"3946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:22"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5381,"src":"3980:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:22"},"scope":6790,"src":"3912:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"4294:73:22","statements":[{"assignments":[null,5392],"declarations":[null,{"constant":false,"id":5392,"mutability":"mutable","name":"result","nameLocation":"4315:6:22","nodeType":"VariableDeclaration","scope":5400,"src":"4307:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5397,"initialValue":{"arguments":[{"id":5394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"4332:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"4335:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"4325:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:22"},{"expression":{"id":5398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"4354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5390,"id":5399,"nodeType":"Return","src":"4347:13:22"}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"4117:95:22","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:22","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"a","nameLocation":"4248:1:22","nodeType":"VariableDeclaration","scope":5401,"src":"4240:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5386,"mutability":"mutable","name":"b","nameLocation":"4259:1:22","nodeType":"VariableDeclaration","scope":5401,"src":"4251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:22"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"4285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:22"},"scope":6790,"src":"4217:150:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5430,"nodeType":"Block","src":"4564:122:22","statements":[{"assignments":[5412,5414],"declarations":[{"constant":false,"id":5412,"mutability":"mutable","name":"success","nameLocation":"4580:7:22","nodeType":"VariableDeclaration","scope":5430,"src":"4575:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5411,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"result","nameLocation":"4597:6:22","nodeType":"VariableDeclaration","scope":5430,"src":"4589:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"arguments":[{"id":5416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"4614:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"4617:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5415,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"4607:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:22"},{"expression":{"arguments":[{"id":5421,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"4644:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"4653:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:22","memberName":"max","nodeType":"MemberAccess","src":"4661:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4636:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5410,"id":5429,"nodeType":"Return","src":"4629:50:22"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"4373:109:22","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5431,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:22","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"a","nameLocation":"4518:1:22","nodeType":"VariableDeclaration","scope":5431,"src":"4510:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"b","nameLocation":"4529:1:22","nodeType":"VariableDeclaration","scope":5431,"src":"4521:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:22"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"4555:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:22"},"scope":6790,"src":"4487:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"5158:207:22","statements":[{"id":5456,"nodeType":"UncheckedBlock","src":"5168:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"5306:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5312:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"5316:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5450,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"5337:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5448,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"5321:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"5321:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5442,"id":5455,"nodeType":"Return","src":"5299:49:22"}]}]},"documentation":{"id":5432,"nodeType":"StructuredDocumentation","src":"4692:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:22","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"condition","nameLocation":"5093:9:22","nodeType":"VariableDeclaration","scope":5458,"src":"5088:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5433,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5436,"mutability":"mutable","name":"a","nameLocation":"5112:1:22","nodeType":"VariableDeclaration","scope":5458,"src":"5104:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5438,"mutability":"mutable","name":"b","nameLocation":"5123:1:22","nodeType":"VariableDeclaration","scope":5458,"src":"5115:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:22"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5458,"src":"5149:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:22"},"scope":6790,"src":"5071:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5476,"nodeType":"Block","src":"5502:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"5527:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"5531:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"5534:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"5537:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5468,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"5519:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5467,"id":5475,"nodeType":"Return","src":"5512:27:22"}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"5371:59:22","text":" @dev Returns the largest of two numbers."},"id":5477,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:22","nodeType":"FunctionDefinition","parameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"a","nameLocation":"5456:1:22","nodeType":"VariableDeclaration","scope":5477,"src":"5448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5463,"mutability":"mutable","name":"b","nameLocation":"5467:1:22","nodeType":"VariableDeclaration","scope":5477,"src":"5459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:22"},"returnParameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5477,"src":"5493:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:22"},"scope":6790,"src":"5435:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"5684:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"5709:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"5713:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"5716:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5492,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"5719:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5487,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"5701:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5486,"id":5494,"nodeType":"Return","src":"5694:27:22"}]},"documentation":{"id":5478,"nodeType":"StructuredDocumentation","src":"5552:60:22","text":" @dev Returns the smallest of two numbers."},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:22","nodeType":"FunctionDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"a","nameLocation":"5638:1:22","nodeType":"VariableDeclaration","scope":5496,"src":"5630:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5482,"mutability":"mutable","name":"b","nameLocation":"5649:1:22","nodeType":"VariableDeclaration","scope":5496,"src":"5641:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:22"},"returnParameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5496,"src":"5675:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:22"},"scope":6790,"src":"5617:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5518,"nodeType":"Block","src":"5912:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"5967:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"5971:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"5977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5511,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"5981:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5505,"id":5517,"nodeType":"Return","src":"5959:28:22"}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"5734:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5519,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:22","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"a","nameLocation":"5866:1:22","nodeType":"VariableDeclaration","scope":5519,"src":"5858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"b","nameLocation":"5877:1:22","nodeType":"VariableDeclaration","scope":5519,"src":"5869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:22"},"returnParameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5519,"src":"5903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:22"},"scope":6790,"src":"5841:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5559,"nodeType":"Block","src":"6286:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"6300:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5540,"nodeType":"IfStatement","src":"6296:150:22","trueBody":{"id":5539,"nodeType":"Block","src":"6308:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":5535,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"6412:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"6412:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5532,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"6400:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"6400:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5538,"nodeType":"ExpressionStatement","src":"6400:35:22"}]}},{"id":5558,"nodeType":"UncheckedBlock","src":"6829:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"6876:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5541,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6860:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"6860:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"6887:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"6896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5528,"id":5557,"nodeType":"Return","src":"6853:49:22"}]}]},"documentation":{"id":5520,"nodeType":"StructuredDocumentation","src":"6000:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5560,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:22","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"a","nameLocation":"6240:1:22","nodeType":"VariableDeclaration","scope":5560,"src":"6232:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"b","nameLocation":"6251:1:22","nodeType":"VariableDeclaration","scope":5560,"src":"6243:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:22"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5560,"src":"6277:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:22"},"scope":6790,"src":"6215:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"7340:3585:22","statements":[{"id":5694,"nodeType":"UncheckedBlock","src":"7350:3569:22","statements":[{"assignments":[5573,5575],"declarations":[{"constant":false,"id":5573,"mutability":"mutable","name":"high","nameLocation":"7383:4:22","nodeType":"VariableDeclaration","scope":5694,"src":"7375:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5575,"mutability":"mutable","name":"low","nameLocation":"7397:3:22","nodeType":"VariableDeclaration","scope":5694,"src":"7389:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5580,"initialValue":{"arguments":[{"id":5577,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"7411:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5578,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"7414:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7404:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"7498:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"7494:365:22","trueBody":{"id":5588,"nodeType":"Block","src":"7509:350:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"7827:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5585,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"7833:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5571,"id":5587,"nodeType":"Return","src":"7820:24:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"7969:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5591,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"7984:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5608,"nodeType":"IfStatement","src":"7965:142:22","trueBody":{"id":5607,"nodeType":"Block","src":"7990:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8028:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5600,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"8046:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"8046:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5602,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"8070:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"8070:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8020:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5593,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"8008:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"8008:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5606,"nodeType":"ExpressionStatement","src":"8008:84:22"}]}},{"assignments":[5610],"declarations":[{"constant":false,"id":5610,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:22","nodeType":"VariableDeclaration","scope":5694,"src":"8359:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5611,"nodeType":"VariableDeclarationStatement","src":"8359:17:22"},{"AST":{"nativeSrc":"8415:283:22","nodeType":"YulBlock","src":"8415:283:22","statements":[{"nativeSrc":"8484:38:22","nodeType":"YulAssignment","src":"8484:38:22","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:22","nodeType":"YulIdentifier","src":"8504:1:22"},{"name":"y","nativeSrc":"8507:1:22","nodeType":"YulIdentifier","src":"8507:1:22"},{"name":"denominator","nativeSrc":"8510:11:22","nodeType":"YulIdentifier","src":"8510:11:22"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:22","nodeType":"YulIdentifier","src":"8497:6:22"},"nativeSrc":"8497:25:22","nodeType":"YulFunctionCall","src":"8497:25:22"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:22","nodeType":"YulIdentifier","src":"8484:9:22"}]},{"nativeSrc":"8604:37:22","nodeType":"YulAssignment","src":"8604:37:22","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:22","nodeType":"YulIdentifier","src":"8616:4:22"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:22","nodeType":"YulIdentifier","src":"8625:9:22"},{"name":"low","nativeSrc":"8636:3:22","nodeType":"YulIdentifier","src":"8636:3:22"}],"functionName":{"name":"gt","nativeSrc":"8622:2:22","nodeType":"YulIdentifier","src":"8622:2:22"},"nativeSrc":"8622:18:22","nodeType":"YulFunctionCall","src":"8622:18:22"}],"functionName":{"name":"sub","nativeSrc":"8612:3:22","nodeType":"YulIdentifier","src":"8612:3:22"},"nativeSrc":"8612:29:22","nodeType":"YulFunctionCall","src":"8612:29:22"},"variableNames":[{"name":"high","nativeSrc":"8604:4:22","nodeType":"YulIdentifier","src":"8604:4:22"}]},{"nativeSrc":"8658:26:22","nodeType":"YulAssignment","src":"8658:26:22","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:22","nodeType":"YulIdentifier","src":"8669:3:22"},{"name":"remainder","nativeSrc":"8674:9:22","nodeType":"YulIdentifier","src":"8674:9:22"}],"functionName":{"name":"sub","nativeSrc":"8665:3:22","nodeType":"YulIdentifier","src":"8665:3:22"},"nativeSrc":"8665:19:22","nodeType":"YulFunctionCall","src":"8665:19:22"},"variableNames":[{"name":"low","nativeSrc":"8658:3:22","nodeType":"YulIdentifier","src":"8658:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5567,"isOffset":false,"isSlot":false,"src":"8510:11:22","valueSize":1},{"declaration":5573,"isOffset":false,"isSlot":false,"src":"8604:4:22","valueSize":1},{"declaration":5573,"isOffset":false,"isSlot":false,"src":"8616:4:22","valueSize":1},{"declaration":5575,"isOffset":false,"isSlot":false,"src":"8636:3:22","valueSize":1},{"declaration":5575,"isOffset":false,"isSlot":false,"src":"8658:3:22","valueSize":1},{"declaration":5575,"isOffset":false,"isSlot":false,"src":"8669:3:22","valueSize":1},{"declaration":5610,"isOffset":false,"isSlot":false,"src":"8484:9:22","valueSize":1},{"declaration":5610,"isOffset":false,"isSlot":false,"src":"8625:9:22","valueSize":1},{"declaration":5610,"isOffset":false,"isSlot":false,"src":"8674:9:22","valueSize":1},{"declaration":5563,"isOffset":false,"isSlot":false,"src":"8504:1:22","valueSize":1},{"declaration":5565,"isOffset":false,"isSlot":false,"src":"8507:1:22","valueSize":1}],"flags":["memory-safe"],"id":5612,"nodeType":"InlineAssembly","src":"8390:308:22"},{"assignments":[5614],"declarations":[{"constant":false,"id":5614,"mutability":"mutable","name":"twos","nameLocation":"8910:4:22","nodeType":"VariableDeclaration","scope":5694,"src":"8902:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8917:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5617,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8936:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:22"},{"AST":{"nativeSrc":"8987:359:22","nodeType":"YulBlock","src":"8987:359:22","statements":[{"nativeSrc":"9052:37:22","nodeType":"YulAssignment","src":"9052:37:22","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:22","nodeType":"YulIdentifier","src":"9071:11:22"},{"name":"twos","nativeSrc":"9084:4:22","nodeType":"YulIdentifier","src":"9084:4:22"}],"functionName":{"name":"div","nativeSrc":"9067:3:22","nodeType":"YulIdentifier","src":"9067:3:22"},"nativeSrc":"9067:22:22","nodeType":"YulFunctionCall","src":"9067:22:22"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:22","nodeType":"YulIdentifier","src":"9052:11:22"}]},{"nativeSrc":"9153:21:22","nodeType":"YulAssignment","src":"9153:21:22","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:22","nodeType":"YulIdentifier","src":"9164:3:22"},{"name":"twos","nativeSrc":"9169:4:22","nodeType":"YulIdentifier","src":"9169:4:22"}],"functionName":{"name":"div","nativeSrc":"9160:3:22","nodeType":"YulIdentifier","src":"9160:3:22"},"nativeSrc":"9160:14:22","nodeType":"YulFunctionCall","src":"9160:14:22"},"variableNames":[{"name":"low","nativeSrc":"9153:3:22","nodeType":"YulIdentifier","src":"9153:3:22"}]},{"nativeSrc":"9293:39:22","nodeType":"YulAssignment","src":"9293:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:22","nodeType":"YulLiteral","src":"9313:1:22","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:22","nodeType":"YulIdentifier","src":"9316:4:22"}],"functionName":{"name":"sub","nativeSrc":"9309:3:22","nodeType":"YulIdentifier","src":"9309:3:22"},"nativeSrc":"9309:12:22","nodeType":"YulFunctionCall","src":"9309:12:22"},{"name":"twos","nativeSrc":"9323:4:22","nodeType":"YulIdentifier","src":"9323:4:22"}],"functionName":{"name":"div","nativeSrc":"9305:3:22","nodeType":"YulIdentifier","src":"9305:3:22"},"nativeSrc":"9305:23:22","nodeType":"YulFunctionCall","src":"9305:23:22"},{"kind":"number","nativeSrc":"9330:1:22","nodeType":"YulLiteral","src":"9330:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:22","nodeType":"YulIdentifier","src":"9301:3:22"},"nativeSrc":"9301:31:22","nodeType":"YulFunctionCall","src":"9301:31:22"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:22","nodeType":"YulIdentifier","src":"9293:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5567,"isOffset":false,"isSlot":false,"src":"9052:11:22","valueSize":1},{"declaration":5567,"isOffset":false,"isSlot":false,"src":"9071:11:22","valueSize":1},{"declaration":5575,"isOffset":false,"isSlot":false,"src":"9153:3:22","valueSize":1},{"declaration":5575,"isOffset":false,"isSlot":false,"src":"9164:3:22","valueSize":1},{"declaration":5614,"isOffset":false,"isSlot":false,"src":"9084:4:22","valueSize":1},{"declaration":5614,"isOffset":false,"isSlot":false,"src":"9169:4:22","valueSize":1},{"declaration":5614,"isOffset":false,"isSlot":false,"src":"9293:4:22","valueSize":1},{"declaration":5614,"isOffset":false,"isSlot":false,"src":"9316:4:22","valueSize":1},{"declaration":5614,"isOffset":false,"isSlot":false,"src":"9323:4:22","valueSize":1}],"flags":["memory-safe"],"id":5622,"nodeType":"InlineAssembly","src":"8962:384:22"},{"expression":{"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5623,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"9409:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5624,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"9416:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5625,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"9423:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5628,"nodeType":"ExpressionStatement","src":"9409:18:22"},{"assignments":[5630],"declarations":[{"constant":false,"id":5630,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:22","nodeType":"VariableDeclaration","scope":5694,"src":"9762:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5632,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"9785:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:22"},{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5638,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10018:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10033:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5641,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5645,"nodeType":"ExpressionStatement","src":"10018:36:22"},{"expression":{"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10103:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5649,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10117:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5653,"nodeType":"ExpressionStatement","src":"10088:36:22"},{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5657,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10189:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"10160:36:22"},{"expression":{"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10231:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10246:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5665,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10260:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5669,"nodeType":"ExpressionStatement","src":"10231:36:22"},{"expression":{"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5670,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10304:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10319:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5673,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10333:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5677,"nodeType":"ExpressionStatement","src":"10304:36:22"},{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5678,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10393:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5681,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10407:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5685,"nodeType":"ExpressionStatement","src":"10378:36:22"},{"expression":{"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10859:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"10868:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5688,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"10874:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5691,"nodeType":"ExpressionStatement","src":"10859:22:22"},{"expression":{"id":5692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10902:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5571,"id":5693,"nodeType":"Return","src":"10895:13:22"}]}]},"documentation":{"id":5561,"nodeType":"StructuredDocumentation","src":"6925:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:22","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5563,"mutability":"mutable","name":"x","nameLocation":"7266:1:22","nodeType":"VariableDeclaration","scope":5696,"src":"7258:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5565,"mutability":"mutable","name":"y","nameLocation":"7277:1:22","nodeType":"VariableDeclaration","scope":5696,"src":"7269:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5567,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:22","nodeType":"VariableDeclaration","scope":5696,"src":"7280:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:22"},"returnParameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"result","nameLocation":"7332:6:22","nodeType":"VariableDeclaration","scope":5696,"src":"7324:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:22"},"scope":6790,"src":"7242:3683:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5732,"nodeType":"Block","src":"11164:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"11188:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5713,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"11191:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"11194:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5711,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5696,5733],"referencedDeclaration":5696,"src":"11181:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5719,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"11242:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":5718,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"11225:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"11262:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5723,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"11265:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5724,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"11268:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"11209:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"11209:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5710,"id":5731,"nodeType":"Return","src":"11174:111:22"}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"10931:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5733,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:22","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"x","nameLocation":"11078:1:22","nodeType":"VariableDeclaration","scope":5733,"src":"11070:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5701,"mutability":"mutable","name":"y","nameLocation":"11089:1:22","nodeType":"VariableDeclaration","scope":5733,"src":"11081:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5703,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:22","nodeType":"VariableDeclaration","scope":5733,"src":"11092:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5702,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:22","nodeType":"VariableDeclaration","scope":5733,"src":"11113:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":5705,"nodeType":"UserDefinedTypeName","pathNode":{"id":5704,"name":"Rounding","nameLocations":["11113:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"11113:8:22"},"referencedDeclaration":5181,"src":"11113:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:22"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5733,"src":"11155:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:22"},"scope":6790,"src":"11054:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"11500:245:22","statements":[{"id":5781,"nodeType":"UncheckedBlock","src":"11510:229:22","statements":[{"assignments":[5746,5748],"declarations":[{"constant":false,"id":5746,"mutability":"mutable","name":"high","nameLocation":"11543:4:22","nodeType":"VariableDeclaration","scope":5781,"src":"11535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5748,"mutability":"mutable","name":"low","nameLocation":"11557:3:22","nodeType":"VariableDeclaration","scope":5781,"src":"11549:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5753,"initialValue":{"arguments":[{"id":5750,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"11571:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5751,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"11574:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"11564:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"11594:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5756,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"11607:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5767,"nodeType":"IfStatement","src":"11590:86:22","trueBody":{"id":5766,"nodeType":"Block","src":"11610:66:22","statements":[{"expression":{"arguments":[{"expression":{"id":5762,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"11640:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"11640:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5759,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"11628:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"11628:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5765,"nodeType":"ExpressionStatement","src":"11628:33:22"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"11697:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5770,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"11712:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5775,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"11719:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5776,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"11726:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5744,"id":5780,"nodeType":"Return","src":"11689:39:22"}]}]},"documentation":{"id":5734,"nodeType":"StructuredDocumentation","src":"11298:111:22","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:22","nodeType":"FunctionDefinition","parameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"x","nameLocation":"11438:1:22","nodeType":"VariableDeclaration","scope":5783,"src":"11430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5738,"mutability":"mutable","name":"y","nameLocation":"11449:1:22","nodeType":"VariableDeclaration","scope":5783,"src":"11441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5740,"mutability":"mutable","name":"n","nameLocation":"11458:1:22","nodeType":"VariableDeclaration","scope":5783,"src":"11452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5739,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:22"},"returnParameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"result","nameLocation":"11492:6:22","nodeType":"VariableDeclaration","scope":5783,"src":"11484:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:22"},"scope":6790,"src":"11414:331:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5821,"nodeType":"Block","src":"11963:113:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5799,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5800,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5801,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"11993:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5798,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5783,5822],"referencedDeclaration":5783,"src":"11980:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5806,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"12031:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":5805,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"12014:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5809,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"12051:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5810,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"12054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5812,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"12062:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5803,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"11998:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"11998:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5797,"id":5820,"nodeType":"Return","src":"11973:96:22"}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"11751:109:22","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5822,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:22","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"x","nameLocation":"11889:1:22","nodeType":"VariableDeclaration","scope":5822,"src":"11881:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5788,"mutability":"mutable","name":"y","nameLocation":"11900:1:22","nodeType":"VariableDeclaration","scope":5822,"src":"11892:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5790,"mutability":"mutable","name":"n","nameLocation":"11909:1:22","nodeType":"VariableDeclaration","scope":5822,"src":"11903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5789,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5793,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:22","nodeType":"VariableDeclaration","scope":5822,"src":"11912:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":5792,"nodeType":"UserDefinedTypeName","pathNode":{"id":5791,"name":"Rounding","nameLocations":["11912:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"11912:8:22"},"referencedDeclaration":5181,"src":"11912:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:22"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5822,"src":"11954:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5795,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:22"},"scope":6790,"src":"11865:211:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"12710:1849:22","statements":[{"id":5917,"nodeType":"UncheckedBlock","src":"12720:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5832,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"12748:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"12744:20:22","trueBody":{"expression":{"hexValue":"30","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5831,"id":5836,"nodeType":"Return","src":"12756:8:22"}},{"assignments":[5839],"declarations":[{"constant":false,"id":5839,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:22","nodeType":"VariableDeclaration","scope":5917,"src":"13235:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5838,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"13255:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5841,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"13259:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:22"},{"assignments":[5845],"declarations":[{"constant":false,"id":5845,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:22","nodeType":"VariableDeclaration","scope":5917,"src":"13274:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5844,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5847,"initialValue":{"id":5846,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"13288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:22"},{"assignments":[5849],"declarations":[{"constant":false,"id":5849,"mutability":"mutable","name":"x","nameLocation":"13432:1:22","nodeType":"VariableDeclaration","scope":5917,"src":"13425:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5848,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5851,"initialValue":{"hexValue":"30","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:22"},{"assignments":[5853],"declarations":[{"constant":false,"id":5853,"mutability":"mutable","name":"y","nameLocation":"13458:1:22","nodeType":"VariableDeclaration","scope":5917,"src":"13451:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5852,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5855,"initialValue":{"hexValue":"31","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:22"},{"body":{"id":5892,"nodeType":"Block","src":"13501:882:22","statements":[{"assignments":[5860],"declarations":[{"constant":false,"id":5860,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:22","nodeType":"VariableDeclaration","scope":5892,"src":"13519:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5864,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"13538:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5862,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"13544:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:22"},{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5865,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"13573:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5866,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"13578:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5867,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5868,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"13678:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"13923:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"13929:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5871,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"13941:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"ExpressionStatement","src":"13572:395:22"},{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"13987:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5878,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"13990:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5879,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5880,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"14072:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5881,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"14326:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"14330:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5885,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"14341:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5883,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:22","typeDescriptions":{}}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"ExpressionStatement","src":"13986:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"13485:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"WhileStatement","src":"13478:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"14401:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5899,"nodeType":"IfStatement","src":"14397:22:22","trueBody":{"expression":{"hexValue":"30","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5831,"id":5898,"nodeType":"Return","src":"14411:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"14470:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"14477:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:22","subExpression":{"id":5907,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"14490:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:22","typeDescriptions":{}}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"14502:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:22","typeDescriptions":{}}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5900,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"14462:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5831,"id":5916,"nodeType":"Return","src":"14455:50:22"}]}]},"documentation":{"id":5823,"nodeType":"StructuredDocumentation","src":"12082:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:22","nodeType":"FunctionDefinition","parameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"a","nameLocation":"12664:1:22","nodeType":"VariableDeclaration","scope":5919,"src":"12656:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5827,"mutability":"mutable","name":"n","nameLocation":"12675:1:22","nodeType":"VariableDeclaration","scope":5919,"src":"12667:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:22"},"returnParameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"12701:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:22"},"scope":6790,"src":"12640:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5939,"nodeType":"Block","src":"15159:82:22","statements":[{"id":5938,"nodeType":"UncheckedBlock","src":"15169:66:22","statements":[{"expression":{"arguments":[{"id":5931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"15212:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5932,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"15215:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5935,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"15222:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5929,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"15200:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6790_$","typeString":"type(library Math)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"15200:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5928,"id":5937,"nodeType":"Return","src":"15193:31:22"}]}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"14565:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5940,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:22","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"a","nameLocation":"15113:1:22","nodeType":"VariableDeclaration","scope":5940,"src":"15105:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5924,"mutability":"mutable","name":"p","nameLocation":"15124:1:22","nodeType":"VariableDeclaration","scope":5940,"src":"15116:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:22"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5940,"src":"15150:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:22"},"scope":6790,"src":"15084:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5975,"nodeType":"Block","src":"16011:174:22","statements":[{"assignments":[5953,5955],"declarations":[{"constant":false,"id":5953,"mutability":"mutable","name":"success","nameLocation":"16027:7:22","nodeType":"VariableDeclaration","scope":5975,"src":"16022:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5952,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"result","nameLocation":"16044:6:22","nodeType":"VariableDeclaration","scope":5975,"src":"16036:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5954,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5961,"initialValue":{"arguments":[{"id":5957,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"16064:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5958,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"16067:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5959,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"16070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5956,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6000,6082],"referencedDeclaration":6000,"src":"16054:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:22"},{"condition":{"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:22","subExpression":{"id":5962,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"16087:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"nodeType":"IfStatement","src":"16082:74:22","trueBody":{"id":5971,"nodeType":"Block","src":"16096:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5967,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"16122:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"16122:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5964,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"16110:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"16110:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5970,"nodeType":"ExpressionStatement","src":"16110:35:22"}]}},{"expression":{"id":5973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"16172:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5951,"id":5974,"nodeType":"Return","src":"16165:13:22"}]},"documentation":{"id":5941,"nodeType":"StructuredDocumentation","src":"15247:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:22","nodeType":"FunctionDefinition","parameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"b","nameLocation":"15954:1:22","nodeType":"VariableDeclaration","scope":5976,"src":"15946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5945,"mutability":"mutable","name":"e","nameLocation":"15965:1:22","nodeType":"VariableDeclaration","scope":5976,"src":"15957:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5947,"mutability":"mutable","name":"m","nameLocation":"15976:1:22","nodeType":"VariableDeclaration","scope":5976,"src":"15968:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:22"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5976,"src":"16002:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:22"},"scope":6790,"src":"15930:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"17039:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"17053:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5997,"nodeType":"IfStatement","src":"17049:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5989,"id":5996,"nodeType":"Return","src":"17061:17:22"}},{"AST":{"nativeSrc":"17113:1413:22","nodeType":"YulBlock","src":"17113:1413:22","statements":[{"nativeSrc":"17127:22:22","nodeType":"YulVariableDeclaration","src":"17127:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:22","nodeType":"YulLiteral","src":"17144:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:22","nodeType":"YulIdentifier","src":"17138:5:22"},"nativeSrc":"17138:11:22","nodeType":"YulFunctionCall","src":"17138:11:22"},"variables":[{"name":"ptr","nativeSrc":"17131:3:22","nodeType":"YulTypedName","src":"17131:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:22","nodeType":"YulIdentifier","src":"18057:3:22"},{"kind":"number","nativeSrc":"18062:4:22","nodeType":"YulLiteral","src":"18062:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:22","nodeType":"YulIdentifier","src":"18050:6:22"},"nativeSrc":"18050:17:22","nodeType":"YulFunctionCall","src":"18050:17:22"},"nativeSrc":"18050:17:22","nodeType":"YulExpressionStatement","src":"18050:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:22","nodeType":"YulIdentifier","src":"18091:3:22"},{"kind":"number","nativeSrc":"18096:4:22","nodeType":"YulLiteral","src":"18096:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:22","nodeType":"YulIdentifier","src":"18087:3:22"},"nativeSrc":"18087:14:22","nodeType":"YulFunctionCall","src":"18087:14:22"},{"kind":"number","nativeSrc":"18103:4:22","nodeType":"YulLiteral","src":"18103:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:22","nodeType":"YulIdentifier","src":"18080:6:22"},"nativeSrc":"18080:28:22","nodeType":"YulFunctionCall","src":"18080:28:22"},"nativeSrc":"18080:28:22","nodeType":"YulExpressionStatement","src":"18080:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:22","nodeType":"YulIdentifier","src":"18132:3:22"},{"kind":"number","nativeSrc":"18137:4:22","nodeType":"YulLiteral","src":"18137:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:22","nodeType":"YulIdentifier","src":"18128:3:22"},"nativeSrc":"18128:14:22","nodeType":"YulFunctionCall","src":"18128:14:22"},{"kind":"number","nativeSrc":"18144:4:22","nodeType":"YulLiteral","src":"18144:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:22","nodeType":"YulIdentifier","src":"18121:6:22"},"nativeSrc":"18121:28:22","nodeType":"YulFunctionCall","src":"18121:28:22"},"nativeSrc":"18121:28:22","nodeType":"YulExpressionStatement","src":"18121:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:22","nodeType":"YulIdentifier","src":"18173:3:22"},{"kind":"number","nativeSrc":"18178:4:22","nodeType":"YulLiteral","src":"18178:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:22","nodeType":"YulIdentifier","src":"18169:3:22"},"nativeSrc":"18169:14:22","nodeType":"YulFunctionCall","src":"18169:14:22"},{"name":"b","nativeSrc":"18185:1:22","nodeType":"YulIdentifier","src":"18185:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:22","nodeType":"YulIdentifier","src":"18162:6:22"},"nativeSrc":"18162:25:22","nodeType":"YulFunctionCall","src":"18162:25:22"},"nativeSrc":"18162:25:22","nodeType":"YulExpressionStatement","src":"18162:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:22","nodeType":"YulIdentifier","src":"18211:3:22"},{"kind":"number","nativeSrc":"18216:4:22","nodeType":"YulLiteral","src":"18216:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:22","nodeType":"YulIdentifier","src":"18207:3:22"},"nativeSrc":"18207:14:22","nodeType":"YulFunctionCall","src":"18207:14:22"},{"name":"e","nativeSrc":"18223:1:22","nodeType":"YulIdentifier","src":"18223:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:22","nodeType":"YulIdentifier","src":"18200:6:22"},"nativeSrc":"18200:25:22","nodeType":"YulFunctionCall","src":"18200:25:22"},"nativeSrc":"18200:25:22","nodeType":"YulExpressionStatement","src":"18200:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:22","nodeType":"YulIdentifier","src":"18249:3:22"},{"kind":"number","nativeSrc":"18254:4:22","nodeType":"YulLiteral","src":"18254:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:22","nodeType":"YulIdentifier","src":"18245:3:22"},"nativeSrc":"18245:14:22","nodeType":"YulFunctionCall","src":"18245:14:22"},{"name":"m","nativeSrc":"18261:1:22","nodeType":"YulIdentifier","src":"18261:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:22","nodeType":"YulIdentifier","src":"18238:6:22"},"nativeSrc":"18238:25:22","nodeType":"YulFunctionCall","src":"18238:25:22"},"nativeSrc":"18238:25:22","nodeType":"YulExpressionStatement","src":"18238:25:22"},{"nativeSrc":"18425:57:22","nodeType":"YulAssignment","src":"18425:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:22","nodeType":"YulIdentifier","src":"18447:3:22"},"nativeSrc":"18447:5:22","nodeType":"YulFunctionCall","src":"18447:5:22"},{"kind":"number","nativeSrc":"18454:4:22","nodeType":"YulLiteral","src":"18454:4:22","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:22","nodeType":"YulIdentifier","src":"18460:3:22"},{"kind":"number","nativeSrc":"18465:4:22","nodeType":"YulLiteral","src":"18465:4:22","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:22","nodeType":"YulLiteral","src":"18471:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:22","nodeType":"YulLiteral","src":"18477:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:22","nodeType":"YulIdentifier","src":"18436:10:22"},"nativeSrc":"18436:46:22","nodeType":"YulFunctionCall","src":"18436:46:22"},"variableNames":[{"name":"success","nativeSrc":"18425:7:22","nodeType":"YulIdentifier","src":"18425:7:22"}]},{"nativeSrc":"18495:21:22","nodeType":"YulAssignment","src":"18495:21:22","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:22","nodeType":"YulLiteral","src":"18511:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:22","nodeType":"YulIdentifier","src":"18505:5:22"},"nativeSrc":"18505:11:22","nodeType":"YulFunctionCall","src":"18505:11:22"},"variableNames":[{"name":"result","nativeSrc":"18495:6:22","nodeType":"YulIdentifier","src":"18495:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5979,"isOffset":false,"isSlot":false,"src":"18185:1:22","valueSize":1},{"declaration":5981,"isOffset":false,"isSlot":false,"src":"18223:1:22","valueSize":1},{"declaration":5983,"isOffset":false,"isSlot":false,"src":"18261:1:22","valueSize":1},{"declaration":5988,"isOffset":false,"isSlot":false,"src":"18495:6:22","valueSize":1},{"declaration":5986,"isOffset":false,"isSlot":false,"src":"18425:7:22","valueSize":1}],"flags":["memory-safe"],"id":5998,"nodeType":"InlineAssembly","src":"17088:1438:22"}]},"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"16191:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:22","nodeType":"FunctionDefinition","parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"b","nameLocation":"16961:1:22","nodeType":"VariableDeclaration","scope":6000,"src":"16953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5981,"mutability":"mutable","name":"e","nameLocation":"16972:1:22","nodeType":"VariableDeclaration","scope":6000,"src":"16964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"m","nameLocation":"16983:1:22","nodeType":"VariableDeclaration","scope":6000,"src":"16975:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:22"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"success","nameLocation":"17014:7:22","nodeType":"VariableDeclaration","scope":6000,"src":"17009:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5985,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5988,"mutability":"mutable","name":"result","nameLocation":"17031:6:22","nodeType":"VariableDeclaration","scope":6000,"src":"17023:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:22"},"scope":6790,"src":"16934:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"18729:179:22","statements":[{"assignments":[6013,6015],"declarations":[{"constant":false,"id":6013,"mutability":"mutable","name":"success","nameLocation":"18745:7:22","nodeType":"VariableDeclaration","scope":6035,"src":"18740:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6012,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6015,"mutability":"mutable","name":"result","nameLocation":"18767:6:22","nodeType":"VariableDeclaration","scope":6035,"src":"18754:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6014,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6021,"initialValue":{"arguments":[{"id":6017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18787:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6018,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"18790:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6019,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"18793:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6016,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6000,6082],"referencedDeclaration":6082,"src":"18777:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:22"},{"condition":{"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:22","subExpression":{"id":6022,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"18810:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"18805:74:22","trueBody":{"id":6031,"nodeType":"Block","src":"18819:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":6027,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"18845:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"18845:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6024,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"18833:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2998_$","typeString":"type(library Panic)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"18833:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"ExpressionStatement","src":"18833:35:22"}]}},{"expression":{"id":6033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"18895:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6011,"id":6034,"nodeType":"Return","src":"18888:13:22"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"18538:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6036,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:22","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"b","nameLocation":"18657:1:22","nodeType":"VariableDeclaration","scope":6036,"src":"18644:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6002,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6005,"mutability":"mutable","name":"e","nameLocation":"18673:1:22","nodeType":"VariableDeclaration","scope":6036,"src":"18660:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6004,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"m","nameLocation":"18689:1:22","nodeType":"VariableDeclaration","scope":6036,"src":"18676:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6006,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:22"},"returnParameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6036,"src":"18715:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6009,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:22"},"scope":6790,"src":"18628:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6081,"nodeType":"Block","src":"19162:771:22","statements":[{"condition":{"arguments":[{"id":6051,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"19187:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6050,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"19176:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"19172:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6054,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6049,"id":6059,"nodeType":"Return","src":"19191:28:22"}},{"assignments":[6062],"declarations":[{"constant":false,"id":6062,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:22","nodeType":"VariableDeclaration","scope":6081,"src":"19230:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6065,"initialValue":{"expression":{"id":6063,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"19245:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:22","memberName":"length","nodeType":"MemberAccess","src":"19245:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:22"},{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"19335:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"19361:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:22","memberName":"length","nodeType":"MemberAccess","src":"19361:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6071,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"19371:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:22","memberName":"length","nodeType":"MemberAccess","src":"19371:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6073,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"19381:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"19387:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6075,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6076,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"19393:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6067,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6079,"nodeType":"ExpressionStatement","src":"19335:60:22"},{"AST":{"nativeSrc":"19431:496:22","nodeType":"YulBlock","src":"19431:496:22","statements":[{"nativeSrc":"19445:32:22","nodeType":"YulVariableDeclaration","src":"19445:32:22","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:22","nodeType":"YulIdentifier","src":"19464:6:22"},{"kind":"number","nativeSrc":"19472:4:22","nodeType":"YulLiteral","src":"19472:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:22","nodeType":"YulIdentifier","src":"19460:3:22"},"nativeSrc":"19460:17:22","nodeType":"YulFunctionCall","src":"19460:17:22"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:22","nodeType":"YulTypedName","src":"19449:7:22","type":""}]},{"nativeSrc":"19567:73:22","nodeType":"YulAssignment","src":"19567:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:22","nodeType":"YulIdentifier","src":"19589:3:22"},"nativeSrc":"19589:5:22","nodeType":"YulFunctionCall","src":"19589:5:22"},{"kind":"number","nativeSrc":"19596:4:22","nodeType":"YulLiteral","src":"19596:4:22","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:22","nodeType":"YulIdentifier","src":"19602:7:22"},{"arguments":[{"name":"result","nativeSrc":"19617:6:22","nodeType":"YulIdentifier","src":"19617:6:22"}],"functionName":{"name":"mload","nativeSrc":"19611:5:22","nodeType":"YulIdentifier","src":"19611:5:22"},"nativeSrc":"19611:13:22","nodeType":"YulFunctionCall","src":"19611:13:22"},{"name":"dataPtr","nativeSrc":"19626:7:22","nodeType":"YulIdentifier","src":"19626:7:22"},{"name":"mLen","nativeSrc":"19635:4:22","nodeType":"YulIdentifier","src":"19635:4:22"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:22","nodeType":"YulIdentifier","src":"19578:10:22"},"nativeSrc":"19578:62:22","nodeType":"YulFunctionCall","src":"19578:62:22"},"variableNames":[{"name":"success","nativeSrc":"19567:7:22","nodeType":"YulIdentifier","src":"19567:7:22"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:22","nodeType":"YulIdentifier","src":"19796:6:22"},{"name":"mLen","nativeSrc":"19804:4:22","nodeType":"YulIdentifier","src":"19804:4:22"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:22","nodeType":"YulIdentifier","src":"19789:6:22"},"nativeSrc":"19789:20:22","nodeType":"YulFunctionCall","src":"19789:20:22"},"nativeSrc":"19789:20:22","nodeType":"YulExpressionStatement","src":"19789:20:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:22","nodeType":"YulLiteral","src":"19892:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:22","nodeType":"YulIdentifier","src":"19902:7:22"},{"name":"mLen","nativeSrc":"19911:4:22","nodeType":"YulIdentifier","src":"19911:4:22"}],"functionName":{"name":"add","nativeSrc":"19898:3:22","nodeType":"YulIdentifier","src":"19898:3:22"},"nativeSrc":"19898:18:22","nodeType":"YulFunctionCall","src":"19898:18:22"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:22","nodeType":"YulIdentifier","src":"19885:6:22"},"nativeSrc":"19885:32:22","nodeType":"YulFunctionCall","src":"19885:32:22"},"nativeSrc":"19885:32:22","nodeType":"YulExpressionStatement","src":"19885:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":6062,"isOffset":false,"isSlot":false,"src":"19635:4:22","valueSize":1},{"declaration":6062,"isOffset":false,"isSlot":false,"src":"19804:4:22","valueSize":1},{"declaration":6062,"isOffset":false,"isSlot":false,"src":"19911:4:22","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"19464:6:22","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"19617:6:22","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"19796:6:22","valueSize":1},{"declaration":6046,"isOffset":false,"isSlot":false,"src":"19567:7:22","valueSize":1}],"flags":["memory-safe"],"id":6080,"nodeType":"InlineAssembly","src":"19406:521:22"}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"18914:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6082,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:22","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"b","nameLocation":"19048:1:22","nodeType":"VariableDeclaration","scope":6082,"src":"19035:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6038,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6041,"mutability":"mutable","name":"e","nameLocation":"19072:1:22","nodeType":"VariableDeclaration","scope":6082,"src":"19059:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6040,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6043,"mutability":"mutable","name":"m","nameLocation":"19096:1:22","nodeType":"VariableDeclaration","scope":6082,"src":"19083:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6042,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:22"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"success","nameLocation":"19132:7:22","nodeType":"VariableDeclaration","scope":6082,"src":"19127:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6045,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6048,"mutability":"mutable","name":"result","nameLocation":"19154:6:22","nodeType":"VariableDeclaration","scope":6082,"src":"19141:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6047,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:22"},"scope":6790,"src":"19007:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"20088:176:22","statements":[{"body":{"id":6110,"nodeType":"Block","src":"20145:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6101,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"20163:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6103,"indexExpression":{"id":6102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"20173:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6109,"nodeType":"IfStatement","src":"20159:68:22","trueBody":{"id":6108,"nodeType":"Block","src":"20182:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6089,"id":6107,"nodeType":"Return","src":"20200:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"20118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6095,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"20122:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:22","memberName":"length","nodeType":"MemberAccess","src":"20122:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6111,"initializationExpression":{"assignments":[6091],"declarations":[{"constant":false,"id":6091,"mutability":"mutable","name":"i","nameLocation":"20111:1:22","nodeType":"VariableDeclaration","scope":6111,"src":"20103:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6093,"initialValue":{"hexValue":"30","id":6092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:22","subExpression":{"id":6098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"20142:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6100,"nodeType":"ExpressionStatement","src":"20140:3:22"},"nodeType":"ForStatement","src":"20098:139:22"},{"expression":{"hexValue":"74727565","id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6089,"id":6113,"nodeType":"Return","src":"20246:11:22"}]},"documentation":{"id":6083,"nodeType":"StructuredDocumentation","src":"19939:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:22","nodeType":"FunctionDefinition","parameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:22","nodeType":"VariableDeclaration","scope":6115,"src":"20036:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6084,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:22"},"returnParameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"20082:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6087,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:22"},"scope":6790,"src":"20016:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6333,"nodeType":"Block","src":"20624:5124:22","statements":[{"id":6332,"nodeType":"UncheckedBlock","src":"20634:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"20728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6129,"nodeType":"IfStatement","src":"20724:53:22","trueBody":{"id":6128,"nodeType":"Block","src":"20736:41:22","statements":[{"expression":{"id":6126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"20761:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6122,"id":6127,"nodeType":"Return","src":"20754:8:22"}]}},{"assignments":[6131],"declarations":[{"constant":false,"id":6131,"mutability":"mutable","name":"aa","nameLocation":"21712:2:22","nodeType":"VariableDeclaration","scope":6332,"src":"21704:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6133,"initialValue":{"id":6132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"21717:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:22"},{"assignments":[6135],"declarations":[{"constant":false,"id":6135,"mutability":"mutable","name":"xn","nameLocation":"21740:2:22","nodeType":"VariableDeclaration","scope":6332,"src":"21732:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6137,"initialValue":{"hexValue":"31","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6138,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"21765:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6153,"nodeType":"IfStatement","src":"21761:92:22","trueBody":{"id":6152,"nodeType":"Block","src":"21783:70:22","statements":[{"expression":{"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6144,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"21801:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6147,"nodeType":"ExpressionStatement","src":"21801:10:22"},{"expression":{"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6148,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"21829:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6151,"nodeType":"ExpressionStatement","src":"21829:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6154,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"21870:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6169,"nodeType":"IfStatement","src":"21866:90:22","trueBody":{"id":6168,"nodeType":"Block","src":"21887:69:22","statements":[{"expression":{"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6160,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"21905:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6163,"nodeType":"ExpressionStatement","src":"21905:9:22"},{"expression":{"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6164,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"21932:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6167,"nodeType":"ExpressionStatement","src":"21932:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"21973:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6185,"nodeType":"IfStatement","src":"21969:90:22","trueBody":{"id":6184,"nodeType":"Block","src":"21990:69:22","statements":[{"expression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22008:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6179,"nodeType":"ExpressionStatement","src":"22008:9:22"},{"expression":{"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22035:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6183,"nodeType":"ExpressionStatement","src":"22035:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6186,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22076:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"22072:89:22","trueBody":{"id":6200,"nodeType":"Block","src":"22093:68:22","statements":[{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6192,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22111:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"nodeType":"ExpressionStatement","src":"22111:9:22"},{"expression":{"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6196,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22138:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6199,"nodeType":"ExpressionStatement","src":"22138:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22178:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"22174:87:22","trueBody":{"id":6216,"nodeType":"Block","src":"22194:67:22","statements":[{"expression":{"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6208,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22212:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6211,"nodeType":"ExpressionStatement","src":"22212:8:22"},{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6212,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22238:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6215,"nodeType":"ExpressionStatement","src":"22238:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6218,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"22274:87:22","trueBody":{"id":6232,"nodeType":"Block","src":"22294:67:22","statements":[{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22312:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6227,"nodeType":"ExpressionStatement","src":"22312:8:22"},{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22338:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6231,"nodeType":"ExpressionStatement","src":"22338:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"22378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6245,"nodeType":"IfStatement","src":"22374:61:22","trueBody":{"id":6244,"nodeType":"Block","src":"22394:41:22","statements":[{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6240,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22412:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6243,"nodeType":"ExpressionStatement","src":"22412:8:22"}]}},{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6246,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22855:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6248,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"22865:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6254,"nodeType":"ExpressionStatement","src":"22855:18:22"},{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24760:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24766:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"24771:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24775:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6265,"nodeType":"ExpressionStatement","src":"24760:23:22"},{"expression":{"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6266,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24869:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24875:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"24880:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6269,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24884:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6276,"nodeType":"ExpressionStatement","src":"24869:23:22"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24980:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24986:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"24991:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24995:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6287,"nodeType":"ExpressionStatement","src":"24980:23:22"},{"expression":{"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25089:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25095:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"25100:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6291,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25104:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6298,"nodeType":"ExpressionStatement","src":"25089:23:22"},{"expression":{"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6299,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25199:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25205:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"25210:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25214:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6309,"nodeType":"ExpressionStatement","src":"25199:23:22"},{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25309:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6311,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25315:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"25320:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6313,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25324:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6320,"nodeType":"ExpressionStatement","src":"25309:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25698:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25719:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"25724:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"25703:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"25703:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6122,"id":6331,"nodeType":"Return","src":"25691:40:22"}]}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"20270:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6334,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:22","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"a","nameLocation":"20589:1:22","nodeType":"VariableDeclaration","scope":6334,"src":"20581:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:22"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6334,"src":"20615:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6120,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:22"},"scope":6790,"src":"20567:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6367,"nodeType":"Block","src":"25921:171:22","statements":[{"id":6366,"nodeType":"UncheckedBlock","src":"25931:155:22","statements":[{"assignments":[6346],"declarations":[{"constant":false,"id":6346,"mutability":"mutable","name":"result","nameLocation":"25963:6:22","nodeType":"VariableDeclaration","scope":6366,"src":"25955:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6350,"initialValue":{"arguments":[{"id":6348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"25977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6347,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6334,6368],"referencedDeclaration":6334,"src":"25972:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26000:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6355,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26042:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":6354,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"26025:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26055:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26064:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"26073:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6352,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26009:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26009:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6344,"id":6365,"nodeType":"Return","src":"25993:82:22"}]}]},"documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"25754:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6368,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:22","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"a","nameLocation":"25867:1:22","nodeType":"VariableDeclaration","scope":6368,"src":"25859:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6336,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6340,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:22","nodeType":"VariableDeclaration","scope":6368,"src":"25870:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":6339,"nodeType":"UserDefinedTypeName","pathNode":{"id":6338,"name":"Rounding","nameLocations":["25870:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"25870:8:22"},"referencedDeclaration":5181,"src":"25870:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:22"},"returnParameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6368,"src":"25912:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6342,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:22"},"scope":6790,"src":"25845:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"26281:2334:22","statements":[{"expression":{"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6376,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26363:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"26383:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6377,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26367:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26367:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6386,"nodeType":"ExpressionStatement","src":"26363:64:22"},{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6387,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26503:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6390,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"26525:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6391,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26530:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6388,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26508:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26508:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6400,"nodeType":"ExpressionStatement","src":"26503:56:22"},{"expression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6401,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26634:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"26656:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6405,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26661:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6402,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26639:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26639:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6414,"nodeType":"ExpressionStatement","src":"26634:48:22"},{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26757:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"26779:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6419,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26784:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26762:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26762:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"26757:44:22"},{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26874:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"26896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6433,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26901:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6430,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26879:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26879:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6442,"nodeType":"ExpressionStatement","src":"26874:42:22"},{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6443,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"26988:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6446,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"27010:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6447,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"27015:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6444,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"26993:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"26993:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6456,"nodeType":"ExpressionStatement","src":"26988:41:22"},{"AST":{"nativeSrc":"28490:119:22","nodeType":"YulBlock","src":"28490:119:22","statements":[{"nativeSrc":"28504:95:22","nodeType":"YulAssignment","src":"28504:95:22","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:22","nodeType":"YulIdentifier","src":"28512:1:22"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:22","nodeType":"YulIdentifier","src":"28524:1:22"},{"name":"x","nativeSrc":"28527:1:22","nodeType":"YulIdentifier","src":"28527:1:22"}],"functionName":{"name":"shr","nativeSrc":"28520:3:22","nodeType":"YulIdentifier","src":"28520:3:22"},"nativeSrc":"28520:9:22","nodeType":"YulFunctionCall","src":"28520:9:22"},{"kind":"number","nativeSrc":"28531:66:22","nodeType":"YulLiteral","src":"28531:66:22","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:22","nodeType":"YulIdentifier","src":"28515:4:22"},"nativeSrc":"28515:83:22","nodeType":"YulFunctionCall","src":"28515:83:22"}],"functionName":{"name":"or","nativeSrc":"28509:2:22","nodeType":"YulIdentifier","src":"28509:2:22"},"nativeSrc":"28509:90:22","nodeType":"YulFunctionCall","src":"28509:90:22"},"variableNames":[{"name":"r","nativeSrc":"28504:1:22","nodeType":"YulIdentifier","src":"28504:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6374,"isOffset":false,"isSlot":false,"src":"28504:1:22","valueSize":1},{"declaration":6374,"isOffset":false,"isSlot":false,"src":"28512:1:22","valueSize":1},{"declaration":6374,"isOffset":false,"isSlot":false,"src":"28524:1:22","valueSize":1},{"declaration":6371,"isOffset":false,"isSlot":false,"src":"28527:1:22","valueSize":1}],"flags":["memory-safe"],"id":6457,"nodeType":"InlineAssembly","src":"28465:144:22"}]},"documentation":{"id":6369,"nodeType":"StructuredDocumentation","src":"26098:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:22","nodeType":"FunctionDefinition","parameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"x","nameLocation":"26244:1:22","nodeType":"VariableDeclaration","scope":6459,"src":"26236:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:22"},"returnParameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"r","nameLocation":"26278:1:22","nodeType":"VariableDeclaration","scope":6459,"src":"26270:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6373,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:22"},"scope":6790,"src":"26222:2393:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6492,"nodeType":"Block","src":"28848:175:22","statements":[{"id":6491,"nodeType":"UncheckedBlock","src":"28858:159:22","statements":[{"assignments":[6471],"declarations":[{"constant":false,"id":6471,"mutability":"mutable","name":"result","nameLocation":"28890:6:22","nodeType":"VariableDeclaration","scope":6491,"src":"28882:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6475,"initialValue":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"28904:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6472,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6459,6493],"referencedDeclaration":6459,"src":"28899:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28931:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"28973:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":6479,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"28956:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"29000:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"28940:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"28940:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6469,"id":6490,"nodeType":"Return","src":"28924:82:22"}]}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"28621:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6493,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:22","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"28790:5:22","nodeType":"VariableDeclaration","scope":6493,"src":"28782:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6465,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:22","nodeType":"VariableDeclaration","scope":6493,"src":"28797:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":6464,"nodeType":"UserDefinedTypeName","pathNode":{"id":6463,"name":"Rounding","nameLocations":["28797:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"28797:8:22"},"referencedDeclaration":5181,"src":"28797:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:22"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6493,"src":"28839:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:22"},"scope":6790,"src":"28768:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6621,"nodeType":"Block","src":"29216:854:22","statements":[{"assignments":[6502],"declarations":[{"constant":false,"id":6502,"mutability":"mutable","name":"result","nameLocation":"29234:6:22","nodeType":"VariableDeclaration","scope":6621,"src":"29226:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6504,"initialValue":{"hexValue":"30","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:22"},{"id":6618,"nodeType":"UncheckedBlock","src":"29254:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29282:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6521,"nodeType":"IfStatement","src":"29278:103:22","trueBody":{"id":6520,"nodeType":"Block","src":"29301:80:22","statements":[{"expression":{"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29319:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6515,"nodeType":"ExpressionStatement","src":"29319:17:22"},{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6519,"nodeType":"ExpressionStatement","src":"29354:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29398:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"29394:103:22","trueBody":{"id":6537,"nodeType":"Block","src":"29417:80:22","statements":[{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29435:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"29435:17:22"},{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29470:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6536,"nodeType":"ExpressionStatement","src":"29470:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29514:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6555,"nodeType":"IfStatement","src":"29510:103:22","trueBody":{"id":6554,"nodeType":"Block","src":"29533:80:22","statements":[{"expression":{"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6549,"nodeType":"ExpressionStatement","src":"29551:17:22"},{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29586:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6553,"nodeType":"ExpressionStatement","src":"29586:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29630:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6572,"nodeType":"IfStatement","src":"29626:100:22","trueBody":{"id":6571,"nodeType":"Block","src":"29648:78:22","statements":[{"expression":{"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29666:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6566,"nodeType":"ExpressionStatement","src":"29666:16:22"},{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29700:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6570,"nodeType":"ExpressionStatement","src":"29700:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6589,"nodeType":"IfStatement","src":"29739:100:22","trueBody":{"id":6588,"nodeType":"Block","src":"29761:78:22","statements":[{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29779:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6583,"nodeType":"ExpressionStatement","src":"29779:16:22"},{"expression":{"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29813:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6587,"nodeType":"ExpressionStatement","src":"29813:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29856:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6606,"nodeType":"IfStatement","src":"29852:100:22","trueBody":{"id":6605,"nodeType":"Block","src":"29874:78:22","statements":[{"expression":{"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29892:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6600,"nodeType":"ExpressionStatement","src":"29892:16:22"},{"expression":{"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29926:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6604,"nodeType":"ExpressionStatement","src":"29926:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"29969:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6617,"nodeType":"IfStatement","src":"29965:66:22","trueBody":{"id":6616,"nodeType":"Block","src":"29987:44:22","statements":[{"expression":{"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"30005:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6615,"nodeType":"ExpressionStatement","src":"30005:11:22"}]}}]},{"expression":{"id":6619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"30057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6500,"id":6620,"nodeType":"Return","src":"30050:13:22"}]},"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"29029:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6622,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:22","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"value","nameLocation":"29177:5:22","nodeType":"VariableDeclaration","scope":6622,"src":"29169:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:22"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6622,"src":"29207:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:22"},"scope":6790,"src":"29154:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6655,"nodeType":"Block","src":"30305:177:22","statements":[{"id":6654,"nodeType":"UncheckedBlock","src":"30315:161:22","statements":[{"assignments":[6634],"declarations":[{"constant":false,"id":6634,"mutability":"mutable","name":"result","nameLocation":"30347:6:22","nodeType":"VariableDeclaration","scope":6654,"src":"30339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6638,"initialValue":{"arguments":[{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6635,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6622,6656],"referencedDeclaration":6622,"src":"30356:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"30389:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6643,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"30431:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":6642,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"30414:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"30450:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"30459:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"30398:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"30398:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6632,"id":6653,"nodeType":"Return","src":"30382:83:22"}]}]},"documentation":{"id":6623,"nodeType":"StructuredDocumentation","src":"30076:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6656,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:22","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"value","nameLocation":"30247:5:22","nodeType":"VariableDeclaration","scope":6656,"src":"30239:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:22","nodeType":"VariableDeclaration","scope":6656,"src":"30254:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":6627,"nodeType":"UserDefinedTypeName","pathNode":{"id":6626,"name":"Rounding","nameLocations":["30254:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"30254:8:22"},"referencedDeclaration":5181,"src":"30254:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:22"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6656,"src":"30296:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:22"},"scope":6790,"src":"30224:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6732,"nodeType":"Block","src":"30800:675:22","statements":[{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6664,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"30882:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"30902:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6665,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"30886:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"30886:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6674,"nodeType":"ExpressionStatement","src":"30882:64:22"},{"expression":{"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6675,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31022:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"31044:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6679,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31049:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"31027:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"31027:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6688,"nodeType":"ExpressionStatement","src":"31022:56:22"},{"expression":{"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6689,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31153:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6692,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"31175:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6693,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31180:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6690,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"31158:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"31158:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6702,"nodeType":"ExpressionStatement","src":"31153:48:22"},{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6703,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31276:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6706,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"31298:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6707,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31303:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6704,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"31281:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"31281:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6716,"nodeType":"ExpressionStatement","src":"31276:44:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6717,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31426:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"31453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6724,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31458:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6721,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"31436:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"31436:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6663,"id":6731,"nodeType":"Return","src":"31418:50:22"}]},"documentation":{"id":6657,"nodeType":"StructuredDocumentation","src":"30488:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6733,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:22","nodeType":"FunctionDefinition","parameters":{"id":6660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6659,"mutability":"mutable","name":"x","nameLocation":"30763:1:22","nodeType":"VariableDeclaration","scope":6733,"src":"30755:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6658,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:22"},"returnParameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"r","nameLocation":"30797:1:22","nodeType":"VariableDeclaration","scope":6733,"src":"30789:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:22"},"scope":6790,"src":"30739:736:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6769,"nodeType":"Block","src":"31712:184:22","statements":[{"id":6768,"nodeType":"UncheckedBlock","src":"31722:168:22","statements":[{"assignments":[6745],"declarations":[{"constant":false,"id":6745,"mutability":"mutable","name":"result","nameLocation":"31754:6:22","nodeType":"VariableDeclaration","scope":6768,"src":"31746:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6749,"initialValue":{"arguments":[{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"31770:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6746,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6733,6770],"referencedDeclaration":6733,"src":"31763:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"31797:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6754,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"31839:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":6753,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"31822:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5181_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"31873:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6751,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"31806:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"31806:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6743,"id":6767,"nodeType":"Return","src":"31790:89:22"}]}]},"documentation":{"id":6734,"nodeType":"StructuredDocumentation","src":"31481:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:22","nodeType":"FunctionDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"value","nameLocation":"31654:5:22","nodeType":"VariableDeclaration","scope":6770,"src":"31646:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6739,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:22","nodeType":"VariableDeclaration","scope":6770,"src":"31661:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":6738,"nodeType":"UserDefinedTypeName","pathNode":{"id":6737,"name":"Rounding","nameLocations":["31661:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"31661:8:22"},"referencedDeclaration":5181,"src":"31661:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:22"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6770,"src":"31703:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:22"},"scope":6790,"src":"31630:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6788,"nodeType":"Block","src":"32094:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6781,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"32117:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}],"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6779,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:22","typeDescriptions":{}}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6778,"id":6787,"nodeType":"Return","src":"32104:31:22"}]},"documentation":{"id":6771,"nodeType":"StructuredDocumentation","src":"31902:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6789,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:22","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:22","nodeType":"VariableDeclaration","scope":6789,"src":"32046:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"},"typeName":{"id":6773,"nodeType":"UserDefinedTypeName","pathNode":{"id":6772,"name":"Rounding","nameLocations":["32046:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5181,"src":"32046:8:22"},"referencedDeclaration":5181,"src":"32046:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:22"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6789,"src":"32088:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6776,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:22"},"scope":6790,"src":"32020:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6791,"src":"281:31863:22","usedErrors":[],"usedEvents":[]}],"src":"103:32042:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8555]},"id":8556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6792,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8555,"linearizedBaseContracts":[8555],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6794,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6800,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6796,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":6800,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6795,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6798,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":6800,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6805,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":6805,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":6806,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6812,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":6812,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6807,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6810,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":6812,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6809,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":6813,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6817,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":6816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":6817,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":6844,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6827,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":6837,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6832,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6836,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":6841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6839,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6824,"id":6843,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":6845,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6822,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":8555,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6872,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6855,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":6865,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6860,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6867,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6852,"id":6871,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":6846,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":6873,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6873,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6850,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":8555,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6883,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6894,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":6893,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6888,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6892,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6895,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6880,"id":6899,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":6874,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":6901,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6901,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6878,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":8555,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6928,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6911,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6922,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":6921,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6916,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6923,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6908,"id":6927,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6929,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":6929,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6929,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6906,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":8555,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6956,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6939,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":6949,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6944,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6948,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6951,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6936,"id":6955,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":6930,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":6957,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6957,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6934,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":8555,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6967,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":6977,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6979,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6964,"id":6983,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":6958,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":6985,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6985,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6962,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":8555,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7012,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6995,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":7005,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7000,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":7009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7007,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6992,"id":7011,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7013,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":7013,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6987,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7013,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6990,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":8555,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7040,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7023,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7034,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":7033,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7028,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":7037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7035,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7020,"id":7039,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":7014,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":7041,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7041,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7018,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":8555,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7068,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7051,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7062,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":7061,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7060,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":7065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7063,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7048,"id":7067,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":7069,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7069,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7046,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":8555,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7096,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7079,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7090,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":7089,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7088,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7091,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7076,"id":7095,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":7070,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":7097,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":7076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7097,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7074,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":8555,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7124,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7107,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7118,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":7117,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7116,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":7121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7119,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7104,"id":7123,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":7098,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":7101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7100,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":7125,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7099,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":7104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7125,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7102,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":8555,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7152,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7135,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7146,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":7145,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7144,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7147,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7132,"id":7151,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":7126,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":7153,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7153,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7130,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":8555,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7180,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7163,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7174,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":7173,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7172,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7175,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7160,"id":7179,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":7154,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":7181,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7155,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":7160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7181,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7158,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":8555,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7208,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7191,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7202,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":7201,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7200,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":7205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7203,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7188,"id":7207,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":7182,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7184,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":7209,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7209,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7186,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":8555,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7236,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7219,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7230,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":7229,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7228,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7231,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7216,"id":7235,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":7210,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":7237,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7237,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7214,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":8555,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7247,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7258,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":7257,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7256,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":7261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7259,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7244,"id":7263,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":7238,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":7241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":7265,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7239,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":7244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7265,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7242,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":8555,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7292,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7275,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7286,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":7285,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":7289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7287,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7272,"id":7291,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":7293,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7293,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7270,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":8555,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7320,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7303,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7314,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":7313,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7312,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":7317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7315,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7300,"id":7319,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":7294,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":7321,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7321,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7298,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":8555,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7348,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7331,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7342,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":7341,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7340,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":7345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7343,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7328,"id":7347,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":7322,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7324,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":7349,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7349,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7326,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":8555,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7376,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7359,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7370,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":7369,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7368,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":7373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7371,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7356,"id":7375,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":7350,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":7377,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":7356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7377,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7354,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":8555,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7404,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7387,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7398,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":7397,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7396,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":7401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7399,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7384,"id":7403,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":7378,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7380,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":7405,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7379,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7405,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7382,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":8555,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7432,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7415,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7426,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":7425,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":7429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7427,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7412,"id":7431,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":7406,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":7433,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7407,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7433,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7410,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":8555,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7460,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7443,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7454,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":7453,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7452,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7455,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7440,"id":7459,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":7434,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":7461,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7435,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":7440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7461,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7438,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":8555,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7488,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7471,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7482,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":7481,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7480,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":7485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7483,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7468,"id":7487,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":7462,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":7489,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":7468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7489,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7466,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":8555,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7516,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7499,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":7509,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7508,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":7513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7511,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7496,"id":7515,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":7490,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":7517,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7517,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7494,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":8555,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7544,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7527,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7538,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":7537,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7536,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":7541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7539,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7524,"id":7543,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":7518,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7520,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":7545,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7519,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":7524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7545,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7522,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":8555,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7572,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7555,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7566,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":7565,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7564,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":7569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7567,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7552,"id":7571,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":7546,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":7573,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7573,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7550,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":8555,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7600,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7583,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7594,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":7593,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7592,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":7597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7595,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7580,"id":7599,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":7574,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":7601,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7575,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7601,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7578,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":8555,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7628,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7611,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7622,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":7621,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7620,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":7625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7623,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7608,"id":7627,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":7602,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7604,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":7629,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7603,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7629,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7606,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":8555,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7656,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7639,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7650,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":7649,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7648,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":7653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7651,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7636,"id":7655,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":7630,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7632,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":7657,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7631,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7657,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7634,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":8555,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7684,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7667,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7678,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":7677,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7676,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":7681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7679,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7664,"id":7683,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":7658,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7660,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":7685,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7659,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7685,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7662,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":8555,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7707,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7701,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":7700,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":7697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7696,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7699,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":7704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7702,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7692,"id":7706,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":7686,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7708,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":7708,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7687,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7708,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":8555,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7733,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7717,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7722,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7732,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":7731,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7730,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":7709,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":7712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":7734,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7710,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7714,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":7734,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7713,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":8555,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7759,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7743,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7748,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7758,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":7757,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7756,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":7735,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":7760,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7736,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":7741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7740,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":7760,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7739,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":8555,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7785,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7769,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7774,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7784,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":7783,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7782,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":7761,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7763,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":7786,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7762,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":7786,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7765,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":8555,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7811,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7795,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7800,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7810,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":7809,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7808,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":7787,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":7812,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7788,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":7793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7792,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":7812,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7791,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":8555,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7837,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7821,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7826,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":7835,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7834,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":7813,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":7838,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7814,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":7819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7818,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":7838,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7817,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":8555,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7863,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7847,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7852,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7862,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":7861,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":7839,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":7864,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7840,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":7864,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7843,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":8555,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7889,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7873,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7878,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7888,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":7887,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7886,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":7865,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":7890,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7866,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7870,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":7890,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7869,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":8555,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7915,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7899,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7904,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7914,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":7913,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7912,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":7891,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":7916,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7892,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7896,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":7916,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7895,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":8555,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7941,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7925,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7930,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7940,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":7939,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7938,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":7917,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":7920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":7942,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7918,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":7923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7922,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":7942,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7921,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":8555,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7967,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7951,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7956,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7966,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":7965,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7964,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":7943,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":7946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7945,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":7968,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7944,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":7949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7948,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":7968,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7947,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":8555,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7993,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7977,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7982,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7992,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":7991,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7990,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":7969,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":7972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7971,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":7994,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7970,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":7994,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7973,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":8555,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8019,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8003,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8008,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8018,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":8017,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":7998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7997,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":8020,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7996,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":8020,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7999,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":8555,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8045,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8029,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8034,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8044,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":8043,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8042,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":8021,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8023,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":8046,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8022,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":8027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8026,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":8046,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8025,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":8555,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8071,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8055,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8060,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8070,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":8069,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8068,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":8047,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":8050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8049,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":8072,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8048,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":8053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8052,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":8072,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8051,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":8555,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8097,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8081,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8086,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8096,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":8095,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8094,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":8073,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":8076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8075,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":8098,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8074,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":8079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8078,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":8098,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8077,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":8555,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8123,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8104,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8107,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8112,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8104,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8122,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":8121,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8120,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":8099,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":8124,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8100,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":8105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8104,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":8124,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8103,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":8555,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8149,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8133,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8138,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8148,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":8147,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8146,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":8125,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8127,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":8150,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8126,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":8150,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8129,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":8555,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8175,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8159,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8164,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8174,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":8173,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8172,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":8151,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":8154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8153,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":8176,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8152,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":8157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8156,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":8176,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8155,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":8555,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8201,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8185,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8190,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8200,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":8199,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8198,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":8177,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":8180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8179,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":8202,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8178,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":8183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":8202,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8181,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":8555,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8227,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8211,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8216,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8226,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":8225,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8224,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":8203,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8205,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":8228,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8204,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":8209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":8228,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8207,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":8555,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8253,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8237,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8242,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8252,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":8251,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8250,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":8229,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":8254,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8230,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":8235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8234,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":8254,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8233,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":8555,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8279,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8263,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8268,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8278,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":8277,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8276,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":8255,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8257,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":8280,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8256,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":8261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8260,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":8280,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8259,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":8555,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8305,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8289,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8294,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8304,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":8303,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8302,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":8284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":8306,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8282,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":8287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8286,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":8306,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8285,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":8555,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8331,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8315,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8320,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8330,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":8329,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8328,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":8307,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":8332,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8308,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":8313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8312,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":8332,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8311,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":8555,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8357,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8341,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8346,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8356,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":8355,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8354,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":8333,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":8336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8335,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":8358,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8334,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":8358,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8337,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":8555,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8383,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8367,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8372,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8382,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":8381,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8380,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":8359,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":8362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":8384,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8360,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":8365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8364,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":8384,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8363,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":8555,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8409,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8393,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8398,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8408,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":8407,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8406,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":8385,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":8388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8387,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":8410,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8386,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8390,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":8410,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8389,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":8555,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8435,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8419,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8424,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8434,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":8433,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8432,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":8411,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":8414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8413,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":8436,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8412,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":8417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8416,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":8436,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8415,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":8555,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8461,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8445,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8450,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8460,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":8459,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8458,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":8437,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8439,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":8462,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8438,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":8462,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8441,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":8555,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8487,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8471,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8476,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8486,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":8485,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8484,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":8463,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":8466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8465,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":8488,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8464,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":8469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8468,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":8488,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8467,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":8555,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8513,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8497,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8502,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8512,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":8511,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8510,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":8489,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":8492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8491,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":8514,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8490,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":8495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":8514,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8493,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":8555,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8543,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8526,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8523,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":8530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8537,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":8536,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":8533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8532,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8535,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":8540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8538,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8521,"id":8542,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":8515,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8544,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":8518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":8544,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8516,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8544,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8519,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":8555,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8553,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nativeSrc":"34888:46:23","nodeType":"YulBlock","src":"34888:46:23","statements":[{"nativeSrc":"34902:22:23","nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:23","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:23","nodeType":"YulIdentifier","src":"34914:6:23"},"nativeSrc":"34914:9:23","nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:23","nodeType":"YulIdentifier","src":"34907:6:23"},"nativeSrc":"34907:17:23","nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nativeSrc":"34902:1:23","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8547,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":8550,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":8552,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":8545,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":8548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8547,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":8554,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8546,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8550,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":8554,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8549,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":8555,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8556,"src":"769:34173:23","usedErrors":[6800,6805,6812,6817],"usedEvents":[]}],"src":"192:34751:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8555],"SignedMath":[8699]},"id":8700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8700,"sourceUnit":8556,"src":"135:40:24","symbolAliases":[{"foreign":{"id":8558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8560,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8699,"linearizedBaseContracts":[8699],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":8589,"nodeType":"Block","src":"746:215:24","statements":[{"id":8588,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8581,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8555_$","typeString":"type(library SafeCast)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8554,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8577,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8571,"id":8587,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":8561,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8590,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8563,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":8590,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8562,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8565,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":8590,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8564,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8567,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":8590,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8566,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":8571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8590,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8569,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":8699,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8608,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8600,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8599,"id":8607,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":8591,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":8609,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8593,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":8609,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8592,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8595,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":8609,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8594,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8609,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8597,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":8699,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8627,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8619,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8618,"id":8626,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":8610,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":8628,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":8615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8612,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":8628,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8611,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8614,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":8628,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8613,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":8618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8628,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8616,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":8699,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8671,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[8639],"declarations":[{"constant":false,"id":8639,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":8671,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8638,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8652,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8633,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8633,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8653,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8639,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8658,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8639,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8654,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8664,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8633,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8637,"id":8670,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":8629,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8672,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":8634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8631,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":8672,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8630,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8633,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":8672,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8632,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":8637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8672,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8635,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":8699,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8697,"nodeType":"Block","src":"1843:767:24","statements":[{"id":8696,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[8681],"declarations":[{"constant":false,"id":8681,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":8696,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8680,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8685,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8682,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8688,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8689,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8692,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8679,"id":8695,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":8673,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8698,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":8698,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8674,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8698,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":8699,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8700,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"},"id":24},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"Arrays":[2914],"EnumerableSet":[9396]},"id":9397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8701,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../Arrays.sol","id":8703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9397,"sourceUnit":2915,"src":"231:37:25","symbolAliases":[{"foreign":{"id":8702,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"239:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":8704,"nodeType":"StructuredDocumentation","src":"270:1154:25","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n - Set can be cleared (all elements removed) in O(n).\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":9396,"linearizedBaseContracts":[9396],"name":"EnumerableSet","nameLocation":"1433:13:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":8712,"members":[{"constant":false,"id":8707,"mutability":"mutable","name":"_values","nameLocation":"1957:7:25","nodeType":"VariableDeclaration","scope":8712,"src":"1947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8706,"nodeType":"ArrayTypeName","src":"1947:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8711,"mutability":"mutable","name":"_positions","nameLocation":"2149:10:25","nodeType":"VariableDeclaration","scope":8712,"src":"2115:44:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":8710,"keyName":"value","keyNameLocation":"2131:5:25","keyType":{"id":8708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2123:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2115:33:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1900:3:25","nodeType":"StructDefinition","scope":9396,"src":"1893:273:25","visibility":"public"},{"body":{"id":8753,"nodeType":"Block","src":"2405:337:25","statements":[{"condition":{"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2419:22:25","subExpression":{"arguments":[{"id":8724,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"2430:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":8725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"2435:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8723,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"2420:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8751,"nodeType":"Block","src":"2699:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":8749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2720:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8722,"id":8750,"nodeType":"Return","src":"2713:12:25"}]},"id":8752,"nodeType":"IfStatement","src":"2415:321:25","trueBody":{"id":8748,"nodeType":"Block","src":"2443:250:25","statements":[{"expression":{"arguments":[{"id":8733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"2474:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":8728,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"2457:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2461:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"2457:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:4:25","memberName":"push","nodeType":"MemberAccess","src":"2457:16:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8735,"nodeType":"ExpressionStatement","src":"2457:23:25"},{"expression":{"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8736,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"2615:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"2615:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8740,"indexExpression":{"id":8738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"2630:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2615:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":8741,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"2639:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"2639:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:25","memberName":"length","nodeType":"MemberAccess","src":"2639:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8745,"nodeType":"ExpressionStatement","src":"2615:42:25"},{"expression":{"hexValue":"74727565","id":8746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2678:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8722,"id":8747,"nodeType":"Return","src":"2671:11:25"}]}}]},"documentation":{"id":8713,"nodeType":"StructuredDocumentation","src":"2172:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":8754,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2345:4:25","nodeType":"FunctionDefinition","parameters":{"id":8719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8716,"mutability":"mutable","name":"set","nameLocation":"2362:3:25","nodeType":"VariableDeclaration","scope":8754,"src":"2350:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8715,"nodeType":"UserDefinedTypeName","pathNode":{"id":8714,"name":"Set","nameLocations":["2350:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"2350:3:25"},"referencedDeclaration":8712,"src":"2350:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":8718,"mutability":"mutable","name":"value","nameLocation":"2375:5:25","nodeType":"VariableDeclaration","scope":8754,"src":"2367:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:32:25"},"returnParameters":{"id":8722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8754,"src":"2399:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8720,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:25"},"scope":9396,"src":"2336:406:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8837,"nodeType":"Block","src":"2982:1296:25","statements":[{"assignments":[8766],"declarations":[{"constant":false,"id":8766,"mutability":"mutable","name":"position","nameLocation":"3094:8:25","nodeType":"VariableDeclaration","scope":8837,"src":"3086:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8771,"initialValue":{"baseExpression":{"expression":{"id":8767,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"3105:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"3105:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8770,"indexExpression":{"id":8769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"3120:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3105:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:40:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8772,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8766,"src":"3141:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3141:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8835,"nodeType":"Block","src":"4235:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":8833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4256:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8764,"id":8834,"nodeType":"Return","src":"4249:12:25"}]},"id":8836,"nodeType":"IfStatement","src":"3137:1135:25","trueBody":{"id":8832,"nodeType":"Block","src":"3156:1073:25","statements":[{"assignments":[8776],"declarations":[{"constant":false,"id":8776,"mutability":"mutable","name":"valueIndex","nameLocation":"3516:10:25","nodeType":"VariableDeclaration","scope":8832,"src":"3508:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8777,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8766,"src":"3529:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3529:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:33:25"},{"assignments":[8782],"declarations":[{"constant":false,"id":8782,"mutability":"mutable","name":"lastIndex","nameLocation":"3563:9:25","nodeType":"VariableDeclaration","scope":8832,"src":"3555:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8788,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8783,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"3575:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3579:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"3575:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:25","memberName":"length","nodeType":"MemberAccess","src":"3575:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3575:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3555:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8789,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"3616:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8790,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"3630:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3616:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8816,"nodeType":"IfStatement","src":"3612:378:25","trueBody":{"id":8815,"nodeType":"Block","src":"3641:349:25","statements":[{"assignments":[8793],"declarations":[{"constant":false,"id":8793,"mutability":"mutable","name":"lastValue","nameLocation":"3667:9:25","nodeType":"VariableDeclaration","scope":8815,"src":"3659:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3659:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8798,"initialValue":{"baseExpression":{"expression":{"id":8794,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"3679:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"3679:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8797,"indexExpression":{"id":8796,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"3691:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3659:42:25"},{"expression":{"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8799,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"3800:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3804:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"3800:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8803,"indexExpression":{"id":8801,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"3812:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3800:23:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8804,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"3826:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3800:35:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8806,"nodeType":"ExpressionStatement","src":"3800:35:25"},{"expression":{"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8807,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"3939:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3943:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"3939:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8811,"indexExpression":{"id":8809,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"3954:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3939:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8812,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8766,"src":"3967:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8814,"nodeType":"ExpressionStatement","src":"3939:36:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8817,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"4068:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"4068:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:3:25","memberName":"pop","nodeType":"MemberAccess","src":"4068:15:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8823,"nodeType":"ExpressionStatement","src":"4068:17:25"},{"expression":{"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4164:28:25","subExpression":{"baseExpression":{"expression":{"id":8824,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"4171:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"4171:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8827,"indexExpression":{"id":8826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"4186:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4171:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8829,"nodeType":"ExpressionStatement","src":"4164:28:25"},{"expression":{"hexValue":"74727565","id":8830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4214:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8764,"id":8831,"nodeType":"Return","src":"4207:11:25"}]}}]},"documentation":{"id":8755,"nodeType":"StructuredDocumentation","src":"2748:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":8838,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2919:7:25","nodeType":"FunctionDefinition","parameters":{"id":8761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8758,"mutability":"mutable","name":"set","nameLocation":"2939:3:25","nodeType":"VariableDeclaration","scope":8838,"src":"2927:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8757,"nodeType":"UserDefinedTypeName","pathNode":{"id":8756,"name":"Set","nameLocations":["2927:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"2927:3:25"},"referencedDeclaration":8712,"src":"2927:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":8760,"mutability":"mutable","name":"value","nameLocation":"2952:5:25","nodeType":"VariableDeclaration","scope":8838,"src":"2944:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2944:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:32:25"},"returnParameters":{"id":8764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8838,"src":"2976:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8762,"name":"bool","nodeType":"ElementaryTypeName","src":"2976:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2975:6:25"},"scope":9396,"src":"2910:1368:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8880,"nodeType":"Block","src":"4633:196:25","statements":[{"assignments":[8846],"declarations":[{"constant":false,"id":8846,"mutability":"mutable","name":"len","nameLocation":"4651:3:25","nodeType":"VariableDeclaration","scope":8880,"src":"4643:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8850,"initialValue":{"arguments":[{"id":8848,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8842,"src":"4665:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}],"id":8847,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"4657:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:26:25"},{"body":{"id":8870,"nodeType":"Block","src":"4713:62:25","statements":[{"expression":{"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4727:37:25","subExpression":{"baseExpression":{"expression":{"id":8861,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8842,"src":"4734:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"4734:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8867,"indexExpression":{"baseExpression":{"expression":{"id":8863,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8842,"src":"4749:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4753:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"4749:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8866,"indexExpression":{"id":8865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"4761:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4734:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8869,"nodeType":"ExpressionStatement","src":"4727:37:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"4699:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8856,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"4703:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8871,"initializationExpression":{"assignments":[8852],"declarations":[{"constant":false,"id":8852,"mutability":"mutable","name":"i","nameLocation":"4692:1:25","nodeType":"VariableDeclaration","scope":8871,"src":"4684:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8854,"initialValue":{"hexValue":"30","id":8853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4708:3:25","subExpression":{"id":8858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"4710:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8860,"nodeType":"ExpressionStatement","src":"4708:3:25"},"nodeType":"ForStatement","src":"4679:96:25"},{"expression":{"arguments":[{"expression":{"id":8875,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8842,"src":"4807:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4811:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"4807:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},{"hexValue":"30","id":8877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4820:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":8872,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"4784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$2914_$","typeString":"type(library Arrays)"}},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:15:25","memberName":"unsafeSetLength","nodeType":"MemberAccess","referencedDeclaration":2902,"src":"4784:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] storage pointer,uint256)"}},"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8879,"nodeType":"ExpressionStatement","src":"4784:38:25"}]},"documentation":{"id":8839,"nodeType":"StructuredDocumentation","src":"4284:303:25","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":8881,"implemented":true,"kind":"function","modifiers":[],"name":"_clear","nameLocation":"4601:6:25","nodeType":"FunctionDefinition","parameters":{"id":8843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8842,"mutability":"mutable","name":"set","nameLocation":"4620:3:25","nodeType":"VariableDeclaration","scope":8881,"src":"4608:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8841,"nodeType":"UserDefinedTypeName","pathNode":{"id":8840,"name":"Set","nameLocations":["4608:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"4608:3:25"},"referencedDeclaration":8712,"src":"4608:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4607:17:25"},"returnParameters":{"id":8844,"nodeType":"ParameterList","parameters":[],"src":"4633:0:25"},"scope":9396,"src":"4592:237:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8899,"nodeType":"Block","src":"4989:50:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":8892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"5006:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5010:10:25","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"5006:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8895,"indexExpression":{"id":8894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"5021:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5031:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5006:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8891,"id":8898,"nodeType":"Return","src":"4999:33:25"}]},"documentation":{"id":8882,"nodeType":"StructuredDocumentation","src":"4835:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":8900,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4919:9:25","nodeType":"FunctionDefinition","parameters":{"id":8888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8885,"mutability":"mutable","name":"set","nameLocation":"4941:3:25","nodeType":"VariableDeclaration","scope":8900,"src":"4929:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8884,"nodeType":"UserDefinedTypeName","pathNode":{"id":8883,"name":"Set","nameLocations":["4929:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"4929:3:25"},"referencedDeclaration":8712,"src":"4929:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":8887,"mutability":"mutable","name":"value","nameLocation":"4954:5:25","nodeType":"VariableDeclaration","scope":8900,"src":"4946:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4946:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:32:25"},"returnParameters":{"id":8891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8900,"src":"4983:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8889,"name":"bool","nodeType":"ElementaryTypeName","src":"4983:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4982:6:25"},"scope":9396,"src":"4910:129:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8913,"nodeType":"Block","src":"5185:42:25","statements":[{"expression":{"expression":{"expression":{"id":8909,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"5202:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"5202:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:25","memberName":"length","nodeType":"MemberAccess","src":"5202:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8908,"id":8912,"nodeType":"Return","src":"5195:25:25"}]},"documentation":{"id":8901,"nodeType":"StructuredDocumentation","src":"5045:70:25","text":" @dev Returns the number of values on the set. O(1)."},"id":8914,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"5129:7:25","nodeType":"FunctionDefinition","parameters":{"id":8905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8904,"mutability":"mutable","name":"set","nameLocation":"5149:3:25","nodeType":"VariableDeclaration","scope":8914,"src":"5137:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8903,"nodeType":"UserDefinedTypeName","pathNode":{"id":8902,"name":"Set","nameLocations":["5137:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"5137:3:25"},"referencedDeclaration":8712,"src":"5137:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5136:17:25"},"returnParameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8914,"src":"5176:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:9:25"},"scope":9396,"src":"5120:107:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8930,"nodeType":"Block","src":"5645:42:25","statements":[{"expression":{"baseExpression":{"expression":{"id":8925,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"5662:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"5662:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8928,"indexExpression":{"id":8927,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"5674:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8924,"id":8929,"nodeType":"Return","src":"5655:25:25"}]},"documentation":{"id":8915,"nodeType":"StructuredDocumentation","src":"5233:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":8931,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"5578:3:25","nodeType":"FunctionDefinition","parameters":{"id":8921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"set","nameLocation":"5594:3:25","nodeType":"VariableDeclaration","scope":8931,"src":"5582:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8917,"nodeType":"UserDefinedTypeName","pathNode":{"id":8916,"name":"Set","nameLocations":["5582:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"5582:3:25"},"referencedDeclaration":8712,"src":"5582:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":8920,"mutability":"mutable","name":"index","nameLocation":"5607:5:25","nodeType":"VariableDeclaration","scope":8931,"src":"5599:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:32:25"},"returnParameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8931,"src":"5636:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5636:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5635:9:25"},"scope":9396,"src":"5569:118:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8944,"nodeType":"Block","src":"6301:35:25","statements":[{"expression":{"expression":{"id":8941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"6318:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":8942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6322:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"6318:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":8940,"id":8943,"nodeType":"Return","src":"6311:18:25"}]},"documentation":{"id":8932,"nodeType":"StructuredDocumentation","src":"5693:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":8945,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"6236:7:25","nodeType":"FunctionDefinition","parameters":{"id":8936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8935,"mutability":"mutable","name":"set","nameLocation":"6256:3:25","nodeType":"VariableDeclaration","scope":8945,"src":"6244:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8934,"nodeType":"UserDefinedTypeName","pathNode":{"id":8933,"name":"Set","nameLocations":["6244:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"6244:3:25"},"referencedDeclaration":8712,"src":"6244:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"6243:17:25"},"returnParameters":{"id":8940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8945,"src":"6283:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6283:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8938,"nodeType":"ArrayTypeName","src":"6283:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6282:18:25"},"scope":9396,"src":"6227:109:25","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":8949,"members":[{"constant":false,"id":8948,"mutability":"mutable","name":"_inner","nameLocation":"6393:6:25","nodeType":"VariableDeclaration","scope":8949,"src":"6389:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":8947,"nodeType":"UserDefinedTypeName","pathNode":{"id":8946,"name":"Set","nameLocations":["6389:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"6389:3:25"},"referencedDeclaration":8712,"src":"6389:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"6368:10:25","nodeType":"StructDefinition","scope":9396,"src":"6361:45:25","visibility":"public"},{"body":{"id":8966,"nodeType":"Block","src":"6652:47:25","statements":[{"expression":{"arguments":[{"expression":{"id":8961,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"6674:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":8962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"6674:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":8963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"6686:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8960,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"6669:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":8964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8959,"id":8965,"nodeType":"Return","src":"6662:30:25"}]},"documentation":{"id":8950,"nodeType":"StructuredDocumentation","src":"6412:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":8967,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6585:3:25","nodeType":"FunctionDefinition","parameters":{"id":8956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8953,"mutability":"mutable","name":"set","nameLocation":"6608:3:25","nodeType":"VariableDeclaration","scope":8967,"src":"6589:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":8952,"nodeType":"UserDefinedTypeName","pathNode":{"id":8951,"name":"Bytes32Set","nameLocations":["6589:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"6589:10:25"},"referencedDeclaration":8949,"src":"6589:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":8955,"mutability":"mutable","name":"value","nameLocation":"6621:5:25","nodeType":"VariableDeclaration","scope":8967,"src":"6613:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6588:39:25"},"returnParameters":{"id":8959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8967,"src":"6646:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8957,"name":"bool","nodeType":"ElementaryTypeName","src":"6646:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6645:6:25"},"scope":9396,"src":"6576:123:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8984,"nodeType":"Block","src":"6946:50:25","statements":[{"expression":{"arguments":[{"expression":{"id":8979,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8971,"src":"6971:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":8980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"6971:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":8981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"6983:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8978,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"6963:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8977,"id":8983,"nodeType":"Return","src":"6956:33:25"}]},"documentation":{"id":8968,"nodeType":"StructuredDocumentation","src":"6705:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":8985,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6876:6:25","nodeType":"FunctionDefinition","parameters":{"id":8974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8971,"mutability":"mutable","name":"set","nameLocation":"6902:3:25","nodeType":"VariableDeclaration","scope":8985,"src":"6883:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":8970,"nodeType":"UserDefinedTypeName","pathNode":{"id":8969,"name":"Bytes32Set","nameLocations":["6883:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"6883:10:25"},"referencedDeclaration":8949,"src":"6883:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":8973,"mutability":"mutable","name":"value","nameLocation":"6915:5:25","nodeType":"VariableDeclaration","scope":8985,"src":"6907:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6907:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6882:39:25"},"returnParameters":{"id":8977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8985,"src":"6940:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8975,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:25"},"scope":9396,"src":"6867:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8997,"nodeType":"Block","src":"7358:35:25","statements":[{"expression":{"arguments":[{"expression":{"id":8993,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"7375:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":8994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7379:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"7375:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":8992,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"7368:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8996,"nodeType":"ExpressionStatement","src":"7368:18:25"}]},"documentation":{"id":8986,"nodeType":"StructuredDocumentation","src":"7002:303:25","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":8998,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"7319:5:25","nodeType":"FunctionDefinition","parameters":{"id":8990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8989,"mutability":"mutable","name":"set","nameLocation":"7344:3:25","nodeType":"VariableDeclaration","scope":8998,"src":"7325:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":8988,"nodeType":"UserDefinedTypeName","pathNode":{"id":8987,"name":"Bytes32Set","nameLocations":["7325:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"7325:10:25"},"referencedDeclaration":8949,"src":"7325:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7324:24:25"},"returnParameters":{"id":8991,"nodeType":"ParameterList","parameters":[],"src":"7358:0:25"},"scope":9396,"src":"7310:83:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9015,"nodeType":"Block","src":"7560:52:25","statements":[{"expression":{"arguments":[{"expression":{"id":9010,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9002,"src":"7587:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7591:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"7587:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9004,"src":"7599:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9009,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"7577:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7577:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9008,"id":9014,"nodeType":"Return","src":"7570:35:25"}]},"documentation":{"id":8999,"nodeType":"StructuredDocumentation","src":"7399:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":9016,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7483:8:25","nodeType":"FunctionDefinition","parameters":{"id":9005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9002,"mutability":"mutable","name":"set","nameLocation":"7511:3:25","nodeType":"VariableDeclaration","scope":9016,"src":"7492:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9001,"nodeType":"UserDefinedTypeName","pathNode":{"id":9000,"name":"Bytes32Set","nameLocations":["7492:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"7492:10:25"},"referencedDeclaration":8949,"src":"7492:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9004,"mutability":"mutable","name":"value","nameLocation":"7524:5:25","nodeType":"VariableDeclaration","scope":9016,"src":"7516:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7516:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7491:39:25"},"returnParameters":{"id":9008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9016,"src":"7554:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9006,"name":"bool","nodeType":"ElementaryTypeName","src":"7554:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7553:6:25"},"scope":9396,"src":"7474:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9030,"nodeType":"Block","src":"7765:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":9026,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9020,"src":"7790:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"7790:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9025,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"7782:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7782:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9024,"id":9029,"nodeType":"Return","src":"7775:26:25"}]},"documentation":{"id":9017,"nodeType":"StructuredDocumentation","src":"7618:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":9031,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7702:6:25","nodeType":"FunctionDefinition","parameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9020,"mutability":"mutable","name":"set","nameLocation":"7728:3:25","nodeType":"VariableDeclaration","scope":9031,"src":"7709:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9019,"nodeType":"UserDefinedTypeName","pathNode":{"id":9018,"name":"Bytes32Set","nameLocations":["7709:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"7709:10:25"},"referencedDeclaration":8949,"src":"7709:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7708:24:25"},"returnParameters":{"id":9024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9031,"src":"7756:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9022,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:9:25"},"scope":9396,"src":"7693:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9048,"nodeType":"Block","src":"8233:46:25","statements":[{"expression":{"arguments":[{"expression":{"id":9043,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"8254:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8258:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"8254:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9045,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"8266:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9042,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"8250:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9041,"id":9047,"nodeType":"Return","src":"8243:29:25"}]},"documentation":{"id":9032,"nodeType":"StructuredDocumentation","src":"7814:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9049,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8159:2:25","nodeType":"FunctionDefinition","parameters":{"id":9038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9035,"mutability":"mutable","name":"set","nameLocation":"8181:3:25","nodeType":"VariableDeclaration","scope":9049,"src":"8162:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9034,"nodeType":"UserDefinedTypeName","pathNode":{"id":9033,"name":"Bytes32Set","nameLocations":["8162:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"8162:10:25"},"referencedDeclaration":8949,"src":"8162:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":9037,"mutability":"mutable","name":"index","nameLocation":"8194:5:25","nodeType":"VariableDeclaration","scope":9049,"src":"8186:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9036,"name":"uint256","nodeType":"ElementaryTypeName","src":"8186:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:39:25"},"returnParameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9049,"src":"8224:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8224:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8223:9:25"},"scope":9396,"src":"8150:129:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9078,"nodeType":"Block","src":"8900:192:25","statements":[{"assignments":[9063],"declarations":[{"constant":false,"id":9063,"mutability":"mutable","name":"store","nameLocation":"8927:5:25","nodeType":"VariableDeclaration","scope":9078,"src":"8910:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8910:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9062,"nodeType":"ArrayTypeName","src":"8910:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9068,"initialValue":{"arguments":[{"expression":{"id":9065,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"8943:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":9066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":8948,"src":"8943:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9064,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8945,"src":"8935:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8910:44:25"},{"assignments":[9073],"declarations":[{"constant":false,"id":9073,"mutability":"mutable","name":"result","nameLocation":"8981:6:25","nodeType":"VariableDeclaration","scope":9078,"src":"8964:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8964:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9072,"nodeType":"ArrayTypeName","src":"8964:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9074,"nodeType":"VariableDeclarationStatement","src":"8964:23:25"},{"AST":{"nativeSrc":"9023:39:25","nodeType":"YulBlock","src":"9023:39:25","statements":[{"nativeSrc":"9037:15:25","nodeType":"YulAssignment","src":"9037:15:25","value":{"name":"store","nativeSrc":"9047:5:25","nodeType":"YulIdentifier","src":"9047:5:25"},"variableNames":[{"name":"result","nativeSrc":"9037:6:25","nodeType":"YulIdentifier","src":"9037:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9073,"isOffset":false,"isSlot":false,"src":"9037:6:25","valueSize":1},{"declaration":9063,"isOffset":false,"isSlot":false,"src":"9047:5:25","valueSize":1}],"flags":["memory-safe"],"id":9075,"nodeType":"InlineAssembly","src":"8998:64:25"},{"expression":{"id":9076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"9079:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":9058,"id":9077,"nodeType":"Return","src":"9072:13:25"}]},"documentation":{"id":9050,"nodeType":"StructuredDocumentation","src":"8285:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9079,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"8828:6:25","nodeType":"FunctionDefinition","parameters":{"id":9054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9053,"mutability":"mutable","name":"set","nameLocation":"8854:3:25","nodeType":"VariableDeclaration","scope":9079,"src":"8835:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":9052,"nodeType":"UserDefinedTypeName","pathNode":{"id":9051,"name":"Bytes32Set","nameLocations":["8835:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":8949,"src":"8835:10:25"},"referencedDeclaration":8949,"src":"8835:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$8949_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8834:24:25"},"returnParameters":{"id":9058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9079,"src":"8882:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8882:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9056,"nodeType":"ArrayTypeName","src":"8882:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8881:18:25"},"scope":9396,"src":"8819:273:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":9083,"members":[{"constant":false,"id":9082,"mutability":"mutable","name":"_inner","nameLocation":"9149:6:25","nodeType":"VariableDeclaration","scope":9083,"src":"9145:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9081,"nodeType":"UserDefinedTypeName","pathNode":{"id":9080,"name":"Set","nameLocations":["9145:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"9145:3:25"},"referencedDeclaration":8712,"src":"9145:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"9124:10:25","nodeType":"StructDefinition","scope":9396,"src":"9117:45:25","visibility":"public"},{"body":{"id":9109,"nodeType":"Block","src":"9408:74:25","statements":[{"expression":{"arguments":[{"expression":{"id":9095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"9430:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"9430:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"9466:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9101,"name":"uint160","nodeType":"ElementaryTypeName","src":"9458:7:25","typeDescriptions":{}}},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9450:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9099,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:25","typeDescriptions":{}}},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9442:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9442:7:25","typeDescriptions":{}}},"id":9106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9094,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"9425:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9425:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9093,"id":9108,"nodeType":"Return","src":"9418:57:25"}]},"documentation":{"id":9084,"nodeType":"StructuredDocumentation","src":"9168:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9110,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"9341:3:25","nodeType":"FunctionDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9087,"mutability":"mutable","name":"set","nameLocation":"9364:3:25","nodeType":"VariableDeclaration","scope":9110,"src":"9345:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9086,"nodeType":"UserDefinedTypeName","pathNode":{"id":9085,"name":"AddressSet","nameLocations":["9345:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"9345:10:25"},"referencedDeclaration":9083,"src":"9345:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9089,"mutability":"mutable","name":"value","nameLocation":"9377:5:25","nodeType":"VariableDeclaration","scope":9110,"src":"9369:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9088,"name":"address","nodeType":"ElementaryTypeName","src":"9369:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9344:39:25"},"returnParameters":{"id":9093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9110,"src":"9402:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9091,"name":"bool","nodeType":"ElementaryTypeName","src":"9402:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9401:6:25"},"scope":9396,"src":"9332:150:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9136,"nodeType":"Block","src":"9729:77:25","statements":[{"expression":{"arguments":[{"expression":{"id":9122,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"9754:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"9754:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"9790:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9128,"name":"uint160","nodeType":"ElementaryTypeName","src":"9782:7:25","typeDescriptions":{}}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9782:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9774:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9126,"name":"uint256","nodeType":"ElementaryTypeName","src":"9774:7:25","typeDescriptions":{}}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9766:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9766:7:25","typeDescriptions":{}}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9766:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9121,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"9746:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9120,"id":9135,"nodeType":"Return","src":"9739:60:25"}]},"documentation":{"id":9111,"nodeType":"StructuredDocumentation","src":"9488:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9137,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9659:6:25","nodeType":"FunctionDefinition","parameters":{"id":9117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9114,"mutability":"mutable","name":"set","nameLocation":"9685:3:25","nodeType":"VariableDeclaration","scope":9137,"src":"9666:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"AddressSet","nameLocations":["9666:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"9666:10:25"},"referencedDeclaration":9083,"src":"9666:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9116,"mutability":"mutable","name":"value","nameLocation":"9698:5:25","nodeType":"VariableDeclaration","scope":9137,"src":"9690:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9115,"name":"address","nodeType":"ElementaryTypeName","src":"9690:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9665:39:25"},"returnParameters":{"id":9120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9137,"src":"9723:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9118,"name":"bool","nodeType":"ElementaryTypeName","src":"9723:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9722:6:25"},"scope":9396,"src":"9650:156:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9149,"nodeType":"Block","src":"10168:35:25","statements":[{"expression":{"arguments":[{"expression":{"id":9145,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"10185:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"10185:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9144,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"10178:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10178:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9148,"nodeType":"ExpressionStatement","src":"10178:18:25"}]},"documentation":{"id":9138,"nodeType":"StructuredDocumentation","src":"9812:303:25","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9150,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"10129:5:25","nodeType":"FunctionDefinition","parameters":{"id":9142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9141,"mutability":"mutable","name":"set","nameLocation":"10154:3:25","nodeType":"VariableDeclaration","scope":9150,"src":"10135:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9140,"nodeType":"UserDefinedTypeName","pathNode":{"id":9139,"name":"AddressSet","nameLocations":["10135:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"10135:10:25"},"referencedDeclaration":9083,"src":"10135:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10134:24:25"},"returnParameters":{"id":9143,"nodeType":"ParameterList","parameters":[],"src":"10168:0:25"},"scope":9396,"src":"10120:83:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9176,"nodeType":"Block","src":"10370:79:25","statements":[{"expression":{"arguments":[{"expression":{"id":9162,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"10397:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"10397:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":9170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9156,"src":"10433:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9168,"name":"uint160","nodeType":"ElementaryTypeName","src":"10425:7:25","typeDescriptions":{}}},"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10417:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:25","typeDescriptions":{}}},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10417:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10409:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10409:7:25","typeDescriptions":{}}},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10409:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9161,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"10387:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9160,"id":9175,"nodeType":"Return","src":"10380:62:25"}]},"documentation":{"id":9151,"nodeType":"StructuredDocumentation","src":"10209:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":9177,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10293:8:25","nodeType":"FunctionDefinition","parameters":{"id":9157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9154,"mutability":"mutable","name":"set","nameLocation":"10321:3:25","nodeType":"VariableDeclaration","scope":9177,"src":"10302:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9153,"nodeType":"UserDefinedTypeName","pathNode":{"id":9152,"name":"AddressSet","nameLocations":["10302:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"10302:10:25"},"referencedDeclaration":9083,"src":"10302:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9156,"mutability":"mutable","name":"value","nameLocation":"10334:5:25","nodeType":"VariableDeclaration","scope":9177,"src":"10326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9155,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10301:39:25"},"returnParameters":{"id":9160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9177,"src":"10364:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9158,"name":"bool","nodeType":"ElementaryTypeName","src":"10364:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10363:6:25"},"scope":9396,"src":"10284:165:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9191,"nodeType":"Block","src":"10602:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":9187,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"10627:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10631:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"10627:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9186,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"10619:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9185,"id":9190,"nodeType":"Return","src":"10612:26:25"}]},"documentation":{"id":9178,"nodeType":"StructuredDocumentation","src":"10455:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":9192,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10539:6:25","nodeType":"FunctionDefinition","parameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"set","nameLocation":"10565:3:25","nodeType":"VariableDeclaration","scope":9192,"src":"10546:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9180,"nodeType":"UserDefinedTypeName","pathNode":{"id":9179,"name":"AddressSet","nameLocations":["10546:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"10546:10:25"},"referencedDeclaration":9083,"src":"10546:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10545:24:25"},"returnParameters":{"id":9185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9192,"src":"10593:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9183,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:9:25"},"scope":9396,"src":"10530:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9218,"nodeType":"Block","src":"11070:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9210,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"11115:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"11115:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9212,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"11127:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9209,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"11111:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11111:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11103:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9207,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:25","typeDescriptions":{}}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9205,"name":"uint160","nodeType":"ElementaryTypeName","src":"11095:7:25","typeDescriptions":{}}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11087:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9203,"name":"address","nodeType":"ElementaryTypeName","src":"11087:7:25","typeDescriptions":{}}},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9202,"id":9217,"nodeType":"Return","src":"11080:56:25"}]},"documentation":{"id":9193,"nodeType":"StructuredDocumentation","src":"10651:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9219,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10996:2:25","nodeType":"FunctionDefinition","parameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9196,"mutability":"mutable","name":"set","nameLocation":"11018:3:25","nodeType":"VariableDeclaration","scope":9219,"src":"10999:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9195,"nodeType":"UserDefinedTypeName","pathNode":{"id":9194,"name":"AddressSet","nameLocations":["10999:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"10999:10:25"},"referencedDeclaration":9083,"src":"10999:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9198,"mutability":"mutable","name":"index","nameLocation":"11031:5:25","nodeType":"VariableDeclaration","scope":9219,"src":"11023:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9197,"name":"uint256","nodeType":"ElementaryTypeName","src":"11023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:39:25"},"returnParameters":{"id":9202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9219,"src":"11061:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9200,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11060:9:25"},"scope":9396,"src":"10987:156:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9248,"nodeType":"Block","src":"11764:192:25","statements":[{"assignments":[9233],"declarations":[{"constant":false,"id":9233,"mutability":"mutable","name":"store","nameLocation":"11791:5:25","nodeType":"VariableDeclaration","scope":9248,"src":"11774:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11774:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9232,"nodeType":"ArrayTypeName","src":"11774:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9238,"initialValue":{"arguments":[{"expression":{"id":9235,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"11807:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":9236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9082,"src":"11807:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9234,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8945,"src":"11799:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11774:44:25"},{"assignments":[9243],"declarations":[{"constant":false,"id":9243,"mutability":"mutable","name":"result","nameLocation":"11845:6:25","nodeType":"VariableDeclaration","scope":9248,"src":"11828:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9241,"name":"address","nodeType":"ElementaryTypeName","src":"11828:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9242,"nodeType":"ArrayTypeName","src":"11828:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":9244,"nodeType":"VariableDeclarationStatement","src":"11828:23:25"},{"AST":{"nativeSrc":"11887:39:25","nodeType":"YulBlock","src":"11887:39:25","statements":[{"nativeSrc":"11901:15:25","nodeType":"YulAssignment","src":"11901:15:25","value":{"name":"store","nativeSrc":"11911:5:25","nodeType":"YulIdentifier","src":"11911:5:25"},"variableNames":[{"name":"result","nativeSrc":"11901:6:25","nodeType":"YulIdentifier","src":"11901:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9243,"isOffset":false,"isSlot":false,"src":"11901:6:25","valueSize":1},{"declaration":9233,"isOffset":false,"isSlot":false,"src":"11911:5:25","valueSize":1}],"flags":["memory-safe"],"id":9245,"nodeType":"InlineAssembly","src":"11862:64:25"},{"expression":{"id":9246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"11943:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":9228,"id":9247,"nodeType":"Return","src":"11936:13:25"}]},"documentation":{"id":9220,"nodeType":"StructuredDocumentation","src":"11149:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9249,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11692:6:25","nodeType":"FunctionDefinition","parameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"set","nameLocation":"11718:3:25","nodeType":"VariableDeclaration","scope":9249,"src":"11699:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9222,"nodeType":"UserDefinedTypeName","pathNode":{"id":9221,"name":"AddressSet","nameLocations":["11699:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":9083,"src":"11699:10:25"},"referencedDeclaration":9083,"src":"11699:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$9083_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"11698:24:25"},"returnParameters":{"id":9228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9249,"src":"11746:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9225,"name":"address","nodeType":"ElementaryTypeName","src":"11746:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9226,"nodeType":"ArrayTypeName","src":"11746:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11745:18:25"},"scope":9396,"src":"11683:273:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":9253,"members":[{"constant":false,"id":9252,"mutability":"mutable","name":"_inner","nameLocation":"12007:6:25","nodeType":"VariableDeclaration","scope":9253,"src":"12003:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9251,"nodeType":"UserDefinedTypeName","pathNode":{"id":9250,"name":"Set","nameLocations":["12003:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"12003:3:25"},"referencedDeclaration":8712,"src":"12003:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"11985:7:25","nodeType":"StructDefinition","scope":9396,"src":"11978:42:25","visibility":"public"},{"body":{"id":9273,"nodeType":"Block","src":"12263:56:25","statements":[{"expression":{"arguments":[{"expression":{"id":9265,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"12285:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12289:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"12285:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"12305:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12297:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12297:7:25","typeDescriptions":{}}},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9264,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"12280:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9263,"id":9272,"nodeType":"Return","src":"12273:39:25"}]},"documentation":{"id":9254,"nodeType":"StructuredDocumentation","src":"12026:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":9274,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"12199:3:25","nodeType":"FunctionDefinition","parameters":{"id":9260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9257,"mutability":"mutable","name":"set","nameLocation":"12219:3:25","nodeType":"VariableDeclaration","scope":9274,"src":"12203:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9256,"nodeType":"UserDefinedTypeName","pathNode":{"id":9255,"name":"UintSet","nameLocations":["12203:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"12203:7:25"},"referencedDeclaration":9253,"src":"12203:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"value","nameLocation":"12232:5:25","nodeType":"VariableDeclaration","scope":9274,"src":"12224:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:36:25"},"returnParameters":{"id":9263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9274,"src":"12257:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9261,"name":"bool","nodeType":"ElementaryTypeName","src":"12257:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12256:6:25"},"scope":9396,"src":"12190:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9294,"nodeType":"Block","src":"12563:59:25","statements":[{"expression":{"arguments":[{"expression":{"id":9286,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"12588:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12592:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"12588:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"12608:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12600:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:25","typeDescriptions":{}}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12600:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9285,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"12580:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12580:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9284,"id":9293,"nodeType":"Return","src":"12573:42:25"}]},"documentation":{"id":9275,"nodeType":"StructuredDocumentation","src":"12325:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":9295,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12496:6:25","nodeType":"FunctionDefinition","parameters":{"id":9281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9278,"mutability":"mutable","name":"set","nameLocation":"12519:3:25","nodeType":"VariableDeclaration","scope":9295,"src":"12503:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9277,"nodeType":"UserDefinedTypeName","pathNode":{"id":9276,"name":"UintSet","nameLocations":["12503:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"12503:7:25"},"referencedDeclaration":9253,"src":"12503:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9280,"mutability":"mutable","name":"value","nameLocation":"12532:5:25","nodeType":"VariableDeclaration","scope":9295,"src":"12524:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9279,"name":"uint256","nodeType":"ElementaryTypeName","src":"12524:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12502:36:25"},"returnParameters":{"id":9284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9295,"src":"12557:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9282,"name":"bool","nodeType":"ElementaryTypeName","src":"12557:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12556:6:25"},"scope":9396,"src":"12487:135:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9307,"nodeType":"Block","src":"12981:35:25","statements":[{"expression":{"arguments":[{"expression":{"id":9303,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"12998:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13002:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"12998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9302,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12991:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$8712_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9306,"nodeType":"ExpressionStatement","src":"12991:18:25"}]},"documentation":{"id":9296,"nodeType":"StructuredDocumentation","src":"12628:303:25","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":9308,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"12945:5:25","nodeType":"FunctionDefinition","parameters":{"id":9300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9299,"mutability":"mutable","name":"set","nameLocation":"12967:3:25","nodeType":"VariableDeclaration","scope":9308,"src":"12951:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9298,"nodeType":"UserDefinedTypeName","pathNode":{"id":9297,"name":"UintSet","nameLocations":["12951:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"12951:7:25"},"referencedDeclaration":9253,"src":"12951:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12950:21:25"},"returnParameters":{"id":9301,"nodeType":"ParameterList","parameters":[],"src":"12981:0:25"},"scope":9396,"src":"12936:80:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9328,"nodeType":"Block","src":"13180:61:25","statements":[{"expression":{"arguments":[{"expression":{"id":9320,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"13207:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13211:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"13207:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":9324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"13227:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13219:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13219:7:25","typeDescriptions":{}}},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9319,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"13197:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9318,"id":9327,"nodeType":"Return","src":"13190:44:25"}]},"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"13022:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":9329,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13106:8:25","nodeType":"FunctionDefinition","parameters":{"id":9315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9312,"mutability":"mutable","name":"set","nameLocation":"13131:3:25","nodeType":"VariableDeclaration","scope":9329,"src":"13115:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9311,"nodeType":"UserDefinedTypeName","pathNode":{"id":9310,"name":"UintSet","nameLocations":["13115:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"13115:7:25"},"referencedDeclaration":9253,"src":"13115:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9314,"mutability":"mutable","name":"value","nameLocation":"13144:5:25","nodeType":"VariableDeclaration","scope":9329,"src":"13136:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9313,"name":"uint256","nodeType":"ElementaryTypeName","src":"13136:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:36:25"},"returnParameters":{"id":9318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9329,"src":"13174:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9316,"name":"bool","nodeType":"ElementaryTypeName","src":"13174:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13173:6:25"},"scope":9396,"src":"13097:144:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9343,"nodeType":"Block","src":"13391:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":9339,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9333,"src":"13416:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13420:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"13416:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9338,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"13408:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":9341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9337,"id":9342,"nodeType":"Return","src":"13401:26:25"}]},"documentation":{"id":9330,"nodeType":"StructuredDocumentation","src":"13247:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":9344,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13331:6:25","nodeType":"FunctionDefinition","parameters":{"id":9334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9333,"mutability":"mutable","name":"set","nameLocation":"13354:3:25","nodeType":"VariableDeclaration","scope":9344,"src":"13338:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9332,"nodeType":"UserDefinedTypeName","pathNode":{"id":9331,"name":"UintSet","nameLocations":["13338:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"13338:7:25"},"referencedDeclaration":9253,"src":"13338:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"13337:21:25"},"returnParameters":{"id":9337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9344,"src":"13382:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9335,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13381:9:25"},"scope":9396,"src":"13322:112:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9364,"nodeType":"Block","src":"13856:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":9358,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9348,"src":"13885:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13889:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"13885:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":9360,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9350,"src":"13897:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9357,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"13881:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13881:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13873:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9355,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:25","typeDescriptions":{}}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13873:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9354,"id":9363,"nodeType":"Return","src":"13866:38:25"}]},"documentation":{"id":9345,"nodeType":"StructuredDocumentation","src":"13440:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":9365,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13785:2:25","nodeType":"FunctionDefinition","parameters":{"id":9351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"set","nameLocation":"13804:3:25","nodeType":"VariableDeclaration","scope":9365,"src":"13788:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9347,"nodeType":"UserDefinedTypeName","pathNode":{"id":9346,"name":"UintSet","nameLocations":["13788:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"13788:7:25"},"referencedDeclaration":9253,"src":"13788:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":9350,"mutability":"mutable","name":"index","nameLocation":"13817:5:25","nodeType":"VariableDeclaration","scope":9365,"src":"13809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13787:36:25"},"returnParameters":{"id":9354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9365,"src":"13847:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9352,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13846:9:25"},"scope":9396,"src":"13776:135:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9394,"nodeType":"Block","src":"14529:192:25","statements":[{"assignments":[9379],"declarations":[{"constant":false,"id":9379,"mutability":"mutable","name":"store","nameLocation":"14556:5:25","nodeType":"VariableDeclaration","scope":9394,"src":"14539:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14539:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9378,"nodeType":"ArrayTypeName","src":"14539:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9384,"initialValue":{"arguments":[{"expression":{"id":9381,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9369,"src":"14572:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":9382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14576:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":9252,"src":"14572:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$8712_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":9380,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8945,"src":"14564:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$8712_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14539:44:25"},{"assignments":[9389],"declarations":[{"constant":false,"id":9389,"mutability":"mutable","name":"result","nameLocation":"14610:6:25","nodeType":"VariableDeclaration","scope":9394,"src":"14593:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9387,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9388,"nodeType":"ArrayTypeName","src":"14593:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":9390,"nodeType":"VariableDeclarationStatement","src":"14593:23:25"},{"AST":{"nativeSrc":"14652:39:25","nodeType":"YulBlock","src":"14652:39:25","statements":[{"nativeSrc":"14666:15:25","nodeType":"YulAssignment","src":"14666:15:25","value":{"name":"store","nativeSrc":"14676:5:25","nodeType":"YulIdentifier","src":"14676:5:25"},"variableNames":[{"name":"result","nativeSrc":"14666:6:25","nodeType":"YulIdentifier","src":"14666:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9389,"isOffset":false,"isSlot":false,"src":"14666:6:25","valueSize":1},{"declaration":9379,"isOffset":false,"isSlot":false,"src":"14676:5:25","valueSize":1}],"flags":["memory-safe"],"id":9391,"nodeType":"InlineAssembly","src":"14627:64:25"},{"expression":{"id":9392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"14708:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9374,"id":9393,"nodeType":"Return","src":"14701:13:25"}]},"documentation":{"id":9366,"nodeType":"StructuredDocumentation","src":"13917:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":9395,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"14460:6:25","nodeType":"FunctionDefinition","parameters":{"id":9370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9369,"mutability":"mutable","name":"set","nameLocation":"14483:3:25","nodeType":"VariableDeclaration","scope":9395,"src":"14467:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":9368,"nodeType":"UserDefinedTypeName","pathNode":{"id":9367,"name":"UintSet","nameLocations":["14467:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":9253,"src":"14467:7:25"},"referencedDeclaration":9253,"src":"14467:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$9253_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"14466:21:25"},"returnParameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9395,"src":"14511:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9371,"name":"uint256","nodeType":"ElementaryTypeName","src":"14511:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9372,"nodeType":"ArrayTypeName","src":"14511:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14510:18:25"},"scope":9396,"src":"14451:270:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":9397,"src":"1425:13298:25","usedErrors":[],"usedEvents":[]}],"src":"205:14519:25"},"id":25},"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol":{"ast":{"absolutePath":"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol","exportedSymbols":{"ContextUpgradeable":[1517],"ERC2771ContextUpgradeable":[9511],"Initializable":[854]},"id":9512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9398,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":9399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9512,"sourceUnit":1518,"src":"58:74:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9512,"sourceUnit":855,"src":"133:75:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9401,"name":"Initializable","nameLocations":["261:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"261:13:26"},"id":9402,"nodeType":"InheritanceSpecifier","src":"261:13:26"},{"baseName":{"id":9403,"name":"ContextUpgradeable","nameLocations":["280:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"280:18:26"},"id":9404,"nodeType":"InheritanceSpecifier","src":"280:18:26"}],"canonicalName":"ERC2771ContextUpgradeable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9511,"linearizedBaseContracts":[9511,1517,854],"name":"ERC2771ContextUpgradeable","nameLocation":"228:25:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":9411,"nodeType":"Block","src":"401:2:26","statements":[]},"functionSelector":"572b6c05","id":9412,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"314:18:26","nodeType":"FunctionDefinition","parameters":{"id":9407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9406,"mutability":"mutable","name":"forwarder","nameLocation":"350:9:26","nodeType":"VariableDeclaration","scope":9412,"src":"342:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9405,"name":"address","nodeType":"ElementaryTypeName","src":"342:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"332:33:26"},"returnParameters":{"id":9410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9412,"src":"395:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9408,"name":"bool","nodeType":"ElementaryTypeName","src":"395:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"394:6:26"},"scope":9511,"src":"305:98:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1499],"body":{"id":9458,"nodeType":"Block","src":"711:446:26","statements":[{"assignments":[9420],"declarations":[{"constant":false,"id":9420,"mutability":"mutable","name":"calldataLength","nameLocation":"729:14:26","nodeType":"VariableDeclaration","scope":9458,"src":"721:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9419,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9424,"initialValue":{"expression":{"expression":{"id":9421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"746:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"750:4:26","memberName":"data","nodeType":"MemberAccess","src":"746:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"755:6:26","memberName":"length","nodeType":"MemberAccess","src":"746:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:40:26"},{"assignments":[9426],"declarations":[{"constant":false,"id":9426,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"779:19:26","nodeType":"VariableDeclaration","scope":9458,"src":"771:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9425,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9429,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9427,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[9510],"referencedDeclaration":9510,"src":"801:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"801:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"771:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":9431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"869:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"873:6:26","memberName":"sender","nodeType":"MemberAccess","src":"869:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9430,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"850:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"850:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9434,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"896:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9435,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"914:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"896:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"850:83:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9456,"nodeType":"Block","src":"1101:50:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9452,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1122:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771ContextUpgradeable_$9511_$","typeString":"type(contract super ERC2771ContextUpgradeable)"}},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1128:10:26","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"1122:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9418,"id":9455,"nodeType":"Return","src":"1115:25:26"}]},"id":9457,"nodeType":"IfStatement","src":"833:318:26","trueBody":{"id":9451,"nodeType":"Block","src":"944:151:26","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":9442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1018:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1022:4:26","memberName":"data","nodeType":"MemberAccess","src":"1018:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1018:47:26","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9444,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"1027:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9445,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"1044:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1027:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":9441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":9440,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1010:7:26","typeDescriptions":{}}},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":9439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"981:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9438,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:26","typeDescriptions":{}}},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:103:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9418,"id":9450,"nodeType":"Return","src":"958:126:26"}]}}]},"documentation":{"id":9413,"nodeType":"StructuredDocumentation","src":"409:226:26","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":9459,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:26","nodeType":"FunctionDefinition","overrides":{"id":9415,"nodeType":"OverrideSpecifier","overrides":[],"src":"684:8:26"},"parameters":{"id":9414,"nodeType":"ParameterList","parameters":[],"src":"659:2:26"},"returnParameters":{"id":9418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9459,"src":"702:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9416,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"701:9:26"},"scope":9511,"src":"640:517:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1508],"body":{"id":9499,"nodeType":"Block","src":"1510:372:26","statements":[{"assignments":[9467],"declarations":[{"constant":false,"id":9467,"mutability":"mutable","name":"calldataLength","nameLocation":"1528:14:26","nodeType":"VariableDeclaration","scope":9499,"src":"1520:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9471,"initialValue":{"expression":{"expression":{"id":9468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1545:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1549:4:26","memberName":"data","nodeType":"MemberAccess","src":"1545:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:6:26","memberName":"length","nodeType":"MemberAccess","src":"1545:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1520:40:26"},{"assignments":[9473],"declarations":[{"constant":false,"id":9473,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"1578:19:26","nodeType":"VariableDeclaration","scope":9499,"src":"1570:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1570:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9474,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[9510],"referencedDeclaration":9510,"src":"1600:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1570:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":9478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1668:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1672:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1668:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9477,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"1649:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9481,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"1695:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9482,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"1713:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1695:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1649:83:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9497,"nodeType":"Block","src":"1828:48:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9493,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1849:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771ContextUpgradeable_$9511_$","typeString":"type(contract super ERC2771ContextUpgradeable)"}},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1855:8:26","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"1849:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1849:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":9465,"id":9496,"nodeType":"Return","src":"1842:23:26"}]},"id":9498,"nodeType":"IfStatement","src":"1632:244:26","trueBody":{"id":9492,"nodeType":"Block","src":"1743:79:26","statements":[{"expression":{"baseExpression":{"expression":{"id":9485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1764:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1768:4:26","memberName":"data","nodeType":"MemberAccess","src":"1764:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9487,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"1774:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9488,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"1791:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1774:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1764:47:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":9465,"id":9491,"nodeType":"Return","src":"1757:54:26"}]}}]},"documentation":{"id":9460,"nodeType":"StructuredDocumentation","src":"1163:222:26","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":9500,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1399:8:26","nodeType":"FunctionDefinition","overrides":{"id":9462,"nodeType":"OverrideSpecifier","overrides":[],"src":"1464:8:26"},"parameters":{"id":9461,"nodeType":"ParameterList","parameters":[],"src":"1407:2:26"},"returnParameters":{"id":9465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9500,"src":"1490:14:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9463,"name":"bytes","nodeType":"ElementaryTypeName","src":"1490:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1489:16:26"},"scope":9511,"src":"1390:492:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1516],"body":{"id":9509,"nodeType":"Block","src":"2110:26:26","statements":[{"expression":{"hexValue":"3230","id":9507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2127:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":9506,"id":9508,"nodeType":"Return","src":"2120:9:26"}]},"documentation":{"id":9501,"nodeType":"StructuredDocumentation","src":"1888:92:26","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":9510,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1994:20:26","nodeType":"FunctionDefinition","overrides":{"id":9503,"nodeType":"OverrideSpecifier","overrides":[],"src":"2071:8:26"},"parameters":{"id":9502,"nodeType":"ParameterList","parameters":[],"src":"2014:2:26"},"returnParameters":{"id":9506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9510,"src":"2097:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:9:26"},"scope":9511,"src":"1985:151:26","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":9512,"src":"210:1928:26","usedErrors":[603,606],"usedEvents":[611]}],"src":"32:2107:26"},"id":26},"contracts/rKGEN.sol":{"ast":{"absolutePath":"contracts/rKGEN.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[586],"AccessControlUpgradeable":[362],"ContextUpgradeable":[1517],"ERC20Upgradeable":[1471],"ERC2771ContextUpgradeable":[9511],"EnumerableSet":[9396],"IAccessControlEnumerable":[1795],"IERC20":[2010],"IERC20Errors":[1837],"IERC20Metadata":[2036],"Initializable":[854],"ReentrancyGuardUpgradeable":[1646],"rKGEN":[10472]},"id":10473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9513,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":9514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10473,"sourceUnit":1472,"src":"58:78:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","id":9515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10473,"sourceUnit":587,"src":"137:102:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":9516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10473,"sourceUnit":1647,"src":"240:82:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10473,"sourceUnit":855,"src":"323:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol","file":"./ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol","id":9518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10473,"sourceUnit":9512,"src":"399:66:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9519,"name":"Initializable","nameLocations":["490:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"490:13:27"},"id":9520,"nodeType":"InheritanceSpecifier","src":"490:13:27"},{"baseName":{"id":9521,"name":"ERC20Upgradeable","nameLocations":["509:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"509:16:27"},"id":9522,"nodeType":"InheritanceSpecifier","src":"509:16:27"},{"baseName":{"id":9523,"name":"AccessControlEnumerableUpgradeable","nameLocations":["531:34:27"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"531:34:27"},"id":9524,"nodeType":"InheritanceSpecifier","src":"531:34:27"},{"baseName":{"id":9525,"name":"ReentrancyGuardUpgradeable","nameLocations":["571:26:27"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"571:26:27"},"id":9526,"nodeType":"InheritanceSpecifier","src":"571:26:27"},{"baseName":{"id":9527,"name":"ERC2771ContextUpgradeable","nameLocations":["603:25:27"],"nodeType":"IdentifierPath","referencedDeclaration":9511,"src":"603:25:27"},"id":9528,"nodeType":"InheritanceSpecifier","src":"603:25:27"}],"canonicalName":"rKGEN","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10472,"linearizedBaseContracts":[10472,9511,1646,586,362,1686,5169,1795,1769,1471,1837,2036,2010,1517,854],"name":"rKGEN","nameLocation":"476:5:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":9533,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"659:11:27","nodeType":"VariableDeclaration","scope":10472,"src":"635:62:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"635:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":9531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"683:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":9530,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"673:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"673:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"3a594a1d","id":9538,"mutability":"constant","name":"BURN_VAULT_ROLE","nameLocation":"727:15:27","nodeType":"VariableDeclaration","scope":10472,"src":"703:70:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"703:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4255524e5f5641554c545f524f4c45","id":9536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"755:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb4c1560f0ac783af04187bda6c71d491dee6a63e28b3ad8457b60790f38eeba","typeString":"literal_string \"BURN_VAULT_ROLE\""},"value":"BURN_VAULT_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cb4c1560f0ac783af04187bda6c71d491dee6a63e28b3ad8457b60790f38eeba","typeString":"literal_string \"BURN_VAULT_ROLE\""}],"id":9535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"745:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d11a57ec","id":9543,"mutability":"constant","name":"TREASURY_ROLE","nameLocation":"803:13:27","nodeType":"VariableDeclaration","scope":10472,"src":"779:66:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"779:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"54524541535552595f524f4c45","id":9541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"829:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca9","typeString":"literal_string \"TREASURY_ROLE\""},"value":"TREASURY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca9","typeString":"literal_string \"TREASURY_ROLE\""}],"id":9540,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"819:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"14eeb828","id":9548,"mutability":"constant","name":"WHITELIST_SENDER_ROLE","nameLocation":"875:21:27","nodeType":"VariableDeclaration","scope":10472,"src":"851:82:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"851:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"57484954454c4953545f53454e4445525f524f4c45","id":9546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"909:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d22ed3a112884bd9fd6003b71d02c2a671cf1ddcc8740e9a0a8e3ab3973e344f","typeString":"literal_string \"WHITELIST_SENDER_ROLE\""},"value":"WHITELIST_SENDER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d22ed3a112884bd9fd6003b71d02c2a671cf1ddcc8740e9a0a8e3ab3973e344f","typeString":"literal_string \"WHITELIST_SENDER_ROLE\""}],"id":9545,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"899:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"899:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a8422c2f","id":9553,"mutability":"constant","name":"WHITELIST_RECEIVER_ROLE","nameLocation":"963:23:27","nodeType":"VariableDeclaration","scope":10472,"src":"939:86:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"939:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"57484954454c4953545f52454345495645525f524f4c45","id":9551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"999:25:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_da4d20b686f7404041d4a40bc922508734f59795e8a7394e246602eb8ec5b77b","typeString":"literal_string \"WHITELIST_RECEIVER_ROLE\""},"value":"WHITELIST_RECEIVER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da4d20b686f7404041d4a40bc922508734f59795e8a7394e246602eb8ec5b77b","typeString":"literal_string \"WHITELIST_RECEIVER_ROLE\""}],"id":9550,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"989:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f72c0d8b","id":9558,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"1055:13:27","nodeType":"VariableDeclaration","scope":10472,"src":"1031:66:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1031:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":9556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1081:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":9555,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1071:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1071:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"e8ac6533","id":9560,"mutability":"mutable","name":"nominatedAdmin","nameLocation":"1119:14:27","nodeType":"VariableDeclaration","scope":10472,"src":"1104:29:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9559,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"860838a5","id":9564,"mutability":"mutable","name":"frozenAccounts","nameLocation":"1171:14:27","nodeType":"VariableDeclaration","scope":10472,"src":"1139:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9563,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9561,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1139:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9562,"name":"bool","nodeType":"ElementaryTypeName","src":"1158:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"76b88024","id":9568,"mutability":"mutable","name":"trustedForwarder","nameLocation":"1223:16:27","nodeType":"VariableDeclaration","scope":10472,"src":"1191:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9567,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9565,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1191:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9566,"name":"bool","nodeType":"ElementaryTypeName","src":"1210:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de","id":9574,"name":"MintedToTreasury","nameLocation":"1257:16:27","nodeType":"EventDefinition","parameters":{"id":9573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9570,"indexed":true,"mutability":"mutable","name":"treasury","nameLocation":"1290:8:27","nodeType":"VariableDeclaration","scope":9574,"src":"1274:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9569,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9572,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1308:6:27","nodeType":"VariableDeclaration","scope":9574,"src":"1300:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1273:42:27"},"src":"1251:65:27"},{"anonymous":false,"eventSelector":"27cb0b1f15cf273268c02c4ac770f2121077509fd09f76000f26fef2107c8e39","id":9580,"name":"UpdatedBurnVault","nameLocation":"1327:16:27","nodeType":"EventDefinition","parameters":{"id":9579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9576,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1351:4:27","nodeType":"VariableDeclaration","scope":9580,"src":"1344:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9575,"name":"string","nodeType":"ElementaryTypeName","src":"1344:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9578,"indexed":true,"mutability":"mutable","name":"updatedAddress","nameLocation":"1373:14:27","nodeType":"VariableDeclaration","scope":9580,"src":"1357:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9577,"name":"address","nodeType":"ElementaryTypeName","src":"1357:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1343:45:27"},"src":"1321:68:27"},{"anonymous":false,"eventSelector":"33357bb61b6ce4d9e2a54fd3d9ec5807e7df4bbd6ba3fa1b0860c0a1a39e700a","id":9586,"name":"UpdatedAdmin","nameLocation":"1400:12:27","nodeType":"EventDefinition","parameters":{"id":9585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9582,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1420:4:27","nodeType":"VariableDeclaration","scope":9586,"src":"1413:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9581,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9584,"indexed":true,"mutability":"mutable","name":"addedAdmin","nameLocation":"1442:10:27","nodeType":"VariableDeclaration","scope":9586,"src":"1426:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9583,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1412:41:27"},"src":"1394:60:27"},{"anonymous":false,"eventSelector":"a9c1d417fdb88c493dbab369bd79c043aa4c6c9522a681d9334ba091ede58cd9","id":9592,"name":"NominatedAdminEvent","nameLocation":"1465:19:27","nodeType":"EventDefinition","parameters":{"id":9591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1492:4:27","nodeType":"VariableDeclaration","scope":9592,"src":"1485:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9587,"name":"string","nodeType":"ElementaryTypeName","src":"1485:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9590,"indexed":true,"mutability":"mutable","name":"nominatedAdmin","nameLocation":"1514:14:27","nodeType":"VariableDeclaration","scope":9592,"src":"1498:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9589,"name":"address","nodeType":"ElementaryTypeName","src":"1498:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1484:45:27"},"src":"1459:71:27"},{"anonymous":false,"eventSelector":"6de4157337b92becadb23ac8c53bdcaba13d56eaa4e2350eff3e65c4d1d84c7c","id":9598,"name":"UpdatedMinter","nameLocation":"1541:13:27","nodeType":"EventDefinition","parameters":{"id":9597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9594,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1562:4:27","nodeType":"VariableDeclaration","scope":9598,"src":"1555:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9593,"name":"string","nodeType":"ElementaryTypeName","src":"1555:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9596,"indexed":true,"mutability":"mutable","name":"addedUser","nameLocation":"1584:9:27","nodeType":"VariableDeclaration","scope":9598,"src":"1568:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9595,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1554:40:27"},"src":"1535:60:27"},{"anonymous":false,"eventSelector":"d93a23cfa249287d5dd4d056066c79b1a45bc8608890ea92b4dafa6e874b3fd0","id":9604,"name":"AddedTreasuryAddress","nameLocation":"1606:20:27","nodeType":"EventDefinition","parameters":{"id":9603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9600,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1634:3:27","nodeType":"VariableDeclaration","scope":9604,"src":"1627:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9599,"name":"string","nodeType":"ElementaryTypeName","src":"1627:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9602,"indexed":true,"mutability":"mutable","name":"addedAddress","nameLocation":"1655:12:27","nodeType":"VariableDeclaration","scope":9604,"src":"1639:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9601,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1626:42:27"},"src":"1600:69:27"},{"anonymous":false,"eventSelector":"238be719becf7de7673229da18d51189916a74316ccd29739e8bf3fa30288d87","id":9610,"name":"RemovedTreasuryAddress","nameLocation":"1680:22:27","nodeType":"EventDefinition","parameters":{"id":9609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9606,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1710:3:27","nodeType":"VariableDeclaration","scope":9610,"src":"1703:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9605,"name":"string","nodeType":"ElementaryTypeName","src":"1703:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9608,"indexed":true,"mutability":"mutable","name":"removedAddress","nameLocation":"1731:14:27","nodeType":"VariableDeclaration","scope":9610,"src":"1715:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9607,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1702:44:27"},"src":"1674:73:27"},{"anonymous":false,"eventSelector":"a148f9af0f634918fbaf23b2be442ee99c628242fb2805bf87c08e4be7a1afac","id":9616,"name":"AddedSenderAddress","nameLocation":"1758:18:27","nodeType":"EventDefinition","parameters":{"id":9615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9612,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1784:3:27","nodeType":"VariableDeclaration","scope":9616,"src":"1777:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9611,"name":"string","nodeType":"ElementaryTypeName","src":"1777:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9614,"indexed":true,"mutability":"mutable","name":"addedAddress","nameLocation":"1805:12:27","nodeType":"VariableDeclaration","scope":9616,"src":"1789:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9613,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1776:42:27"},"src":"1752:67:27"},{"anonymous":false,"eventSelector":"0e178bf7cc940ed3c4d14c1206db670ab5b94749d88646dc197f874a32372ea5","id":9622,"name":"RemovedSenderAddress","nameLocation":"1830:20:27","nodeType":"EventDefinition","parameters":{"id":9621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1858:3:27","nodeType":"VariableDeclaration","scope":9622,"src":"1851:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9617,"name":"string","nodeType":"ElementaryTypeName","src":"1851:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9620,"indexed":true,"mutability":"mutable","name":"removedAddress","nameLocation":"1879:14:27","nodeType":"VariableDeclaration","scope":9622,"src":"1863:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9619,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1850:44:27"},"src":"1824:71:27"},{"anonymous":false,"eventSelector":"fe6d2d6f86f1b4f5f6d5833a27d9eb52bba0f8aad51eb089023c6a4dcfd21a8f","id":9628,"name":"AddedReceiverAddress","nameLocation":"1906:20:27","nodeType":"EventDefinition","parameters":{"id":9627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9624,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1934:3:27","nodeType":"VariableDeclaration","scope":9628,"src":"1927:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9623,"name":"string","nodeType":"ElementaryTypeName","src":"1927:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9626,"indexed":true,"mutability":"mutable","name":"addedAddress","nameLocation":"1955:12:27","nodeType":"VariableDeclaration","scope":9628,"src":"1939:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9625,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:42:27"},"src":"1900:69:27"},{"anonymous":false,"eventSelector":"aaf02ba1bcb5b6c4b56e5b51c64ffb18bd8ed3760523f4d845a3c0cc0a859244","id":9634,"name":"RemovedReceiverAddress","nameLocation":"1980:22:27","nodeType":"EventDefinition","parameters":{"id":9633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9630,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"2010:3:27","nodeType":"VariableDeclaration","scope":9634,"src":"2003:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9629,"name":"string","nodeType":"ElementaryTypeName","src":"2003:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9632,"indexed":true,"mutability":"mutable","name":"removedAddress","nameLocation":"2031:14:27","nodeType":"VariableDeclaration","scope":9634,"src":"2015:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9631,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2002:44:27"},"src":"1974:73:27"},{"anonymous":false,"eventSelector":"4f2a367e694e71282f29ab5eaa04c4c0be45ac5bf2ca74fb67068b98bdc2887d","id":9638,"name":"AccountFrozen","nameLocation":"2058:13:27","nodeType":"EventDefinition","parameters":{"id":9637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9636,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2088:7:27","nodeType":"VariableDeclaration","scope":9638,"src":"2072:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9635,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2071:25:27"},"src":"2052:45:27"},{"anonymous":false,"eventSelector":"f915cd9fe234de6e8d3afe7bf2388d35b2b6d48e8c629a24602019bde79c213a","id":9642,"name":"AccountUnfrozen","nameLocation":"2108:15:27","nodeType":"EventDefinition","parameters":{"id":9641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9640,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2140:7:27","nodeType":"VariableDeclaration","scope":9642,"src":"2124:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9639,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2123:25:27"},"src":"2102:47:27"},{"errorSelector":"23369fa6","id":9644,"name":"AlreadyExists","nameLocation":"2161:13:27","nodeType":"ErrorDefinition","parameters":{"id":9643,"nodeType":"ParameterList","parameters":[],"src":"2174:2:27"},"src":"2155:22:27"},{"errorSelector":"3fa339ab","id":9646,"name":"NotTreasuryAddress","nameLocation":"2188:18:27","nodeType":"ErrorDefinition","parameters":{"id":9645,"nodeType":"ParameterList","parameters":[],"src":"2206:2:27"},"src":"2182:27:27"},{"errorSelector":"26ad1028","id":9648,"name":"NotWhitelistSender","nameLocation":"2220:18:27","nodeType":"ErrorDefinition","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[],"src":"2238:2:27"},"src":"2214:27:27"},{"errorSelector":"b78c983f","id":9650,"name":"NotWhitelistReceiver","nameLocation":"2252:20:27","nodeType":"ErrorDefinition","parameters":{"id":9649,"nodeType":"ParameterList","parameters":[],"src":"2272:2:27"},"src":"2246:29:27"},{"errorSelector":"47556579","id":9652,"name":"OnlyAdmin","nameLocation":"2286:9:27","nodeType":"ErrorDefinition","parameters":{"id":9651,"nodeType":"ParameterList","parameters":[],"src":"2295:2:27"},"src":"2280:18:27"},{"errorSelector":"7bfa4b9f","id":9654,"name":"NotAdmin","nameLocation":"2309:8:27","nodeType":"ErrorDefinition","parameters":{"id":9653,"nodeType":"ParameterList","parameters":[],"src":"2317:2:27"},"src":"2303:17:27"},{"errorSelector":"c5cbfacc","id":9656,"name":"CannotDeleteTreasuryAddress","nameLocation":"2331:27:27","nodeType":"ErrorDefinition","parameters":{"id":9655,"nodeType":"ParameterList","parameters":[],"src":"2358:2:27"},"src":"2325:36:27"},{"errorSelector":"0ec0da69","id":9658,"name":"InvalidReceiverOrSender","nameLocation":"2372:23:27","nodeType":"ErrorDefinition","parameters":{"id":9657,"nodeType":"ParameterList","parameters":[],"src":"2395:2:27"},"src":"2366:32:27"},{"errorSelector":"fa905faa","id":9660,"name":"NotBurnVault","nameLocation":"2409:12:27","nodeType":"ErrorDefinition","parameters":{"id":9659,"nodeType":"ParameterList","parameters":[],"src":"2421:2:27"},"src":"2403:21:27"},{"errorSelector":"6e5ec59f","id":9662,"name":"NotValidAddress","nameLocation":"2435:15:27","nodeType":"ErrorDefinition","parameters":{"id":9661,"nodeType":"ParameterList","parameters":[],"src":"2450:2:27"},"src":"2429:24:27"},{"errorSelector":"30cd7471","id":9664,"name":"NotOwner","nameLocation":"2464:8:27","nodeType":"ErrorDefinition","parameters":{"id":9663,"nodeType":"ParameterList","parameters":[],"src":"2472:2:27"},"src":"2458:17:27"},{"errorSelector":"da7557bc","id":9666,"name":"NoPending","nameLocation":"2486:9:27","nodeType":"ErrorDefinition","parameters":{"id":9665,"nodeType":"ParameterList","parameters":[],"src":"2495:2:27"},"src":"2480:18:27"},{"errorSelector":"2c5211c6","id":9668,"name":"InvalidAmount","nameLocation":"2509:13:27","nodeType":"ErrorDefinition","parameters":{"id":9667,"nodeType":"ParameterList","parameters":[],"src":"2522:2:27"},"src":"2503:22:27"},{"body":{"id":9675,"nodeType":"Block","src":"2598:39:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9672,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2608:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9674,"nodeType":"ExpressionStatement","src":"2608:22:27"}]},"documentation":{"id":9669,"nodeType":"StructuredDocumentation","src":"2531:48:27","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9676,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9670,"nodeType":"ParameterList","parameters":[],"src":"2595:2:27"},"returnParameters":{"id":9671,"nodeType":"ParameterList","parameters":[],"src":"2598:0:27"},"scope":10472,"src":"2584:53:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9724,"nodeType":"Block","src":"2704:437:27","statements":[{"expression":{"arguments":[{"hexValue":"724b47454e","id":9684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2727:7:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_84e5a4830c43326413a810a3fc3c3f4edb2e654774142d45ae30e2826906928d","typeString":"literal_string \"rKGEN\""},"value":"rKGEN"},{"hexValue":"724b47454e","id":9685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2736:7:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_84e5a4830c43326413a810a3fc3c3f4edb2e654774142d45ae30e2826906928d","typeString":"literal_string \"rKGEN\""},"value":"rKGEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_84e5a4830c43326413a810a3fc3c3f4edb2e654774142d45ae30e2826906928d","typeString":"literal_string \"rKGEN\""},{"typeIdentifier":"t_stringliteral_84e5a4830c43326413a810a3fc3c3f4edb2e654774142d45ae30e2826906928d","typeString":"literal_string \"rKGEN\""}],"id":9683,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2714:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9687,"nodeType":"ExpressionStatement","src":"2714:30:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9688,"name":"__AccessControlEnumerable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2754:30:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9690,"nodeType":"ExpressionStatement","src":"2754:32:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9691,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2796:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2796:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9693,"nodeType":"ExpressionStatement","src":"2796:24:27"},{"expression":{"arguments":[{"id":9695,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2842:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9696,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"2862:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9694,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"2831:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9698,"nodeType":"ExpressionStatement","src":"2831:44:27"},{"expression":{"arguments":[{"id":9700,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"2896:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9701,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"2909:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9699,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"2885:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9703,"nodeType":"ExpressionStatement","src":"2885:37:27"},{"expression":{"arguments":[{"id":9705,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"2943:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9706,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"2960:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9704,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"2932:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9708,"nodeType":"ExpressionStatement","src":"2932:41:27"},{"expression":{"arguments":[{"id":9710,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"2994:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9711,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"3009:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9709,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"2983:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2983:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9713,"nodeType":"ExpressionStatement","src":"2983:39:27"},{"expression":{"arguments":[{"id":9715,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"3091:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430305f3030305f303030","id":9716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3105:11:27","typeDescriptions":{"typeIdentifier":"t_rational_400000000_by_1","typeString":"int_const 400000000"},"value":"400_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3119:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9718,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[9734],"referencedDeclaration":9734,"src":"3123:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint8_$","typeString":"function () pure returns (uint8)"}},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3119:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3105:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9714,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3085:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9723,"nodeType":"ExpressionStatement","src":"3085:49:27"}]},"functionSelector":"c4d66de8","id":9725,"implemented":true,"kind":"function","modifiers":[{"id":9681,"kind":"modifierInvocation","modifierName":{"id":9680,"name":"initializer","nameLocations":["2692:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"2692:11:27"},"nodeType":"ModifierInvocation","src":"2692:11:27"}],"name":"initialize","nameLocation":"2652:10:27","nodeType":"FunctionDefinition","parameters":{"id":9679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9678,"mutability":"mutable","name":"initialAdmin","nameLocation":"2671:12:27","nodeType":"VariableDeclaration","scope":9725,"src":"2663:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9677,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2662:22:27"},"returnParameters":{"id":9682,"nodeType":"ParameterList","parameters":[],"src":"2704:0:27"},"scope":10472,"src":"2643:498:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[991],"body":{"id":9733,"nodeType":"Block","src":"3204:25:27","statements":[{"expression":{"hexValue":"38","id":9731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"functionReturnParameters":9730,"id":9732,"nodeType":"Return","src":"3214:8:27"}]},"functionSelector":"313ce567","id":9734,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3156:8:27","nodeType":"FunctionDefinition","overrides":{"id":9727,"nodeType":"OverrideSpecifier","overrides":[],"src":"3179:8:27"},"parameters":{"id":9726,"nodeType":"ParameterList","parameters":[],"src":"3164:2:27"},"returnParameters":{"id":9730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9734,"src":"3197:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9728,"name":"uint8","nodeType":"ElementaryTypeName","src":"3197:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3196:7:27"},"scope":10472,"src":"3147:82:27","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":9747,"nodeType":"Block","src":"3341:67:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"3355:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3365:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3355:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9745,"nodeType":"IfStatement","src":"3351:39:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9742,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9668,"src":"3375:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9744,"nodeType":"RevertStatement","src":"3368:22:27"}},{"id":9746,"nodeType":"PlaceholderStatement","src":"3400:1:27"}]},"documentation":{"id":9735,"nodeType":"StructuredDocumentation","src":"3235:64:27","text":" @dev Modifier to check if the amount is valid"},"id":9748,"name":"validAmount","nameLocation":"3313:11:27","nodeType":"ModifierDefinition","parameters":{"id":9738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9737,"mutability":"mutable","name":"amount","nameLocation":"3333:6:27","nodeType":"VariableDeclaration","scope":9748,"src":"3325:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9736,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3324:16:27"},"src":"3304:104:27","virtual":false,"visibility":"internal"},{"body":{"id":9764,"nodeType":"Block","src":"3520:76:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9753,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9751,"src":"3534:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3542:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9754,"name":"address","nodeType":"ElementaryTypeName","src":"3542:7:27","typeDescriptions":{}}},"id":9757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3534:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9762,"nodeType":"IfStatement","src":"3530:48:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9759,"name":"NotValidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9662,"src":"3561:15:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9761,"nodeType":"RevertStatement","src":"3554:24:27"}},{"id":9763,"nodeType":"PlaceholderStatement","src":"3588:1:27"}]},"documentation":{"id":9749,"nodeType":"StructuredDocumentation","src":"3414:65:27","text":" @dev Modifier to check if the address is valid"},"id":9765,"name":"validAddress","nameLocation":"3493:12:27","nodeType":"ModifierDefinition","parameters":{"id":9752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9751,"mutability":"mutable","name":"addr","nameLocation":"3514:4:27","nodeType":"VariableDeclaration","scope":9765,"src":"3506:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9750,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3505:14:27"},"src":"3484:112:27","virtual":false,"visibility":"internal"},{"body":{"id":9779,"nodeType":"Block","src":"3713:82:27","statements":[{"expression":{"arguments":[{"id":9774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3731:24:27","subExpression":{"baseExpression":{"id":9771,"name":"frozenAccounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9564,"src":"3732:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9773,"indexExpression":{"id":9772,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"3747:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4163636f756e742069732066726f7a656e","id":9775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3757:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094","typeString":"literal_string \"Account is frozen\""},"value":"Account is frozen"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094","typeString":"literal_string \"Account is frozen\""}],"id":9770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3723:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9777,"nodeType":"ExpressionStatement","src":"3723:54:27"},{"id":9778,"nodeType":"PlaceholderStatement","src":"3787:1:27"}]},"documentation":{"id":9766,"nodeType":"StructuredDocumentation","src":"3602:70:27","text":" @dev Modifier to check if the account is not frozen"},"id":9780,"name":"notFrozen","nameLocation":"3686:9:27","nodeType":"ModifierDefinition","parameters":{"id":9769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9768,"mutability":"mutable","name":"account","nameLocation":"3704:7:27","nodeType":"VariableDeclaration","scope":9780,"src":"3696:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9767,"name":"address","nodeType":"ElementaryTypeName","src":"3696:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3695:17:27"},"src":"3677:118:27","virtual":false,"visibility":"internal"},{"body":{"id":9808,"nodeType":"Block","src":"3919:247:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9785,"src":"3937:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9783,"src":"3943:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3937:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":9791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3949:25:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":9787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3929:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3929:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9793,"nodeType":"ExpressionStatement","src":"3929:46:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9796,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"4014:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9797,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9783,"src":"4037:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9795,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4006:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4006:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":9800,"name":"WHITELIST_RECEIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"4068:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9785,"src":"4093:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9799,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4060:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4006:90:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656e646572206f72207265636569766572","id":9804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4110:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_60025fe8a16034c344f99fb27745f11571f566c0ad6bead632c46a6fe7ab4e06","typeString":"literal_string \"Invalid sender or receiver\""},"value":"Invalid sender or receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60025fe8a16034c344f99fb27745f11571f566c0ad6bead632c46a6fe7ab4e06","typeString":"literal_string \"Invalid sender or receiver\""}],"id":9794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3985:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:163:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9806,"nodeType":"ExpressionStatement","src":"3985:163:27"},{"id":9807,"nodeType":"PlaceholderStatement","src":"4158:1:27"}]},"documentation":{"id":9781,"nodeType":"StructuredDocumentation","src":"3801:58:27","text":" @dev Modifier to check whitelist status"},"id":9809,"name":"whitelistedTransfer","nameLocation":"3873:19:27","nodeType":"ModifierDefinition","parameters":{"id":9786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9783,"mutability":"mutable","name":"from","nameLocation":"3901:4:27","nodeType":"VariableDeclaration","scope":9809,"src":"3893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9782,"name":"address","nodeType":"ElementaryTypeName","src":"3893:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9785,"mutability":"mutable","name":"to","nameLocation":"3915:2:27","nodeType":"VariableDeclaration","scope":9809,"src":"3907:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9784,"name":"address","nodeType":"ElementaryTypeName","src":"3907:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3892:26:27"},"src":"3864:302:27","virtual":false,"visibility":"internal"},{"baseFunctions":[1051],"body":{"id":9844,"nodeType":"Block","src":"4521:50:27","statements":[{"expression":{"arguments":[{"id":9840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"4553:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"4557:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9838,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4538:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_rKGEN_$10472_$","typeString":"type(contract super rKGEN)"}},"id":9839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4544:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"4538:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4538:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9837,"id":9843,"nodeType":"Return","src":"4531:33:27"}]},"documentation":{"id":9810,"nodeType":"StructuredDocumentation","src":"4172:86:27","text":" @dev Override transfer function to implement whitelist restrictions"},"functionSelector":"a9059cbb","id":9845,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"4364:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9819,"kind":"modifierInvocation","modifierName":{"id":9817,"name":"validAmount","nameLocations":["4352:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9748,"src":"4352:11:27"},"nodeType":"ModifierInvocation","src":"4352:19:27"},{"arguments":[{"id":9821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"4393:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9822,"kind":"modifierInvocation","modifierName":{"id":9820,"name":"validAddress","nameLocations":["4380:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"4380:12:27"},"nodeType":"ModifierInvocation","src":"4380:16:27"},{"arguments":[{"expression":{"id":9824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4415:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4419:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4415:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9826,"kind":"modifierInvocation","modifierName":{"id":9823,"name":"notFrozen","nameLocations":["4405:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9780,"src":"4405:9:27"},"nodeType":"ModifierInvocation","src":"4405:21:27"},{"arguments":[{"id":9828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"4445:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9829,"kind":"modifierInvocation","modifierName":{"id":9827,"name":"notFrozen","nameLocations":["4435:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9780,"src":"4435:9:27"},"nodeType":"ModifierInvocation","src":"4435:13:27"},{"arguments":[{"expression":{"id":9831,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4477:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4481:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4477:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9812,"src":"4489:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9834,"kind":"modifierInvocation","modifierName":{"id":9830,"name":"whitelistedTransfer","nameLocations":["4457:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":9809,"src":"4457:19:27"},"nodeType":"ModifierInvocation","src":"4457:35:27"}],"name":"transfer","nameLocation":"4272:8:27","nodeType":"FunctionDefinition","overrides":{"id":9816,"nodeType":"OverrideSpecifier","overrides":[],"src":"4334:8:27"},"parameters":{"id":9815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9812,"mutability":"mutable","name":"to","nameLocation":"4289:2:27","nodeType":"VariableDeclaration","scope":9845,"src":"4281:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9811,"name":"address","nodeType":"ElementaryTypeName","src":"4281:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9814,"mutability":"mutable","name":"amount","nameLocation":"4301:6:27","nodeType":"VariableDeclaration","scope":9845,"src":"4293:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9813,"name":"uint256","nodeType":"ElementaryTypeName","src":"4293:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4280:28:27"},"returnParameters":{"id":9837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9845,"src":"4510:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9835,"name":"bool","nodeType":"ElementaryTypeName","src":"4510:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4509:6:27"},"scope":10472,"src":"4263:308:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1131],"body":{"id":9881,"nodeType":"Block","src":"4932:60:27","statements":[{"expression":{"arguments":[{"id":9876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"4968:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"4974:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9878,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9852,"src":"4978:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9874,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4949:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_rKGEN_$10472_$","typeString":"type(contract super rKGEN)"}},"id":9875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4955:12:27","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"4949:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4949:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9873,"id":9880,"nodeType":"Return","src":"4942:43:27"}]},"documentation":{"id":9846,"nodeType":"StructuredDocumentation","src":"4577:90:27","text":" @dev Override transferFrom function to implement whitelist restrictions"},"functionSelector":"23b872dd","id":9882,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9852,"src":"4788:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9857,"kind":"modifierInvocation","modifierName":{"id":9855,"name":"validAmount","nameLocations":["4776:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9748,"src":"4776:11:27"},"nodeType":"ModifierInvocation","src":"4776:19:27"},{"arguments":[{"id":9859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"4817:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9860,"kind":"modifierInvocation","modifierName":{"id":9858,"name":"validAddress","nameLocations":["4804:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"4804:12:27"},"nodeType":"ModifierInvocation","src":"4804:16:27"},{"arguments":[{"id":9862,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"4839:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9863,"kind":"modifierInvocation","modifierName":{"id":9861,"name":"notFrozen","nameLocations":["4829:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9780,"src":"4829:9:27"},"nodeType":"ModifierInvocation","src":"4829:15:27"},{"arguments":[{"id":9865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"4863:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9866,"kind":"modifierInvocation","modifierName":{"id":9864,"name":"notFrozen","nameLocations":["4853:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9780,"src":"4853:9:27"},"nodeType":"ModifierInvocation","src":"4853:13:27"},{"arguments":[{"id":9868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"4895:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9869,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"4901:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9870,"kind":"modifierInvocation","modifierName":{"id":9867,"name":"whitelistedTransfer","nameLocations":["4875:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":9809,"src":"4875:19:27"},"nodeType":"ModifierInvocation","src":"4875:29:27"}],"name":"transferFrom","nameLocation":"4681:12:27","nodeType":"FunctionDefinition","overrides":{"id":9854,"nodeType":"OverrideSpecifier","overrides":[],"src":"4759:8:27"},"parameters":{"id":9853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9848,"mutability":"mutable","name":"from","nameLocation":"4702:4:27","nodeType":"VariableDeclaration","scope":9882,"src":"4694:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9847,"name":"address","nodeType":"ElementaryTypeName","src":"4694:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9850,"mutability":"mutable","name":"to","nameLocation":"4716:2:27","nodeType":"VariableDeclaration","scope":9882,"src":"4708:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9849,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9852,"mutability":"mutable","name":"amount","nameLocation":"4728:6:27","nodeType":"VariableDeclaration","scope":9882,"src":"4720:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4693:42:27"},"returnParameters":{"id":9873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9882,"src":"4922:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9871,"name":"bool","nodeType":"ElementaryTypeName","src":"4922:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4921:6:27"},"scope":10472,"src":"4672:320:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9917,"nodeType":"Block","src":"5206:148:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":9901,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"5232:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9902,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"5247:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9900,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"5224:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612074726561737572792061646472657373","id":9904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5252:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1606976bca4abf9103ed084b42233e8a5473021f32df1896688702b884a8ec56","typeString":"literal_string \"Not a treasury address\""},"value":"Not a treasury address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1606976bca4abf9103ed084b42233e8a5473021f32df1896688702b884a8ec56","typeString":"literal_string \"Not a treasury address\""}],"id":9899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5216:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5216:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9906,"nodeType":"ExpressionStatement","src":"5216:61:27"},{"expression":{"arguments":[{"id":9908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"5293:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"5297:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9907,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5287:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5287:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9911,"nodeType":"ExpressionStatement","src":"5287:17:27"},{"eventCall":{"arguments":[{"id":9913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"5336:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"5340:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9912,"name":"MintedToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"5319:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9916,"nodeType":"EmitStatement","src":"5314:33:27"}]},"documentation":{"id":9883,"nodeType":"StructuredDocumentation","src":"4998:57:27","text":" @dev Mint tokens to a treasury address"},"functionSelector":"40c10f19","id":9918,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9890,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"5136:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9891,"kind":"modifierInvocation","modifierName":{"id":9889,"name":"onlyRole","nameLocations":["5127:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5127:8:27"},"nodeType":"ModifierInvocation","src":"5127:21:27"},{"arguments":[{"id":9893,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"5169:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9894,"kind":"modifierInvocation","modifierName":{"id":9892,"name":"validAmount","nameLocations":["5157:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9748,"src":"5157:11:27"},"nodeType":"ModifierInvocation","src":"5157:19:27"},{"arguments":[{"id":9896,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"5198:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9897,"kind":"modifierInvocation","modifierName":{"id":9895,"name":"validAddress","nameLocations":["5185:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"5185:12:27"},"nodeType":"ModifierInvocation","src":"5185:16:27"}],"name":"mint","nameLocation":"5069:4:27","nodeType":"FunctionDefinition","parameters":{"id":9888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9885,"mutability":"mutable","name":"to","nameLocation":"5082:2:27","nodeType":"VariableDeclaration","scope":9918,"src":"5074:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9884,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9887,"mutability":"mutable","name":"amount","nameLocation":"5094:6:27","nodeType":"VariableDeclaration","scope":9918,"src":"5086:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9886,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5073:28:27"},"returnParameters":{"id":9898,"nodeType":"ParameterList","parameters":[],"src":"5206:0:27"},"scope":10472,"src":"5060:294:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9940,"nodeType":"Block","src":"5574:36:27","statements":[{"expression":{"arguments":[{"id":9936,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"5590:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9937,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9923,"src":"5596:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9935,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"5584:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5584:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9939,"nodeType":"ExpressionStatement","src":"5584:19:27"}]},"documentation":{"id":9919,"nodeType":"StructuredDocumentation","src":"5360:55:27","text":" @dev Burn tokens from the burn vault"},"functionSelector":"9dc29fac","id":9941,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9926,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"5498:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9927,"kind":"modifierInvocation","modifierName":{"id":9925,"name":"onlyRole","nameLocations":["5489:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5489:8:27"},"nodeType":"ModifierInvocation","src":"5489:25:27"},{"arguments":[{"id":9929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9923,"src":"5535:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9930,"kind":"modifierInvocation","modifierName":{"id":9928,"name":"validAmount","nameLocations":["5523:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9748,"src":"5523:11:27"},"nodeType":"ModifierInvocation","src":"5523:19:27"},{"arguments":[{"id":9932,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"5564:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9933,"kind":"modifierInvocation","modifierName":{"id":9931,"name":"validAddress","nameLocations":["5551:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"5551:12:27"},"nodeType":"ModifierInvocation","src":"5551:18:27"}],"name":"burn","nameLocation":"5429:4:27","nodeType":"FunctionDefinition","parameters":{"id":9924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9921,"mutability":"mutable","name":"from","nameLocation":"5442:4:27","nodeType":"VariableDeclaration","scope":9941,"src":"5434:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9920,"name":"address","nodeType":"ElementaryTypeName","src":"5434:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9923,"mutability":"mutable","name":"amount","nameLocation":"5456:6:27","nodeType":"VariableDeclaration","scope":9941,"src":"5448:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5433:30:27"},"returnParameters":{"id":9934,"nodeType":"ParameterList","parameters":[],"src":"5574:0:27"},"scope":10472,"src":"5420:190:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9963,"nodeType":"Block","src":"5790:84:27","statements":[{"expression":{"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9953,"name":"frozenAccounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9564,"src":"5800:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9955,"indexExpression":{"id":9954,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9944,"src":"5815:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5800:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5826:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5800:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9958,"nodeType":"ExpressionStatement","src":"5800:30:27"},{"eventCall":{"arguments":[{"id":9960,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9944,"src":"5859:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9959,"name":"AccountFrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9638,"src":"5845:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5845:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9962,"nodeType":"EmitStatement","src":"5840:27:27"}]},"documentation":{"id":9942,"nodeType":"StructuredDocumentation","src":"5616:41:27","text":" @dev Freeze an account"},"functionSelector":"f26c159f","id":9964,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9947,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"5736:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9948,"kind":"modifierInvocation","modifierName":{"id":9946,"name":"onlyRole","nameLocations":["5727:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5727:8:27"},"nodeType":"ModifierInvocation","src":"5727:28:27"},{"arguments":[{"id":9950,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9944,"src":"5777:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9951,"kind":"modifierInvocation","modifierName":{"id":9949,"name":"validAddress","nameLocations":["5764:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"5764:12:27"},"nodeType":"ModifierInvocation","src":"5764:21:27"}],"name":"freezeAccount","nameLocation":"5671:13:27","nodeType":"FunctionDefinition","parameters":{"id":9945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9944,"mutability":"mutable","name":"account","nameLocation":"5693:7:27","nodeType":"VariableDeclaration","scope":9964,"src":"5685:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9943,"name":"address","nodeType":"ElementaryTypeName","src":"5685:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5684:17:27"},"returnParameters":{"id":9952,"nodeType":"ParameterList","parameters":[],"src":"5790:0:27"},"scope":10472,"src":"5662:212:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9986,"nodeType":"Block","src":"6058:87:27","statements":[{"expression":{"id":9980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9976,"name":"frozenAccounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9564,"src":"6068:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9978,"indexExpression":{"id":9977,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"6083:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6068:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9981,"nodeType":"ExpressionStatement","src":"6068:31:27"},{"eventCall":{"arguments":[{"id":9983,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"6130:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9982,"name":"AccountUnfrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9642,"src":"6114:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6114:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9985,"nodeType":"EmitStatement","src":"6109:29:27"}]},"documentation":{"id":9965,"nodeType":"StructuredDocumentation","src":"5880:43:27","text":" @dev Unfreeze an account"},"functionSelector":"788649ea","id":9987,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9970,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6004:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9971,"kind":"modifierInvocation","modifierName":{"id":9969,"name":"onlyRole","nameLocations":["5995:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5995:8:27"},"nodeType":"ModifierInvocation","src":"5995:28:27"},{"arguments":[{"id":9973,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"6045:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9974,"kind":"modifierInvocation","modifierName":{"id":9972,"name":"validAddress","nameLocations":["6032:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"6032:12:27"},"nodeType":"ModifierInvocation","src":"6032:21:27"}],"name":"unfreezeAccount","nameLocation":"5937:15:27","nodeType":"FunctionDefinition","parameters":{"id":9968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9967,"mutability":"mutable","name":"account","nameLocation":"5961:7:27","nodeType":"VariableDeclaration","scope":9987,"src":"5953:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9966,"name":"address","nodeType":"ElementaryTypeName","src":"5953:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5952:17:27"},"returnParameters":{"id":9975,"nodeType":"ParameterList","parameters":[],"src":"6058:0:27"},"scope":10472,"src":"5928:217:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10016,"nodeType":"Block","src":"6330:213:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10000,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9990,"src":"6348:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":10001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6360:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6364:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6360:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6348:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206e6f6d696e6174652073656c66","id":10004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6372:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_98412e28c30dd0c81883dad8f533a5fc3f6afc2c2ff2ed45e97513d9402cb97d","typeString":"literal_string \"Cannot nominate self\""},"value":"Cannot nominate self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98412e28c30dd0c81883dad8f533a5fc3f6afc2c2ff2ed45e97513d9402cb97d","typeString":"literal_string \"Cannot nominate self\""}],"id":9999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6340:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10006,"nodeType":"ExpressionStatement","src":"6340:55:27"},{"expression":{"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10007,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"6405:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10008,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9990,"src":"6422:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6405:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10010,"nodeType":"ExpressionStatement","src":"6405:25:27"},{"eventCall":{"arguments":[{"hexValue":"4e65772041646d696e204e6f6d696e617465642c204e6f77206e65772061646d696e206e65656420746f206163636570742074686520726f6c65","id":10012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6465:60:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_08de87ca866785396b4db24ad7cd371b3cd35b0ee04781a9ea47f5023c81fb31","typeString":"literal_string \"New Admin Nominated, Now new admin need to accept the role\""},"value":"New Admin Nominated, Now new admin need to accept the role"},{"id":10013,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9990,"src":"6527:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_08de87ca866785396b4db24ad7cd371b3cd35b0ee04781a9ea47f5023c81fb31","typeString":"literal_string \"New Admin Nominated, Now new admin need to accept the role\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10011,"name":"NominatedAdminEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"6445:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:91:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10015,"nodeType":"EmitStatement","src":"6440:96:27"}]},"documentation":{"id":9988,"nodeType":"StructuredDocumentation","src":"6151:44:27","text":" @dev Nominate a new admin"},"functionSelector":"cd5ad4c5","id":10017,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9993,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6275:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9994,"kind":"modifierInvocation","modifierName":{"id":9992,"name":"onlyRole","nameLocations":["6266:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6266:8:27"},"nodeType":"ModifierInvocation","src":"6266:28:27"},{"arguments":[{"id":9996,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9990,"src":"6316:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9997,"kind":"modifierInvocation","modifierName":{"id":9995,"name":"validAddress","nameLocations":["6303:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"6303:12:27"},"nodeType":"ModifierInvocation","src":"6303:22:27"}],"name":"nominateAdmin","nameLocation":"6209:13:27","nodeType":"FunctionDefinition","parameters":{"id":9991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9990,"mutability":"mutable","name":"newAdmin","nameLocation":"6231:8:27","nodeType":"VariableDeclaration","scope":10017,"src":"6223:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9989,"name":"address","nodeType":"ElementaryTypeName","src":"6223:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6222:18:27"},"returnParameters":{"id":9998,"nodeType":"ParameterList","parameters":[],"src":"6330:0:27"},"scope":10472,"src":"6200:343:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10082,"nodeType":"Block","src":"6676:517:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10026,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"6694:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6712:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6716:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6712:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6694:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206e6f6d696e61746564","id":10030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6724:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d835f9bafafc594c77658738155ae0e7f00fb1f12a6421deb992433937d83b74","typeString":"literal_string \"Not nominated\""},"value":"Not nominated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d835f9bafafc594c77658738155ae0e7f00fb1f12a6421deb992433937d83b74","typeString":"literal_string \"Not nominated\""}],"id":10025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6686:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6686:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10032,"nodeType":"ExpressionStatement","src":"6686:54:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10034,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"6758:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6784:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10035,"name":"address","nodeType":"ElementaryTypeName","src":"6776:7:27","typeDescriptions":{}}},"id":10038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6776:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6758:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e67206e6f6d696e6174696f6e","id":10040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6788:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f150a6193dc925490f18a478495ba2387b38e614c5c2039387a5d1078f56c5db","typeString":"literal_string \"No pending nomination\""},"value":"No pending nomination"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f150a6193dc925490f18a478495ba2387b38e614c5c2039387a5d1078f56c5db","typeString":"literal_string \"No pending nomination\""}],"id":10033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6750:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10042,"nodeType":"ExpressionStatement","src":"6750:62:27"},{"assignments":[10044],"declarations":[{"constant":false,"id":10044,"mutability":"mutable","name":"oldAdmin","nameLocation":"6880:8:27","nodeType":"VariableDeclaration","scope":10082,"src":"6872:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10043,"name":"address","nodeType":"ElementaryTypeName","src":"6872:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10049,"initialValue":{"arguments":[{"id":10046,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6905:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":10047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6925:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10045,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6891:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":10048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6891:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6872:55:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10050,"name":"oldAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10044,"src":"6941:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6961:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6953:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10051,"name":"address","nodeType":"ElementaryTypeName","src":"6953:7:27","typeDescriptions":{}}},"id":10054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6953:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6941:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10062,"nodeType":"IfStatement","src":"6937:94:27","trueBody":{"id":10061,"nodeType":"Block","src":"6965:66:27","statements":[{"expression":{"arguments":[{"id":10057,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6991:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10058,"name":"oldAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10044,"src":"7011:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10056,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"6979:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6979:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10060,"nodeType":"ExpressionStatement","src":"6979:41:27"}]}},{"expression":{"arguments":[{"id":10064,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"7060:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7080:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7084:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7080:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10063,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"7049:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7049:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10068,"nodeType":"ExpressionStatement","src":"7049:42:27"},{"expression":{"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10069,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"7101:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":10072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7126:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7118:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10070,"name":"address","nodeType":"ElementaryTypeName","src":"7118:7:27","typeDescriptions":{}}},"id":10073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7118:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7101:27:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10075,"nodeType":"ExpressionStatement","src":"7101:27:27"},{"eventCall":{"arguments":[{"hexValue":"4e65772041646d696e204164646564","id":10077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7156:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_960f4b71dd6f99169c4f83e15f5d7adab2efe25ef7286f80dfb2c3a92a31387a","typeString":"literal_string \"New Admin Added\""},"value":"New Admin Added"},{"expression":{"id":10078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7175:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7179:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7175:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_960f4b71dd6f99169c4f83e15f5d7adab2efe25ef7286f80dfb2c3a92a31387a","typeString":"literal_string \"New Admin Added\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10076,"name":"UpdatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"7143:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7143:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10081,"nodeType":"EmitStatement","src":"7138:48:27"}]},"documentation":{"id":10018,"nodeType":"StructuredDocumentation","src":"6549:41:27","text":" @dev Accept admin role"},"functionSelector":"8c3d7301","id":10083,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":10021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6660:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6664:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6660:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10023,"kind":"modifierInvocation","modifierName":{"id":10020,"name":"validAddress","nameLocations":["6647:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"6647:12:27"},"nodeType":"ModifierInvocation","src":"6647:24:27"}],"name":"acceptAdminRole","nameLocation":"6604:15:27","nodeType":"FunctionDefinition","parameters":{"id":10019,"nodeType":"ParameterList","parameters":[],"src":"6619:2:27"},"returnParameters":{"id":10024,"nodeType":"ParameterList","parameters":[],"src":"6676:0:27"},"scope":10472,"src":"6595:598:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10134,"nodeType":"Block","src":"7380:390:27","statements":[{"expression":{"arguments":[{"id":10100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7398:32:27","subExpression":{"arguments":[{"id":10097,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"7407:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10098,"name":"newMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"7420:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10096,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7399:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206d696e746572","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7432:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c4f849172add0ee9051b6c29f3e21501e3cdfa77d3efc19078e185b7b30d750","typeString":"literal_string \"Already minter\""},"value":"Already minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c4f849172add0ee9051b6c29f3e21501e3cdfa77d3efc19078e185b7b30d750","typeString":"literal_string \"Already minter\""}],"id":10095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7390:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7390:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10103,"nodeType":"ExpressionStatement","src":"7390:59:27"},{"assignments":[10105],"declarations":[{"constant":false,"id":10105,"mutability":"mutable","name":"oldMinter","nameLocation":"7518:9:27","nodeType":"VariableDeclaration","scope":10134,"src":"7510:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10104,"name":"address","nodeType":"ElementaryTypeName","src":"7510:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10110,"initialValue":{"arguments":[{"id":10107,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"7544:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":10108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10106,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7530:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7530:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7510:49:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10111,"name":"oldMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10105,"src":"7573:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7594:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7586:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10112,"name":"address","nodeType":"ElementaryTypeName","src":"7586:7:27","typeDescriptions":{}}},"id":10115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7586:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7573:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10123,"nodeType":"IfStatement","src":"7569:89:27","trueBody":{"id":10122,"nodeType":"Block","src":"7598:60:27","statements":[{"expression":{"arguments":[{"id":10118,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"7624:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10119,"name":"oldMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10105,"src":"7637:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10117,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"7612:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10121,"nodeType":"ExpressionStatement","src":"7612:35:27"}]}},{"expression":{"arguments":[{"id":10125,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"7687:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10126,"name":"newMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"7700:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10124,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"7676:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7676:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10128,"nodeType":"ExpressionStatement","src":"7676:34:27"},{"eventCall":{"arguments":[{"hexValue":"4e6577204d696e746572","id":10130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7739:12:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7eded41d906ad8da9da4aaa2cae68f4bc27e405921f0ba877c84d9c54d24fd39","typeString":"literal_string \"New Minter\""},"value":"New Minter"},{"id":10131,"name":"newMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"7753:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7eded41d906ad8da9da4aaa2cae68f4bc27e405921f0ba877c84d9c54d24fd39","typeString":"literal_string \"New Minter\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10129,"name":"UpdatedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"7725:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10133,"nodeType":"EmitStatement","src":"7720:43:27"}]},"documentation":{"id":10084,"nodeType":"StructuredDocumentation","src":"7199:45:27","text":" @dev Update minter address"},"functionSelector":"4eb03f6e","id":10135,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10089,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"7324:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10090,"kind":"modifierInvocation","modifierName":{"id":10088,"name":"onlyRole","nameLocations":["7315:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7315:8:27"},"nodeType":"ModifierInvocation","src":"7315:28:27"},{"arguments":[{"id":10092,"name":"newMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"7365:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10093,"kind":"modifierInvocation","modifierName":{"id":10091,"name":"validAddress","nameLocations":["7352:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"7352:12:27"},"nodeType":"ModifierInvocation","src":"7352:23:27"}],"name":"updateMinter","nameLocation":"7258:12:27","nodeType":"FunctionDefinition","parameters":{"id":10087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10086,"mutability":"mutable","name":"newMinter","nameLocation":"7279:9:27","nodeType":"VariableDeclaration","scope":10135,"src":"7271:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10085,"name":"address","nodeType":"ElementaryTypeName","src":"7271:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7270:19:27"},"returnParameters":{"id":10094,"nodeType":"ParameterList","parameters":[],"src":"7380:0:27"},"scope":10472,"src":"7249:521:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10186,"nodeType":"Block","src":"7970:449:27","statements":[{"expression":{"arguments":[{"id":10152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7988:39:27","subExpression":{"arguments":[{"id":10149,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"7997:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10150,"name":"newBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10138,"src":"8014:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10148,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7989:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7989:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206275726e207661756c74","id":10153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8029:20:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_783d59426230f00e811d19f70cbc216f514e1135bf5f8434dcb11831c50409e1","typeString":"literal_string \"Already burn vault\""},"value":"Already burn vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_783d59426230f00e811d19f70cbc216f514e1135bf5f8434dcb11831c50409e1","typeString":"literal_string \"Already burn vault\""}],"id":10147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7980:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7980:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10155,"nodeType":"ExpressionStatement","src":"7980:70:27"},{"assignments":[10157],"declarations":[{"constant":false,"id":10157,"mutability":"mutable","name":"oldBurnVault","nameLocation":"8123:12:27","nodeType":"VariableDeclaration","scope":10186,"src":"8115:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10156,"name":"address","nodeType":"ElementaryTypeName","src":"8115:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10162,"initialValue":{"arguments":[{"id":10159,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"8152:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":10160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8169:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10158,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"8138:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":10161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8138:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8115:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10163,"name":"oldBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"8185:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8209:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8201:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10164,"name":"address","nodeType":"ElementaryTypeName","src":"8201:7:27","typeDescriptions":{}}},"id":10167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8201:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8185:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10175,"nodeType":"IfStatement","src":"8181:99:27","trueBody":{"id":10174,"nodeType":"Block","src":"8213:67:27","statements":[{"expression":{"arguments":[{"id":10170,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"8239:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10171,"name":"oldBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"8256:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10169,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"8227:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10173,"nodeType":"ExpressionStatement","src":"8227:42:27"}]}},{"expression":{"arguments":[{"id":10177,"name":"BURN_VAULT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"8309:15:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10178,"name":"newBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10138,"src":"8326:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10176,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"8298:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8298:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10180,"nodeType":"ExpressionStatement","src":"8298:41:27"},{"eventCall":{"arguments":[{"hexValue":"4275726e61626c6520416464726573732055706461746564","id":10182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8371:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_83db599dc1885d338eaf0f66e0e5c2cd7c2529b829cb69eac7d07ee0dc3e7980","typeString":"literal_string \"Burnable Address Updated\""},"value":"Burnable Address Updated"},{"id":10183,"name":"newBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10138,"src":"8399:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_83db599dc1885d338eaf0f66e0e5c2cd7c2529b829cb69eac7d07ee0dc3e7980","typeString":"literal_string \"Burnable Address Updated\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10181,"name":"UpdatedBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9580,"src":"8354:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8354:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10185,"nodeType":"EmitStatement","src":"8349:63:27"}]},"documentation":{"id":10136,"nodeType":"StructuredDocumentation","src":"7776:49:27","text":" @dev Update burn vault address"},"functionSelector":"35f14f14","id":10187,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10141,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"7911:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10142,"kind":"modifierInvocation","modifierName":{"id":10140,"name":"onlyRole","nameLocations":["7902:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7902:8:27"},"nodeType":"ModifierInvocation","src":"7902:28:27"},{"arguments":[{"id":10144,"name":"newBurnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10138,"src":"7952:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10145,"kind":"modifierInvocation","modifierName":{"id":10143,"name":"validAddress","nameLocations":["7939:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"7939:12:27"},"nodeType":"ModifierInvocation","src":"7939:26:27"}],"name":"updateBurnVault","nameLocation":"7839:15:27","nodeType":"FunctionDefinition","parameters":{"id":10139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10138,"mutability":"mutable","name":"newBurnVault","nameLocation":"7863:12:27","nodeType":"VariableDeclaration","scope":10187,"src":"7855:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10137,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:22:27"},"returnParameters":{"id":10146,"nodeType":"ParameterList","parameters":[],"src":"7970:0:27"},"scope":10472,"src":"7830:589:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10235,"nodeType":"Block","src":"8613:500:27","statements":[{"expression":{"arguments":[{"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8631:35:27","subExpression":{"arguments":[{"id":10201,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"8640:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10202,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8655:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10200,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8632:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8632:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207472656173757279","id":10205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8668:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_bba98c6c5eee4392be61cce76bb892247efee416ed42d1b480f24b0cffd19739","typeString":"literal_string \"Already treasury\""},"value":"Already treasury"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bba98c6c5eee4392be61cce76bb892247efee416ed42d1b480f24b0cffd19739","typeString":"literal_string \"Already treasury\""}],"id":10199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8623:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8623:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10207,"nodeType":"ExpressionStatement","src":"8623:64:27"},{"expression":{"arguments":[{"id":10209,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"8717:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10210,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8732:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10208,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"8706:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10212,"nodeType":"ExpressionStatement","src":"8706:37:27"},{"condition":{"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8823:43:27","subExpression":{"arguments":[{"id":10214,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"8832:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10215,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8855:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10213,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8824:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8824:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10229,"nodeType":"IfStatement","src":"8819:202:27","trueBody":{"id":10228,"nodeType":"Block","src":"8868:153:27","statements":[{"expression":{"arguments":[{"id":10219,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"8893:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10220,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8916:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10218,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"8882:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8882:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10222,"nodeType":"ExpressionStatement","src":"8882:45:27"},{"eventCall":{"arguments":[{"hexValue":"4e65772053656e64657220416464726573732057686974656c6973746564","id":10224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614","typeString":"literal_string \"New Sender Address Whitelisted\""},"value":"New Sender Address Whitelisted"},{"id":10225,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8999:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614","typeString":"literal_string \"New Sender Address Whitelisted\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10223,"name":"AddedSenderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9616,"src":"8946:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10227,"nodeType":"EmitStatement","src":"8941:69:27"}]}},{"eventCall":{"arguments":[{"hexValue":"4e65772054726561737572792041646472657373204164646564","id":10231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9065:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06fe93bd62b86952d7d45d3607a1af05329ef3f1a265455c47e7e923d4c6c91f","typeString":"literal_string \"New Treasury Address Added\""},"value":"New Treasury Address Added"},{"id":10232,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"9095:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_06fe93bd62b86952d7d45d3607a1af05329ef3f1a265455c47e7e923d4c6c91f","typeString":"literal_string \"New Treasury Address Added\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10230,"name":"AddedTreasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"9044:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9044:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10234,"nodeType":"EmitStatement","src":"9039:67:27"}]},"documentation":{"id":10188,"nodeType":"StructuredDocumentation","src":"8425:44:27","text":" @dev Add treasury address"},"functionSelector":"bae5ec04","id":10236,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10193,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"8556:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10194,"kind":"modifierInvocation","modifierName":{"id":10192,"name":"onlyRole","nameLocations":["8547:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"8547:8:27"},"nodeType":"ModifierInvocation","src":"8547:28:27"},{"arguments":[{"id":10196,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"8597:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10197,"kind":"modifierInvocation","modifierName":{"id":10195,"name":"validAddress","nameLocations":["8584:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"8584:12:27"},"nodeType":"ModifierInvocation","src":"8584:24:27"}],"name":"addTreasuryAddress","nameLocation":"8483:18:27","nodeType":"FunctionDefinition","parameters":{"id":10191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10190,"mutability":"mutable","name":"newAddress","nameLocation":"8510:10:27","nodeType":"VariableDeclaration","scope":10236,"src":"8502:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10189,"name":"address","nodeType":"ElementaryTypeName","src":"8502:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8501:20:27"},"returnParameters":{"id":10198,"nodeType":"ParameterList","parameters":[],"src":"8613:0:27"},"scope":10472,"src":"8474:639:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10266,"nodeType":"Block","src":"9323:225:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":10250,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"9349:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10251,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10239,"src":"9364:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10249,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"9341:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9341:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207472656173757279","id":10253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9382:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae4e56f1941b3343db2824c2bb1fc5e38f2909bfbd08017fa6f02a1833e710d8","typeString":"literal_string \"Not treasury\""},"value":"Not treasury"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae4e56f1941b3343db2824c2bb1fc5e38f2909bfbd08017fa6f02a1833e710d8","typeString":"literal_string \"Not treasury\""}],"id":10248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9333:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9333:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10255,"nodeType":"ExpressionStatement","src":"9333:64:27"},{"expression":{"arguments":[{"id":10257,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"9428:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10258,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10239,"src":"9443:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10256,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"9416:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9416:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10260,"nodeType":"ExpressionStatement","src":"9416:43:27"},{"eventCall":{"arguments":[{"hexValue":"547265617375727920416464726573732052656d6f766564","id":10262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9497:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df5b65dd6872d85bb7648f9de88a45e204ec3bdd2f26b6ce2065e7755eae0811","typeString":"literal_string \"Treasury Address Removed\""},"value":"Treasury Address Removed"},{"id":10263,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10239,"src":"9525:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df5b65dd6872d85bb7648f9de88a45e204ec3bdd2f26b6ce2065e7755eae0811","typeString":"literal_string \"Treasury Address Removed\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10261,"name":"RemovedTreasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9610,"src":"9474:22:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9474:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10265,"nodeType":"EmitStatement","src":"9469:72:27"}]},"documentation":{"id":10237,"nodeType":"StructuredDocumentation","src":"9119:47:27","text":" @dev Remove treasury address"},"functionSelector":"d4179e8d","id":10267,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10242,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"9261:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10243,"kind":"modifierInvocation","modifierName":{"id":10241,"name":"onlyRole","nameLocations":["9252:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"9252:8:27"},"nodeType":"ModifierInvocation","src":"9252:28:27"},{"arguments":[{"id":10245,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10239,"src":"9302:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10246,"kind":"modifierInvocation","modifierName":{"id":10244,"name":"validAddress","nameLocations":["9289:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"9289:12:27"},"nodeType":"ModifierInvocation","src":"9289:29:27"}],"name":"removeTreasuryAddress","nameLocation":"9180:21:27","nodeType":"FunctionDefinition","parameters":{"id":10240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10239,"mutability":"mutable","name":"treasuryAddress","nameLocation":"9210:15:27","nodeType":"VariableDeclaration","scope":10267,"src":"9202:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10238,"name":"address","nodeType":"ElementaryTypeName","src":"9202:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9201:25:27"},"returnParameters":{"id":10247,"nodeType":"ParameterList","parameters":[],"src":"9323:0:27"},"scope":10472,"src":"9171:377:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10298,"nodeType":"Block","src":"9742:242:27","statements":[{"expression":{"arguments":[{"id":10284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9760:43:27","subExpression":{"arguments":[{"id":10281,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"9769:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10282,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"9792:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10280,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"9761:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9761:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792077686974656c69737465642073656e646572","id":10285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9805:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfeff081a89c199601855fa7df8d8cfe88bd1fd5c5c86ef0392d1d0cbe760b2a","typeString":"literal_string \"Already whitelisted sender\""},"value":"Already whitelisted sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfeff081a89c199601855fa7df8d8cfe88bd1fd5c5c86ef0392d1d0cbe760b2a","typeString":"literal_string \"Already whitelisted sender\""}],"id":10279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9752:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:82:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10287,"nodeType":"ExpressionStatement","src":"9752:82:27"},{"expression":{"arguments":[{"id":10289,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"9864:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10290,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"9887:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10288,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"9853:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9853:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10292,"nodeType":"ExpressionStatement","src":"9853:45:27"},{"eventCall":{"arguments":[{"hexValue":"4e65772053656e64657220416464726573732057686974656c6973746564","id":10294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9932:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614","typeString":"literal_string \"New Sender Address Whitelisted\""},"value":"New Sender Address Whitelisted"},{"id":10295,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"9966:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614","typeString":"literal_string \"New Sender Address Whitelisted\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10293,"name":"AddedSenderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9616,"src":"9913:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9913:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10297,"nodeType":"EmitStatement","src":"9908:69:27"}]},"documentation":{"id":10268,"nodeType":"StructuredDocumentation","src":"9554:44:27","text":" @dev Add whitelist sender"},"functionSelector":"d403c878","id":10299,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10273,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"9685:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10274,"kind":"modifierInvocation","modifierName":{"id":10272,"name":"onlyRole","nameLocations":["9676:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"9676:8:27"},"nodeType":"ModifierInvocation","src":"9676:28:27"},{"arguments":[{"id":10276,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"9726:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10277,"kind":"modifierInvocation","modifierName":{"id":10275,"name":"validAddress","nameLocations":["9713:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"9713:12:27"},"nodeType":"ModifierInvocation","src":"9713:24:27"}],"name":"addWhitelistSender","nameLocation":"9612:18:27","nodeType":"FunctionDefinition","parameters":{"id":10271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10270,"mutability":"mutable","name":"newAddress","nameLocation":"9639:10:27","nodeType":"VariableDeclaration","scope":10299,"src":"9631:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10269,"name":"address","nodeType":"ElementaryTypeName","src":"9631:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9630:20:27"},"returnParameters":{"id":10278,"nodeType":"ParameterList","parameters":[],"src":"9742:0:27"},"scope":10472,"src":"9603:381:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10338,"nodeType":"Block","src":"10190:339:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":10313,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"10216:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10314,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"10239:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10312,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"10208:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10208:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742077686974656c69737465642073656e646572","id":10316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10255:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f968dab381b01065bcd659c7b7ca684b6125a9262124b87757c3ce4b4a61b4e9","typeString":"literal_string \"Not whitelisted sender\""},"value":"Not whitelisted sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f968dab381b01065bcd659c7b7ca684b6125a9262124b87757c3ce4b4a61b4e9","typeString":"literal_string \"Not whitelisted sender\""}],"id":10311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10200:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10200:80:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10318,"nodeType":"ExpressionStatement","src":"10200:80:27"},{"expression":{"arguments":[{"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10298:38:27","subExpression":{"arguments":[{"id":10321,"name":"TREASURY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9543,"src":"10307:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10322,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"10322:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10320,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"10299:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10299:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742072656d6f7665207472656173757279","id":10325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10338:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e00ac7e1279f916115359abdeb64bbee0973e9d1fae1ea63f9db0c4b52ed0db","typeString":"literal_string \"Cannot remove treasury\""},"value":"Cannot remove treasury"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e00ac7e1279f916115359abdeb64bbee0973e9d1fae1ea63f9db0c4b52ed0db","typeString":"literal_string \"Cannot remove treasury\""}],"id":10319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10290:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:73:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10327,"nodeType":"ExpressionStatement","src":"10290:73:27"},{"expression":{"arguments":[{"id":10329,"name":"WHITELIST_SENDER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"10394:21:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10330,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"10417:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10328,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"10382:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10382:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10332,"nodeType":"ExpressionStatement","src":"10382:49:27"},{"eventCall":{"arguments":[{"hexValue":"53656e64657220416464726573732052656d6f7665642046726f6d2057686974656c697374","id":10334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10467:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c04771ce8b365808d82fcedcff16ad41bc76cd3603245cc6cac98a7ae6a1852","typeString":"literal_string \"Sender Address Removed From Whitelist\""},"value":"Sender Address Removed From Whitelist"},{"id":10335,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"10508:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9c04771ce8b365808d82fcedcff16ad41bc76cd3603245cc6cac98a7ae6a1852","typeString":"literal_string \"Sender Address Removed From Whitelist\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10333,"name":"RemovedSenderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"10446:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10446:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10337,"nodeType":"EmitStatement","src":"10441:81:27"}]},"documentation":{"id":10300,"nodeType":"StructuredDocumentation","src":"9990:47:27","text":" @dev Remove whitelist sender"},"functionSelector":"0ee3153f","id":10339,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10305,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"10130:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10306,"kind":"modifierInvocation","modifierName":{"id":10304,"name":"onlyRole","nameLocations":["10121:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"10121:8:27"},"nodeType":"ModifierInvocation","src":"10121:28:27"},{"arguments":[{"id":10308,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"10171:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10309,"kind":"modifierInvocation","modifierName":{"id":10307,"name":"validAddress","nameLocations":["10158:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"10158:12:27"},"nodeType":"ModifierInvocation","src":"10158:27:27"}],"name":"removeWhitelistSender","nameLocation":"10051:21:27","nodeType":"FunctionDefinition","parameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"senderAddress","nameLocation":"10081:13:27","nodeType":"VariableDeclaration","scope":10339,"src":"10073:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10301,"name":"address","nodeType":"ElementaryTypeName","src":"10073:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10072:23:27"},"returnParameters":{"id":10310,"nodeType":"ParameterList","parameters":[],"src":"10190:0:27"},"scope":10472,"src":"10042:487:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10370,"nodeType":"Block","src":"10727:252:27","statements":[{"expression":{"arguments":[{"id":10356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10745:45:27","subExpression":{"arguments":[{"id":10353,"name":"WHITELIST_RECEIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"10754:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10354,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"10779:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10352,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"10746:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10746:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792077686974656c6973746564207265636569766572","id":10357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10792:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_127ab9926eb405b5f4fe18fc4b7135a1e67c1158c5db81537d6d96ea16f7c145","typeString":"literal_string \"Already whitelisted receiver\""},"value":"Already whitelisted receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_127ab9926eb405b5f4fe18fc4b7135a1e67c1158c5db81537d6d96ea16f7c145","typeString":"literal_string \"Already whitelisted receiver\""}],"id":10351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10737:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10737:86:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10359,"nodeType":"ExpressionStatement","src":"10737:86:27"},{"expression":{"arguments":[{"id":10361,"name":"WHITELIST_RECEIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"10853:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10362,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"10878:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10360,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[545],"referencedDeclaration":545,"src":"10842:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10842:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10364,"nodeType":"ExpressionStatement","src":"10842:47:27"},{"eventCall":{"arguments":[{"hexValue":"4e657720526563656976657220416464726573732057686974656c6973746564","id":10366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10925:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0732a6164fc5ad94ef671b27945f3ee929ac0f99b1a7db6a8b65db08506dfe5a","typeString":"literal_string \"New Receiver Address Whitelisted\""},"value":"New Receiver Address Whitelisted"},{"id":10367,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"10961:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0732a6164fc5ad94ef671b27945f3ee929ac0f99b1a7db6a8b65db08506dfe5a","typeString":"literal_string \"New Receiver Address Whitelisted\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10365,"name":"AddedReceiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9628,"src":"10904:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10369,"nodeType":"EmitStatement","src":"10899:73:27"}]},"documentation":{"id":10340,"nodeType":"StructuredDocumentation","src":"10535:46:27","text":" @dev Add whitelist receiver"},"functionSelector":"c80eeec2","id":10371,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10345,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"10670:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10346,"kind":"modifierInvocation","modifierName":{"id":10344,"name":"onlyRole","nameLocations":["10661:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"10661:8:27"},"nodeType":"ModifierInvocation","src":"10661:28:27"},{"arguments":[{"id":10348,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"10711:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10349,"kind":"modifierInvocation","modifierName":{"id":10347,"name":"validAddress","nameLocations":["10698:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"10698:12:27"},"nodeType":"ModifierInvocation","src":"10698:24:27"}],"name":"addWhitelistReceiver","nameLocation":"10595:20:27","nodeType":"FunctionDefinition","parameters":{"id":10343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10342,"mutability":"mutable","name":"newAddress","nameLocation":"10624:10:27","nodeType":"VariableDeclaration","scope":10371,"src":"10616:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10341,"name":"address","nodeType":"ElementaryTypeName","src":"10616:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10615:20:27"},"returnParameters":{"id":10350,"nodeType":"ParameterList","parameters":[],"src":"10727:0:27"},"scope":10472,"src":"10586:393:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10401,"nodeType":"Block","src":"11193:272:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":10385,"name":"WHITELIST_RECEIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"11219:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10386,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10374,"src":"11244:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10384,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"11211:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":10387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11211:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742077686974656c6973746564207265636569766572","id":10388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11262:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_888da2894a44edbf1c03e9128c6e70054075a69831971d4c9689ad0c53419709","typeString":"literal_string \"Not whitelisted receiver\""},"value":"Not whitelisted receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_888da2894a44edbf1c03e9128c6e70054075a69831971d4c9689ad0c53419709","typeString":"literal_string \"Not whitelisted receiver\""}],"id":10383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11203:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:86:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10390,"nodeType":"ExpressionStatement","src":"11203:86:27"},{"expression":{"arguments":[{"id":10392,"name":"WHITELIST_RECEIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"11320:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10393,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10374,"src":"11345:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10391,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[585],"referencedDeclaration":585,"src":"11308:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11308:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10395,"nodeType":"ExpressionStatement","src":"11308:53:27"},{"eventCall":{"arguments":[{"hexValue":"526563656976657220416464726573732052656d6f7665642046726f6d2057686974656c697374","id":10397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11399:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e61780c94bfda6c255ee69289c8bdaa3616ce54a5740fe437854d788bcd4833","typeString":"literal_string \"Receiver Address Removed From Whitelist\""},"value":"Receiver Address Removed From Whitelist"},{"id":10398,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10374,"src":"11442:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e61780c94bfda6c255ee69289c8bdaa3616ce54a5740fe437854d788bcd4833","typeString":"literal_string \"Receiver Address Removed From Whitelist\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":10396,"name":"RemovedReceiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"11376:22:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":10399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11376:82:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10400,"nodeType":"EmitStatement","src":"11371:87:27"}]},"documentation":{"id":10372,"nodeType":"StructuredDocumentation","src":"10985:49:27","text":" @dev Remove whitelist receiver"},"functionSelector":"175badcb","id":10402,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10377,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"11131:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10378,"kind":"modifierInvocation","modifierName":{"id":10376,"name":"onlyRole","nameLocations":["11122:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"11122:8:27"},"nodeType":"ModifierInvocation","src":"11122:28:27"},{"arguments":[{"id":10380,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10374,"src":"11172:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10381,"kind":"modifierInvocation","modifierName":{"id":10379,"name":"validAddress","nameLocations":["11159:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9765,"src":"11159:12:27"},"nodeType":"ModifierInvocation","src":"11159:29:27"}],"name":"removeWhitelistReceiver","nameLocation":"11048:23:27","nodeType":"FunctionDefinition","parameters":{"id":10375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10374,"mutability":"mutable","name":"receiverAddress","nameLocation":"11080:15:27","nodeType":"VariableDeclaration","scope":10402,"src":"11072:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10373,"name":"address","nodeType":"ElementaryTypeName","src":"11072:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11071:25:27"},"returnParameters":{"id":10382,"nodeType":"ParameterList","parameters":[],"src":"11193:0:27"},"scope":10472,"src":"11039:426:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10418,"nodeType":"Block","src":"11606:65:27","statements":[{"expression":{"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10412,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"11616:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10414,"indexExpression":{"id":10413,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10404,"src":"11633:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11616:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10415,"name":"_isTrusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10406,"src":"11654:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11616:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10417,"nodeType":"ExpressionStatement","src":"11616:48:27"}]},"functionSelector":"e691d03b","id":10419,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10409,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"11586:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10410,"kind":"modifierInvocation","modifierName":{"id":10408,"name":"onlyRole","nameLocations":["11577:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"11577:8:27"},"nodeType":"ModifierInvocation","src":"11577:28:27"}],"name":"setTrustedForwarder","nameLocation":"11482:19:27","nodeType":"FunctionDefinition","parameters":{"id":10407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10404,"mutability":"mutable","name":"_trustedForwarder","nameLocation":"11519:17:27","nodeType":"VariableDeclaration","scope":10419,"src":"11511:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10403,"name":"address","nodeType":"ElementaryTypeName","src":"11511:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10406,"mutability":"mutable","name":"_isTrusted","nameLocation":"11551:10:27","nodeType":"VariableDeclaration","scope":10419,"src":"11546:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10405,"name":"bool","nodeType":"ElementaryTypeName","src":"11546:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11501:66:27"},"returnParameters":{"id":10411,"nodeType":"ParameterList","parameters":[],"src":"11606:0:27"},"scope":10472,"src":"11473:198:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9412],"body":{"id":10431,"nodeType":"Block","src":"11774:51:27","statements":[{"expression":{"baseExpression":{"id":10427,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"11791:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10429,"indexExpression":{"id":10428,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10421,"src":"11808:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11791:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10426,"id":10430,"nodeType":"Return","src":"11784:34:27"}]},"functionSelector":"572b6c05","id":10432,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"11686:18:27","nodeType":"FunctionDefinition","overrides":{"id":10423,"nodeType":"OverrideSpecifier","overrides":[],"src":"11750:8:27"},"parameters":{"id":10422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10421,"mutability":"mutable","name":"forwarder","nameLocation":"11722:9:27","nodeType":"VariableDeclaration","scope":10432,"src":"11714:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10420,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11704:33:27"},"returnParameters":{"id":10426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10432,"src":"11768:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10424,"name":"bool","nodeType":"ElementaryTypeName","src":"11768:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11767:6:27"},"scope":10472,"src":"11677:148:27","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1499,9459],"body":{"id":10444,"nodeType":"Block","src":"11984:62:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10440,"name":"ERC2771ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9511,"src":"12001:25:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771ContextUpgradeable_$9511_$","typeString":"type(contract ERC2771ContextUpgradeable)"}},"id":10441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12027:10:27","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":9459,"src":"12001:36:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12001:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10439,"id":10443,"nodeType":"Return","src":"11994:45:27"}]},"id":10445,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"11840:10:27","nodeType":"FunctionDefinition","overrides":{"id":10436,"nodeType":"OverrideSpecifier","overrides":[{"id":10434,"name":"ContextUpgradeable","nameLocations":["11900:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"11900:18:27"},{"id":10435,"name":"ERC2771ContextUpgradeable","nameLocations":["11920:25:27"],"nodeType":"IdentifierPath","referencedDeclaration":9511,"src":"11920:25:27"}],"src":"11891:55:27"},"parameters":{"id":10433,"nodeType":"ParameterList","parameters":[],"src":"11850:2:27"},"returnParameters":{"id":10439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10438,"mutability":"mutable","name":"sender","nameLocation":"11972:6:27","nodeType":"VariableDeclaration","scope":10445,"src":"11964:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10437,"name":"address","nodeType":"ElementaryTypeName","src":"11964:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11963:16:27"},"scope":10472,"src":"11831:215:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1508,9500],"body":{"id":10457,"nodeType":"Block","src":"12203:60:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10453,"name":"ERC2771ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9511,"src":"12220:25:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771ContextUpgradeable_$9511_$","typeString":"type(contract ERC2771ContextUpgradeable)"}},"id":10454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12246:8:27","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":9500,"src":"12220:34:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":10455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12220:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":10452,"id":10456,"nodeType":"Return","src":"12213:43:27"}]},"id":10458,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"12061:8:27","nodeType":"FunctionDefinition","overrides":{"id":10449,"nodeType":"OverrideSpecifier","overrides":[{"id":10447,"name":"ContextUpgradeable","nameLocations":["12119:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"12119:18:27"},{"id":10448,"name":"ERC2771ContextUpgradeable","nameLocations":["12139:25:27"],"nodeType":"IdentifierPath","referencedDeclaration":9511,"src":"12139:25:27"}],"src":"12110:55:27"},"parameters":{"id":10446,"nodeType":"ParameterList","parameters":[],"src":"12069:2:27"},"returnParameters":{"id":10452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10458,"src":"12183:14:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10450,"name":"bytes","nodeType":"ElementaryTypeName","src":"12183:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12182:16:27"},"scope":10472,"src":"12052:211:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1516,9510],"body":{"id":10470,"nodeType":"Block","src":"12425:72:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10466,"name":"ERC2771ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9511,"src":"12442:25:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771ContextUpgradeable_$9511_$","typeString":"type(contract ERC2771ContextUpgradeable)"}},"id":10467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12468:20:27","memberName":"_contextSuffixLength","nodeType":"MemberAccess","referencedDeclaration":9510,"src":"12442:46:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12442:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10465,"id":10469,"nodeType":"Return","src":"12435:55:27"}]},"id":10471,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"12278:20:27","nodeType":"FunctionDefinition","overrides":{"id":10462,"nodeType":"OverrideSpecifier","overrides":[{"id":10460,"name":"ContextUpgradeable","nameLocations":["12348:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":1517,"src":"12348:18:27"},{"id":10461,"name":"ERC2771ContextUpgradeable","nameLocations":["12368:25:27"],"nodeType":"IdentifierPath","referencedDeclaration":9511,"src":"12368:25:27"}],"src":"12339:55:27"},"parameters":{"id":10459,"nodeType":"ParameterList","parameters":[],"src":"12298:2:27"},"returnParameters":{"id":10465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10471,"src":"12412:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12411:9:27"},"scope":10472,"src":"12269:228:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10473,"src":"467:12032:27","usedErrors":[603,606,1548,1696,1699,1807,1812,1817,1826,1831,1836,9644,9646,9648,9650,9652,9654,9656,9658,9660,9662,9664,9666,9668],"usedEvents":[611,1708,1717,1726,1944,1953,9574,9580,9586,9592,9598,9604,9610,9616,9622,9628,9634,9638,9642]}],"src":"32:12468:27"},"id":27},"contracts/rkgen_airdrop.sol":{"ast":{"absolutePath":"contracts/rkgen_airdrop.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[1517],"ECDSA":[5071],"ERC165Upgradeable":[1686],"IAccessControl":[1769],"IERC20":[2010],"Initializable":[854],"MessageHashUtils":[5157],"RKGENAirdrop":[10881],"ReentrancyGuard":[3067],"Strings":[4723]},"id":10882,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10474,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":855,"src":"58:75:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":10476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":363,"src":"134:81:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":10477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":5072,"src":"216:62:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":10478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":5158,"src":"279:73:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":2011,"src":"353:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10882,"sourceUnit":3068,"src":"410:59:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10481,"name":"Initializable","nameLocations":["496:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"496:13:28"},"id":10482,"nodeType":"InheritanceSpecifier","src":"496:13:28"},{"baseName":{"id":10483,"name":"AccessControlUpgradeable","nameLocations":["511:24:28"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"511:24:28"},"id":10484,"nodeType":"InheritanceSpecifier","src":"511:24:28"},{"baseName":{"id":10485,"name":"ReentrancyGuard","nameLocations":["537:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":3067,"src":"537:15:28"},"id":10486,"nodeType":"InheritanceSpecifier","src":"537:15:28"}],"canonicalName":"RKGENAirdrop","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10881,"linearizedBaseContracts":[10881,3067,362,1686,5169,1769,1517,854],"name":"RKGENAirdrop","nameLocation":"480:12:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10489,"libraryName":{"id":10487,"name":"ECDSA","nameLocations":["565:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":5071,"src":"565:5:28"},"nodeType":"UsingForDirective","src":"559:24:28","typeName":{"id":10488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"575:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"functionSelector":"75b238fc","id":10494,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"613:10:28","nodeType":"VariableDeclaration","scope":10881,"src":"589:60:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"589:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":10492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"636:12:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":10491,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"626:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"626:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"323f24ab","id":10496,"mutability":"mutable","name":"rewardSigner","nameLocation":"671:12:28","nodeType":"VariableDeclaration","scope":10881,"src":"656:27:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10495,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9a8a0592","id":10498,"mutability":"mutable","name":"chainId","nameLocation":"704:7:28","nodeType":"VariableDeclaration","scope":10881,"src":"689:22:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10497,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e8ac6533","id":10500,"mutability":"mutable","name":"nominatedAdmin","nameLocation":"732:14:28","nodeType":"VariableDeclaration","scope":10881,"src":"717:29:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10499,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9333fbda","id":10506,"mutability":"mutable","name":"nonces","nameLocation":"900:6:28","nodeType":"VariableDeclaration","scope":10881,"src":"845:61:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":10505,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10501,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"845:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10504,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10502,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"864:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10503,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"2f6639d24651730c7bf57c95ddbf96d66d11477e4ec626876f92c22e5f365e68","id":10516,"name":"Claimed","nameLocation":"967:7:28","nodeType":"EventDefinition","parameters":{"id":10515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10508,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"991:4:28","nodeType":"VariableDeclaration","scope":10516,"src":"975:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10507,"name":"address","nodeType":"ElementaryTypeName","src":"975:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10510,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1013:5:28","nodeType":"VariableDeclaration","scope":10516,"src":"997:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10509,"name":"address","nodeType":"ElementaryTypeName","src":"997:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10512,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1028:6:28","nodeType":"VariableDeclaration","scope":10516,"src":"1020:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1020:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10514,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1044:5:28","nodeType":"VariableDeclaration","scope":10516,"src":"1036:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"974:76:28"},"src":"961:90:28"},{"anonymous":false,"eventSelector":"5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73","id":10520,"name":"SignerUpdated","nameLocation":"1062:13:28","nodeType":"EventDefinition","parameters":{"id":10519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10518,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"1092:9:28","nodeType":"VariableDeclaration","scope":10520,"src":"1076:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10517,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1075:27:28"},"src":"1056:47:28"},{"anonymous":false,"eventSelector":"0cc480c920b59003be60d60bb7b685b220d313037231045fbea988d33938d867","id":10524,"name":"AdminNominated","nameLocation":"1114:14:28","nodeType":"EventDefinition","parameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10522,"indexed":true,"mutability":"mutable","name":"nominatedAdmin","nameLocation":"1145:14:28","nodeType":"VariableDeclaration","scope":10524,"src":"1129:30:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10521,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1128:32:28"},"src":"1108:53:28"},{"anonymous":false,"eventSelector":"54e4612788f90384e6843298d7854436f3a585b2c3831ab66abf1de63bfa6c2d","id":10528,"name":"AdminUpdated","nameLocation":"1172:12:28","nodeType":"EventDefinition","parameters":{"id":10527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10526,"indexed":true,"mutability":"mutable","name":"newAdmin","nameLocation":"1201:8:28","nodeType":"VariableDeclaration","scope":10528,"src":"1185:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10525,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1184:26:28"},"src":"1166:45:28"},{"anonymous":false,"eventSelector":"6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a4","id":10536,"name":"TokensWithdrawn","nameLocation":"1222:15:28","nodeType":"EventDefinition","parameters":{"id":10535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10530,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"1254:5:28","nodeType":"VariableDeclaration","scope":10536,"src":"1238:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10529,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10532,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1277:5:28","nodeType":"VariableDeclaration","scope":10536,"src":"1261:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10531,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10534,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1292:6:28","nodeType":"VariableDeclaration","scope":10536,"src":"1284:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1237:62:28"},"src":"1216:84:28"},{"anonymous":false,"eventSelector":"913cfe5a6bb4486c7cca917d162d4d03f1b72efe6d62d10003d8dcebfe5db92c","id":10542,"name":"SignatureVerified","nameLocation":"1311:17:28","nodeType":"EventDefinition","parameters":{"id":10541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10538,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"1335:9:28","nodeType":"VariableDeclaration","scope":10542,"src":"1329:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10537,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10540,"indexed":false,"mutability":"mutable","name":"result","nameLocation":"1351:6:28","nodeType":"VariableDeclaration","scope":10542,"src":"1346:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10539,"name":"bool","nodeType":"ElementaryTypeName","src":"1346:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1328:30:28"},"src":"1305:54:28"},{"canonicalName":"RKGENAirdrop.SignedMessage","id":10553,"members":[{"constant":false,"id":10544,"mutability":"mutable","name":"user","nameLocation":"1404:4:28","nodeType":"VariableDeclaration","scope":10553,"src":"1396:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10543,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10546,"mutability":"mutable","name":"token","nameLocation":"1426:5:28","nodeType":"VariableDeclaration","scope":10553,"src":"1418:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10545,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10548,"mutability":"mutable","name":"amount","nameLocation":"1449:6:28","nodeType":"VariableDeclaration","scope":10553,"src":"1441:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10550,"mutability":"mutable","name":"nonce","nameLocation":"1473:5:28","nodeType":"VariableDeclaration","scope":10553,"src":"1465:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10552,"mutability":"mutable","name":"chainId","nameLocation":"1496:7:28","nodeType":"VariableDeclaration","scope":10553,"src":"1488:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignedMessage","nameLocation":"1372:13:28","nodeType":"StructDefinition","scope":10881,"src":"1365:145:28","visibility":"public"},{"errorSelector":"815e1d64","id":10555,"name":"InvalidSigner","nameLocation":"1588:13:28","nodeType":"ErrorDefinition","parameters":{"id":10554,"nodeType":"ParameterList","parameters":[],"src":"1601:2:28"},"src":"1582:22:28"},{"errorSelector":"756688fe","id":10557,"name":"InvalidNonce","nameLocation":"1615:12:28","nodeType":"ErrorDefinition","parameters":{"id":10556,"nodeType":"ParameterList","parameters":[],"src":"1627:2:28"},"src":"1609:21:28"},{"errorSelector":"8baa579f","id":10559,"name":"InvalidSignature","nameLocation":"1641:16:28","nodeType":"ErrorDefinition","parameters":{"id":10558,"nodeType":"ParameterList","parameters":[],"src":"1657:2:28"},"src":"1635:25:28"},{"errorSelector":"b5eba9f0","id":10561,"name":"InvalidAdmin","nameLocation":"1671:12:28","nodeType":"ErrorDefinition","parameters":{"id":10560,"nodeType":"ParameterList","parameters":[],"src":"1683:2:28"},"src":"1665:21:28"},{"errorSelector":"8245981c","id":10563,"name":"NoNominatedAdmin","nameLocation":"1697:16:28","nodeType":"ErrorDefinition","parameters":{"id":10562,"nodeType":"ParameterList","parameters":[],"src":"1713:2:28"},"src":"1691:25:28"},{"errorSelector":"23369fa6","id":10565,"name":"AlreadyExists","nameLocation":"1727:13:28","nodeType":"ErrorDefinition","parameters":{"id":10564,"nodeType":"ParameterList","parameters":[],"src":"1740:2:28"},"src":"1721:22:28"},{"errorSelector":"7bfa4b9f","id":10567,"name":"NotAdmin","nameLocation":"1754:8:28","nodeType":"ErrorDefinition","parameters":{"id":10566,"nodeType":"ParameterList","parameters":[],"src":"1762:2:28"},"src":"1748:17:28"},{"body":{"id":10599,"nodeType":"Block","src":"1861:184:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10578,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1871:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1871:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10580,"nodeType":"ExpressionStatement","src":"1871:22:28"},{"expression":{"arguments":[{"id":10582,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1914:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10583,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10569,"src":"1934:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10581,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1903:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1903:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10585,"nodeType":"ExpressionStatement","src":"1903:37:28"},{"expression":{"arguments":[{"id":10587,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"1961:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10588,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10569,"src":"1973:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10586,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1950:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1950:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10590,"nodeType":"ExpressionStatement","src":"1950:29:28"},{"expression":{"id":10593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10591,"name":"rewardSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"1989:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10592,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"2004:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1989:21:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10594,"nodeType":"ExpressionStatement","src":"1989:21:28"},{"expression":{"id":10597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10595,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"2020:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10596,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10573,"src":"2030:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2020:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10598,"nodeType":"ExpressionStatement","src":"2020:18:28"}]},"functionSelector":"1794bb3c","id":10600,"implemented":true,"kind":"function","modifiers":[{"id":10576,"kind":"modifierInvocation","modifierName":{"id":10575,"name":"initializer","nameLocations":["1849:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"1849:11:28"},"nodeType":"ModifierInvocation","src":"1849:11:28"}],"name":"initialize","nameLocation":"1780:10:28","nodeType":"FunctionDefinition","parameters":{"id":10574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10569,"mutability":"mutable","name":"admin","nameLocation":"1799:5:28","nodeType":"VariableDeclaration","scope":10600,"src":"1791:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10568,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10571,"mutability":"mutable","name":"signer","nameLocation":"1814:6:28","nodeType":"VariableDeclaration","scope":10600,"src":"1806:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10570,"name":"address","nodeType":"ElementaryTypeName","src":"1806:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10573,"mutability":"mutable","name":"_chainId","nameLocation":"1830:8:28","nodeType":"VariableDeclaration","scope":10600,"src":"1822:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:49:28"},"returnParameters":{"id":10577,"nodeType":"ParameterList","parameters":[],"src":"1861:0:28"},"scope":10881,"src":"1771:274:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10633,"nodeType":"Block","src":"2122:213:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10608,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"2136:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2149:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10609,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:28","typeDescriptions":{}}},"id":10612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2136:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10617,"nodeType":"IfStatement","src":"2132:51:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10614,"name":"InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10555,"src":"2168:13:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10616,"nodeType":"RevertStatement","src":"2161:22:28"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10618,"name":"rewardSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"2197:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10619,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"2213:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2197:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10624,"nodeType":"IfStatement","src":"2193:53:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10621,"name":"AlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10565,"src":"2231:13:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2231:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10623,"nodeType":"RevertStatement","src":"2224:22:28"}},{"expression":{"id":10627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10625,"name":"rewardSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"2265:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10626,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"2280:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2265:24:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10628,"nodeType":"ExpressionStatement","src":"2265:24:28"},{"eventCall":{"arguments":[{"id":10630,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"2318:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10629,"name":"SignerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"2304:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2304:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10632,"nodeType":"EmitStatement","src":"2299:29:28"}]},"functionSelector":"a7ecd37e","id":10634,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10605,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"2110:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10606,"kind":"modifierInvocation","modifierName":{"id":10604,"name":"onlyRole","nameLocations":["2101:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2101:8:28"},"nodeType":"ModifierInvocation","src":"2101:20:28"}],"name":"updateSigner","nameLocation":"2060:12:28","nodeType":"FunctionDefinition","parameters":{"id":10603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10602,"mutability":"mutable","name":"newSigner","nameLocation":"2081:9:28","nodeType":"VariableDeclaration","scope":10634,"src":"2073:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10601,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2072:19:28"},"returnParameters":{"id":10607,"nodeType":"ParameterList","parameters":[],"src":"2122:0:28"},"scope":10881,"src":"2051:284:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10668,"nodeType":"Block","src":"2475:209:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10642,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10636,"src":"2489:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10643,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:28","typeDescriptions":{}}},"id":10646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2489:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10651,"nodeType":"IfStatement","src":"2485:49:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10648,"name":"InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10561,"src":"2520:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2520:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10650,"nodeType":"RevertStatement","src":"2513:21:28"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10652,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10636,"src":"2548:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2560:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2564:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2560:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2548:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10659,"nodeType":"IfStatement","src":"2544:50:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10656,"name":"AlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10565,"src":"2579:13:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10658,"nodeType":"RevertStatement","src":"2572:22:28"}},{"expression":{"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10660,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"2613:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10661,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10636,"src":"2630:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2613:25:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10663,"nodeType":"ExpressionStatement","src":"2613:25:28"},{"eventCall":{"arguments":[{"id":10665,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10636,"src":"2668:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10664,"name":"AdminNominated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10524,"src":"2653:14:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10667,"nodeType":"EmitStatement","src":"2648:29:28"}]},"functionSelector":"cd5ad4c5","id":10669,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10639,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"2463:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10640,"kind":"modifierInvocation","modifierName":{"id":10638,"name":"onlyRole","nameLocations":["2454:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2454:8:28"},"nodeType":"ModifierInvocation","src":"2454:20:28"}],"name":"nominateAdmin","nameLocation":"2413:13:28","nodeType":"FunctionDefinition","parameters":{"id":10637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10636,"mutability":"mutable","name":"newAdmin","nameLocation":"2435:8:28","nodeType":"VariableDeclaration","scope":10669,"src":"2427:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10635,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2426:18:28"},"returnParameters":{"id":10641,"nodeType":"ParameterList","parameters":[],"src":"2475:0:28"},"scope":10881,"src":"2404:280:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10714,"nodeType":"Block","src":"2726:346:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10672,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"2740:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2766:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2758:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10673,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:28","typeDescriptions":{}}},"id":10676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2758:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2740:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10681,"nodeType":"IfStatement","src":"2736:59:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10678,"name":"NoNominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10563,"src":"2777:16:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10680,"nodeType":"RevertStatement","src":"2770:25:28"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2809:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2813:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2809:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10684,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"2823:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2809:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10689,"nodeType":"IfStatement","src":"2805:55:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10686,"name":"InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10561,"src":"2846:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2846:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10688,"nodeType":"RevertStatement","src":"2839:21:28"}},{"expression":{"arguments":[{"id":10691,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2890:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2910:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2914:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2910:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10690,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2879:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2879:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10695,"nodeType":"ExpressionStatement","src":"2879:42:28"},{"expression":{"arguments":[{"id":10697,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"2942:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2954:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2954:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10696,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2931:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10701,"nodeType":"ExpressionStatement","src":"2931:34:28"},{"expression":{"id":10707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10702,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"2990:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":10705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10703,"name":"address","nodeType":"ElementaryTypeName","src":"3007:7:28","typeDescriptions":{}}},"id":10706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2990:27:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10708,"nodeType":"ExpressionStatement","src":"2990:27:28"},{"eventCall":{"arguments":[{"expression":{"id":10710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3054:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3058:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3054:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10709,"name":"AdminUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10528,"src":"3041:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10713,"nodeType":"EmitStatement","src":"3036:29:28"}]},"functionSelector":"8c3d7301","id":10715,"implemented":true,"kind":"function","modifiers":[],"name":"acceptAdminRole","nameLocation":"2699:15:28","nodeType":"FunctionDefinition","parameters":{"id":10670,"nodeType":"ParameterList","parameters":[],"src":"2714:2:28"},"returnParameters":{"id":10671,"nodeType":"ParameterList","parameters":[],"src":"2726:0:28"},"scope":10881,"src":"2690:382:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10741,"nodeType":"Block","src":"3206:116:28","statements":[{"expression":{"arguments":[{"expression":{"id":10729,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3239:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3243:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3239:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10719,"src":"3251:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10726,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10717,"src":"3223:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10725,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3216:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2010_$","typeString":"type(contract IERC20)"}},"id":10727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2010","typeString":"contract IERC20"}},"id":10728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"3216:22:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10733,"nodeType":"ExpressionStatement","src":"3216:42:28"},{"eventCall":{"arguments":[{"expression":{"id":10735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3289:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3289:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10737,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10717,"src":"3301:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10738,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10719,"src":"3308:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10734,"name":"TokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"3273:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10740,"nodeType":"EmitStatement","src":"3268:47:28"}]},"functionSelector":"06b091f9","id":10742,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10722,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"3194:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10723,"kind":"modifierInvocation","modifierName":{"id":10721,"name":"onlyRole","nameLocations":["3185:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3185:8:28"},"nodeType":"ModifierInvocation","src":"3185:20:28"}],"name":"withdrawTokens","nameLocation":"3130:14:28","nodeType":"FunctionDefinition","parameters":{"id":10720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10717,"mutability":"mutable","name":"token","nameLocation":"3153:5:28","nodeType":"VariableDeclaration","scope":10742,"src":"3145:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10716,"name":"address","nodeType":"ElementaryTypeName","src":"3145:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10719,"mutability":"mutable","name":"amount","nameLocation":"3168:6:28","nodeType":"VariableDeclaration","scope":10742,"src":"3160:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3144:31:28"},"returnParameters":{"id":10724,"nodeType":"ParameterList","parameters":[],"src":"3206:0:28"},"scope":10881,"src":"3121:201:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10757,"nodeType":"Block","src":"3468:43:28","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":10751,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"3485:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10753,"indexExpression":{"id":10752,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10744,"src":"3492:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3485:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10755,"indexExpression":{"id":10754,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10746,"src":"3498:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3485:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10750,"id":10756,"nodeType":"Return","src":"3478:26:28"}]},"functionSelector":"d828435d","id":10758,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"3400:8:28","nodeType":"FunctionDefinition","parameters":{"id":10747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10744,"mutability":"mutable","name":"user","nameLocation":"3417:4:28","nodeType":"VariableDeclaration","scope":10758,"src":"3409:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10743,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10746,"mutability":"mutable","name":"token","nameLocation":"3431:5:28","nodeType":"VariableDeclaration","scope":10758,"src":"3423:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10745,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3408:29:28"},"returnParameters":{"id":10750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10758,"src":"3459:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3458:9:28"},"scope":10881,"src":"3391:120:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10855,"nodeType":"Block","src":"3663:920:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10771,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"3749:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"baseExpression":{"id":10772,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"3758:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10775,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10773,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3765:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3758:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10777,"indexExpression":{"id":10776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10760,"src":"3779:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3758:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3749:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10782,"nodeType":"IfStatement","src":"3745:63:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10779,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10557,"src":"3794:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3794:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10781,"nodeType":"RevertStatement","src":"3787:21:28"}},{"assignments":[10784],"declarations":[{"constant":false,"id":10784,"mutability":"mutable","name":"hash","nameLocation":"3889:4:28","nodeType":"VariableDeclaration","scope":10855,"src":"3881:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3881:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10796,"initialValue":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10788,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3923:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3923:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10760,"src":"3937:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10791,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10762,"src":"3944:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10792,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"3952:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10793,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"3959:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10786,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3906:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3910:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"3906:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10785,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3896:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:72:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3881:87:28"},{"assignments":[10798],"declarations":[{"constant":false,"id":10798,"mutability":"mutable","name":"messageHash","nameLocation":"3986:11:28","nodeType":"VariableDeclaration","scope":10855,"src":"3978:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3978:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10803,"initialValue":{"arguments":[{"id":10801,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10784,"src":"4040:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10799,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4000:16:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$5157_$","typeString":"type(library MessageHashUtils)"}},"id":10800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:22:28","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":5086,"src":"4000:39:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":10802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4000:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3978:67:28"},{"assignments":[10805],"declarations":[{"constant":false,"id":10805,"mutability":"mutable","name":"recovered","nameLocation":"4063:9:28","nodeType":"VariableDeclaration","scope":10855,"src":"4055:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10804,"name":"address","nodeType":"ElementaryTypeName","src":"4055:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10811,"initialValue":{"arguments":[{"id":10808,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10798,"src":"4089:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10809,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"4102:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":10806,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"4075:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5071_$","typeString":"type(library ECDSA)"}},"id":10807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4081:7:28","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4827,"src":"4075:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":10810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4075:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4055:57:28"},{"assignments":[10813],"declarations":[{"constant":false,"id":10813,"mutability":"mutable","name":"isValid","nameLocation":"4186:7:28","nodeType":"VariableDeclaration","scope":10855,"src":"4181:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10812,"name":"bool","nodeType":"ElementaryTypeName","src":"4181:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10817,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10814,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10805,"src":"4196:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10815,"name":"rewardSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"4209:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4196:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4181:40:28"},{"eventCall":{"arguments":[{"id":10819,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"4254:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":10820,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"4265:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10818,"name":"SignatureVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10542,"src":"4236:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (bytes memory,bool)"}},"id":10821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10822,"nodeType":"EmitStatement","src":"4231:42:28"},{"condition":{"id":10824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4296:8:28","subExpression":{"id":10823,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"4297:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10828,"nodeType":"IfStatement","src":"4292:39:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10825,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10559,"src":"4313:16:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4313:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10827,"nodeType":"RevertStatement","src":"4306:25:28"}},{"expression":{"id":10836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":10829,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"4393:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10833,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10830,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"4400:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4393:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10834,"indexExpression":{"id":10832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10760,"src":"4414:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4393:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":10835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4393:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10837,"nodeType":"ExpressionStatement","src":"4393:32:28"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10842,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"4497:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10844,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10762,"src":"4511:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10760,"src":"4481:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10838,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4474:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2010_$","typeString":"type(contract IERC20)"}},"id":10840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4474:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2010","typeString":"contract IERC20"}},"id":10841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4488:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"4474:22:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4474:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10846,"nodeType":"ExpressionStatement","src":"4474:44:28"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10848,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"4541:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4541:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10850,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10760,"src":"4555:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10762,"src":"4562:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10852,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"4570:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10847,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10516,"src":"4533:7:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10854,"nodeType":"EmitStatement","src":"4528:48:28"}]},"functionSelector":"2ada8a32","id":10856,"implemented":true,"kind":"function","modifiers":[{"id":10769,"kind":"modifierInvocation","modifierName":{"id":10768,"name":"nonReentrant","nameLocations":["3651:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":3031,"src":"3651:12:28"},"nodeType":"ModifierInvocation","src":"3651:12:28"}],"name":"claim","nameLocation":"3526:5:28","nodeType":"FunctionDefinition","parameters":{"id":10767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10760,"mutability":"mutable","name":"token","nameLocation":"3549:5:28","nodeType":"VariableDeclaration","scope":10856,"src":"3541:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10759,"name":"address","nodeType":"ElementaryTypeName","src":"3541:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10762,"mutability":"mutable","name":"amount","nameLocation":"3572:6:28","nodeType":"VariableDeclaration","scope":10856,"src":"3564:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10764,"mutability":"mutable","name":"nonce","nameLocation":"3596:5:28","nodeType":"VariableDeclaration","scope":10856,"src":"3588:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3588:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10766,"mutability":"mutable","name":"signature","nameLocation":"3626:9:28","nodeType":"VariableDeclaration","scope":10856,"src":"3611:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10765,"name":"bytes","nodeType":"ElementaryTypeName","src":"3611:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3531:110:28"},"returnParameters":{"id":10770,"nodeType":"ParameterList","parameters":[],"src":"3663:0:28"},"scope":10881,"src":"3517:1066:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10863,"nodeType":"Block","src":"4694:38:28","statements":[{"expression":{"id":10861,"name":"nominatedAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"4711:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10860,"id":10862,"nodeType":"Return","src":"4704:21:28"}]},"functionSelector":"b58ad07f","id":10864,"implemented":true,"kind":"function","modifiers":[],"name":"getNominatedAdmin","nameLocation":"4642:17:28","nodeType":"FunctionDefinition","parameters":{"id":10857,"nodeType":"ParameterList","parameters":[],"src":"4659:2:28"},"returnParameters":{"id":10860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10864,"src":"4685:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10858,"name":"address","nodeType":"ElementaryTypeName","src":"4685:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4684:9:28"},"scope":10881,"src":"4633:99:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10871,"nodeType":"Block","src":"4839:36:28","statements":[{"expression":{"id":10869,"name":"rewardSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"4856:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10868,"id":10870,"nodeType":"Return","src":"4849:19:28"}]},"functionSelector":"44205899","id":10872,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardSigner","nameLocation":"4789:15:28","nodeType":"FunctionDefinition","parameters":{"id":10865,"nodeType":"ParameterList","parameters":[],"src":"4804:2:28"},"returnParameters":{"id":10868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10872,"src":"4830:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10866,"name":"address","nodeType":"ElementaryTypeName","src":"4830:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4829:9:28"},"scope":10881,"src":"4780:95:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10879,"nodeType":"Block","src":"4972:31:28","statements":[{"expression":{"id":10877,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"4989:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10876,"id":10878,"nodeType":"Return","src":"4982:14:28"}]},"functionSelector":"3408e470","id":10880,"implemented":true,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"4927:10:28","nodeType":"FunctionDefinition","parameters":{"id":10873,"nodeType":"ParameterList","parameters":[],"src":"4937:2:28"},"returnParameters":{"id":10876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10880,"src":"4963:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10874,"name":"uint256","nodeType":"ElementaryTypeName","src":"4963:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4962:9:28"},"scope":10881,"src":"4918:85:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10882,"src":"471:4534:28","usedErrors":[603,606,1696,1699,3012,4734,4739,4744,10555,10557,10559,10561,10563,10565,10567],"usedEvents":[611,1708,1717,1726,10516,10520,10524,10528,10536,10542]}],"src":"32:4974:28"},"id":28}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xaec38804089a16494f7d45ebbbeab78fe05e5dc4bc2eae1d2af458fe999fb43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04796408e2c4a1051afb23319e9505edb595a3d9c663ff5d6fcfb8e185ab1d93\",\"dweb:/ipfs/Qma8ZTi4kGyqg45SyNibbJSqMF7broiQnJPHhEGLcZyF9U\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3b49f100fa4d50906fc4775753034ebfe550fb29e52cdc1ae7116d9b581719864736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xB4 SWAP16 LT 0xF LOG4 0xD5 MULMOD MOD 0xFC SELFBALANCE PUSH22 0x753034EBFE550FB29E52CDC1AE7116D9B58171986473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"459:17878:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17878:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3b49f100fa4d50906fc4775753034ebfe550fb29e52cdc1ae7116d9b581719864736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xB4 SWAP16 LT 0xF LOG4 0xD5 MULMOD MOD 0xFC SELFBALANCE PUSH22 0x753034EBFE550FB29E52CDC1AE7116D9B58171986473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"459:17878:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088e7755c5881fb66c4e85182dc7e21336e08e08b39d7f96ba3ad0a7af39c088e64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xE7 PUSH22 0x5C5881FB66C4E85182DC7E21336E08E08B39D7F96BA3 0xAD EXP PUSH27 0xF39C088E64736F6C63430008160033000000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088e7755c5881fb66c4e85182dc7e21336e08e08b39d7f96ba3ad0a7af39c088e64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xE7 PUSH22 0x5C5881FB66C4E85182DC7E21336E08E08B39D7F96BA3 0xAD EXP PUSH27 0xF39C088E64736F6C63430008160033000000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d064c85f5f294b966abfd22ede05afb4ed1ba7a6af8feb343b3d99d778085ed64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MOD 0x4C DUP6 CREATE2 CALLCODE SWAP5 0xB9 PUSH7 0xABFD22EDE05AFB 0x4E 0xD1 0xBA PUSH27 0x6AF8FEB343B3D99D778085ED64736F6C6343000816003300000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d064c85f5f294b966abfd22ede05afb4ed1ba7a6af8feb343b3d99d778085ed64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MOD 0x4C DUP6 CREATE2 CALLCODE SWAP5 0xB9 PUSH7 0xABFD22EDE05AFB 0x4E 0xD1 0xBA PUSH27 0x6AF8FEB343B3D99D778085ED64736F6C6343000816003300000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3009,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018e7d0dcbc3a287f4ed57dbdedaac34e612ac3c7ad0bef6de9cd8f8c0634b07064736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE7 0xD0 0xDC 0xBC GASPRICE 0x28 PUSH32 0x4ED57DBDEDAAC34E612AC3C7AD0BEF6DE9CD8F8C0634B07064736F6C63430008 AND STOP CALLER ","sourceMap":"1599:3723:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018e7d0dcbc3a287f4ed57dbdedaac34e612ac3c7ad0bef6de9cd8f8c0634b07064736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE7 0xD0 0xDC 0xBC GASPRICE 0x28 PUSH32 0x4ED57DBDEDAAC34E612AC3C7AD0BEF6DE9CD8F8C0634B07064736F6C63430008 AND STOP CALLER ","sourceMap":"1599:3723:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c781a8b885a3ca5fe2dc9f4dee2fc882f7984acf1a1b984d9a970a9da7762bad64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 DUP2 0xA8 0xB8 DUP6 LOG3 0xCA PUSH0 0xE2 0xDC SWAP16 0x4D 0xEE 0x2F 0xC8 DUP3 0xF7 SWAP9 0x4A 0xCF BYTE SHL SWAP9 0x4D SWAP11 SWAP8 EXP SWAP14 0xA7 PUSH23 0x2BAD64736F6C6343000816003300000000000000000000 ","sourceMap":"1407:2774:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c781a8b885a3ca5fe2dc9f4dee2fc882f7984acf1a1b984d9a970a9da7762bad64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 DUP2 0xA8 0xB8 DUP6 LOG3 0xCA PUSH0 0xE2 0xDC SWAP16 0x4D 0xEE 0x2F 0xC8 DUP3 0xF7 SWAP9 0x4A 0xCF BYTE SHL SWAP9 0x4D SWAP11 SWAP8 EXP SWAP14 0xA7 PUSH23 0x2BAD64736F6C6343000816003300000000000000000000 ","sourceMap":"1407:2774:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207a64c3f8e092cb40b9e0a77b05db237d8560195e0def54d6e1cd40323b56137f64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x64C3F8E092CB40B9E0A77B05DB237D8560195E0DEF54D6E1CD4032 EXTCODESIZE JUMP SGT PUSH32 0x64736F6C63430008160033000000000000000000000000000000000000000000 ","sourceMap":"297:18980:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207a64c3f8e092cb40b9e0a77b05db237d8560195e0def54d6e1cd40323b56137f64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x64C3F8E092CB40B9E0A77B05DB237D8560195E0DEF54D6E1CD4032 EXTCODESIZE JUMP SGT PUSH32 0x64736F6C63430008160033000000000000000000000000000000000000000000 ","sourceMap":"297:18980:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1dd4f2cd8ba69631efa71c39c4ef88aa3a44cf53c27df28ea5273887589b20f64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xDD 0x4F 0x2C 0xD8 0xBA PUSH10 0x631EFA71C39C4EF88AA3 LOG4 0x4C CREATE2 EXTCODECOPY 0x27 0xDF 0x28 0xEA MSTORE PUSH20 0x887589B20F64736F6C6343000816003300000000 ","sourceMap":"344:7470:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1dd4f2cd8ba69631efa71c39c4ef88aa3a44cf53c27df28ea5273887589b20f64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xDD 0x4F 0x2C 0xD8 0xBA PUSH10 0x631EFA71C39C4EF88AA3 LOG4 0x4C CREATE2 EXTCODECOPY 0x27 0xDF 0x28 0xEA MSTORE PUSH20 0x887589B20F64736F6C6343000816003300000000 ","sourceMap":"344:7470:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071edc804d4e72a3b7d7be490f3640f6d3812c6626141ea9f07f4052c4b2b776264736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xEDC804D4E72A3B7D7BE490F3640F6D3812C6 PUSH3 0x6141EA SWAP16 SMOD DELEGATECALL SDIV 0x2C 0x4B 0x2B PUSH24 0x6264736F6C63430008160033000000000000000000000000 ","sourceMap":"521:3729:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071edc804d4e72a3b7d7be490f3640f6d3812c6626141ea9f07f4052c4b2b776264736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xEDC804D4E72A3B7D7BE490F3640F6D3812C6 PUSH3 0x6141EA SWAP16 SMOD DELEGATECALL SDIV 0x2C 0x4B 0x2B PUSH24 0x6264736F6C63430008160033000000000000000000000000 ","sourceMap":"521:3729:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3bc36e794e041aa5bb2303eb5f5f978d67e24660a4d9f1d1de648fa0af5eb3c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xBC CALLDATASIZE 0xE7 SWAP5 0xE0 COINBASE 0xAA JUMPDEST 0xB2 ADDRESS RETURNDATACOPY 0xB5 CREATE2 0xF9 PUSH25 0xD67E24660A4D9F1D1DE648FA0AF5EB3C64736F6C6343000816 STOP CALLER ","sourceMap":"281:31863:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3bc36e794e041aa5bb2303eb5f5f978d67e24660a4d9f1d1de648fa0af5eb3c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xBC CALLDATASIZE 0xE7 SWAP5 0xE0 COINBASE 0xAA JUMPDEST 0xB2 ADDRESS RETURNDATACOPY 0xB5 CREATE2 0xF9 PUSH25 0xD67E24660A4D9F1D1DE648FA0AF5EB3C64736F6C6343000816 STOP CALLER ","sourceMap":"281:31863:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046b97e0f0caaf4e5795f0f9285a66bf03a0e3e5bcb1892e93096dab0ff8ace5964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB9 PUSH31 0xF0CAAF4E5795F0F9285A66BF03A0E3E5BCB1892E93096DAB0FF8ACE596473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046b97e0f0caaf4e5795f0f9285a66bf03a0e3e5bcb1892e93096dab0ff8ace5964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB9 PUSH31 0xF0CAAF4E5795F0F9285A66BF03A0E3E5BCB1892E93096DAB0FF8ACE596473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200675b899f6ea311f2e7f338ebac4dd9531321d9d7e7614338a1300602e976af964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH22 0xB899F6EA311F2E7F338EBAC4DD9531321D9D7E761433 DUP11 SGT STOP PUSH1 0x2E SWAP8 PUSH11 0xF964736F6C634300081600 CALLER ","sourceMap":"258:2354:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200675b899f6ea311f2e7f338ebac4dd9531321d9d7e7614338a1300602e976af964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH22 0xB899F6EA311F2E7F338EBAC4DD9531321D9D7E761433 DUP11 SGT STOP PUSH1 0x2E SWAP8 PUSH11 0xF964736F6C634300081600 CALLER ","sourceMap":"258:2354:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da2e97bab1b09e3d1358928e050a4a8450e5e798ff69d620d1c74ad5cf5ef53664736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x2E SWAP8 0xBA 0xB1 0xB0 SWAP15 RETURNDATASIZE SGT PC SWAP3 DUP15 SDIV EXP 0x4A DUP5 POP 0xE5 0xE7 SWAP9 SELFDESTRUCT PUSH10 0xD620D1C74AD5CF5EF536 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1425:13298:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1425:13298:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da2e97bab1b09e3d1358928e050a4a8450e5e798ff69d620d1c74ad5cf5ef53664736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x2E SWAP8 0xBA 0xB1 0xB0 SWAP15 RETURNDATASIZE SGT PC SWAP3 DUP15 SDIV EXP 0x4A DUP5 POP 0xE5 0xE7 SWAP9 SELFDESTRUCT PUSH10 0xD620D1C74AD5CF5EF536 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1425:13298:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. - Set can be cleared (all elements removed) in O(n). ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol":{"ERC2771ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol\":\"ERC2771ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol\":{\"keccak256\":\"0x67087028d9a5222732ee1d3cfbfb754970fb21beeab57b65d4e098f4a750f646\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830e89b2c29e0196d34cfab524bb040222ec9825e3af14adb66527f4a91cc650\",\"dweb:/ipfs/QmTm8HGyvwgcsFdxj9r7wKWdw6MCfD2vkZfoNLweActX5p\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/rKGEN.sol":{"rKGEN":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AlreadyExists","type":"error"},{"inputs":[],"name":"CannotDeleteTreasuryAddress","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidReceiverOrSender","type":"error"},{"inputs":[],"name":"NoPending","type":"error"},{"inputs":[],"name":"NotAdmin","type":"error"},{"inputs":[],"name":"NotBurnVault","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"NotTreasuryAddress","type":"error"},{"inputs":[],"name":"NotValidAddress","type":"error"},{"inputs":[],"name":"NotWhitelistReceiver","type":"error"},{"inputs":[],"name":"NotWhitelistSender","type":"error"},{"inputs":[],"name":"OnlyAdmin","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AccountFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AccountUnfrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"addedAddress","type":"address"}],"name":"AddedReceiverAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"addedAddress","type":"address"}],"name":"AddedSenderAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"addedAddress","type":"address"}],"name":"AddedTreasuryAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasury","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":true,"internalType":"address","name":"nominatedAdmin","type":"address"}],"name":"NominatedAdminEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"removedAddress","type":"address"}],"name":"RemovedReceiverAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"removedAddress","type":"address"}],"name":"RemovedSenderAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"msg","type":"string"},{"indexed":true,"internalType":"address","name":"removedAddress","type":"address"}],"name":"RemovedTreasuryAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":true,"internalType":"address","name":"addedAdmin","type":"address"}],"name":"UpdatedAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":true,"internalType":"address","name":"updatedAddress","type":"address"}],"name":"UpdatedBurnVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":true,"internalType":"address","name":"addedUser","type":"address"}],"name":"UpdatedMinter","type":"event"},{"inputs":[],"name":"BURN_VAULT_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WHITELIST_RECEIVER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WHITELIST_SENDER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"addTreasuryAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"addWhitelistReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"addWhitelistSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"freezeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"frozenAccounts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialAdmin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"nominateAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nominatedAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"removeTreasuryAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"}],"name":"removeWhitelistReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"senderAddress","type":"address"}],"name":"removeWhitelistSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_trustedForwarder","type":"address"},{"internalType":"bool","name":"_isTrusted","type":"bool"}],"name":"setTrustedForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"trustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"unfreezeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newBurnVault","type":"address"}],"name":"updateBurnVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newMinter","type":"address"}],"name":"updateMinter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_9676":{"entryPoint":null,"id":9676,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_808":{"entryPoint":34,"id":808,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_853":{"entryPoint":null,"id":853,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_839":{"entryPoint":null,"id":839,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:216:29","nodeType":"YulBlock","src":"0:216:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"113:101:29","nodeType":"YulBlock","src":"113:101:29","statements":[{"nativeSrc":"123:26:29","nodeType":"YulAssignment","src":"123:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:29","nodeType":"YulIdentifier","src":"135:9:29"},{"kind":"number","nativeSrc":"146:2:29","nodeType":"YulLiteral","src":"146:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:29","nodeType":"YulIdentifier","src":"131:3:29"},"nativeSrc":"131:18:29","nodeType":"YulFunctionCall","src":"131:18:29"},"variableNames":[{"name":"tail","nativeSrc":"123:4:29","nodeType":"YulIdentifier","src":"123:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:29","nodeType":"YulIdentifier","src":"165:9:29"},{"arguments":[{"name":"value0","nativeSrc":"180:6:29","nodeType":"YulIdentifier","src":"180:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"196:2:29","nodeType":"YulLiteral","src":"196:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"200:1:29","nodeType":"YulLiteral","src":"200:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"192:3:29","nodeType":"YulIdentifier","src":"192:3:29"},"nativeSrc":"192:10:29","nodeType":"YulFunctionCall","src":"192:10:29"},{"kind":"number","nativeSrc":"204:1:29","nodeType":"YulLiteral","src":"204:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"188:3:29","nodeType":"YulIdentifier","src":"188:3:29"},"nativeSrc":"188:18:29","nodeType":"YulFunctionCall","src":"188:18:29"}],"functionName":{"name":"and","nativeSrc":"176:3:29","nodeType":"YulIdentifier","src":"176:3:29"},"nativeSrc":"176:31:29","nodeType":"YulFunctionCall","src":"176:31:29"}],"functionName":{"name":"mstore","nativeSrc":"158:6:29","nodeType":"YulIdentifier","src":"158:6:29"},"nativeSrc":"158:50:29","nodeType":"YulFunctionCall","src":"158:50:29"},"nativeSrc":"158:50:29","nodeType":"YulExpressionStatement","src":"158:50:29"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:29","nodeType":"YulTypedName","src":"82:9:29","type":""},{"name":"value0","nativeSrc":"93:6:29","nodeType":"YulTypedName","src":"93:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:29","nodeType":"YulTypedName","src":"104:4:29","type":""}],"src":"14:200:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b612e7d80620000e66000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80639010d07c1161015c578063ca15c873116100ce578063d547741f11610087578063d547741f1461060a578063dd62ed3e1461061d578063e691d03b14610630578063e8ac653314610643578063f26c159f14610656578063f72c0d8b1461066957600080fd5b8063ca15c87314610594578063cd5ad4c5146105a7578063d11a57ec146105ba578063d403c878146105cf578063d4179e8d146105e2578063d5391393146105f557600080fd5b8063a3246ad311610120578063a3246ad314610513578063a8422c2f14610533578063a9059cbb14610548578063bae5ec041461055b578063c4d66de81461056e578063c80eeec21461058157600080fd5b80639010d07c146104b257806391d14854146104dd57806395d89b41146104f05780639dc29fac146104f8578063a217fddf1461050b57600080fd5b806335f14f14116101f5578063572b6c05116101b9578063572b6c05146103ef57806370a082311461041b57806376b8802414610451578063788649ea14610474578063860838a5146104875780638c3d7301146104aa57600080fd5b806335f14f141461038e57806336568abe146103a15780633a594a1d146103b457806340c10f19146103c95780634eb03f6e146103dc57600080fd5b8063175badcb11610247578063175badcb1461030c57806318160ddd1461031f57806323b872dd14610346578063248a9ca3146103595780632f2ff15d1461036c578063313ce5671461037f57600080fd5b806301ffc9a71461028457806306fdde03146102ac578063095ea7b3146102c15780630ee3153f146102d457806314eeb828146102e9575b600080fd5b6102976102923660046127c3565b610690565b60405190151581526020015b60405180910390f35b6102b46106bb565b6040516102a391906127ed565b6102976102cf366004612858565b61077e565b6102e76102e2366004612882565b6107a0565b005b6102fe600080516020612d6883398151915281565b6040519081526020016102a3565b6102e761031a366004612882565b610930565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02546102fe565b61029761035436600461289d565b610a59565b6102fe6103673660046128d9565b610c13565b6102e761037a3660046128f2565b610c35565b604051600881526020016102a3565b6102e761039c366004612882565b610c57565b6102e76103af3660046128f2565b610dba565b6102fe600080516020612e2883398151915281565b6102e76103d7366004612858565b610e02565b6102e76103ea366004612882565b610f15565b6102976103fd366004612882565b6001600160a01b031660009081526002602052604090205460ff1690565b6102fe610429366004612882565b6001600160a01b03166000908152600080516020612d88833981519152602052604090205490565b61029761045f366004612882565b60026020526000908152604090205460ff1681565b6102e7610482366004612882565b611053565b610297610495366004612882565b60016020526000908152604090205460ff1681565b6102e76110d1565b6104c56104c036600461291e565b611230565b6040516001600160a01b0390911681526020016102a3565b6102976104eb3660046128f2565b61125f565b6102b4611297565b6102e7610506366004612858565b6112d6565b6102fe600081565b6105266105213660046128d9565b611349565b6040516102a39190612940565b6102fe600080516020612da883398151915281565b610297610556366004612858565b61137b565b6102e7610569366004612882565b611520565b6102e761057c366004612882565b6116d4565b6102e761058f366004612882565b6118a7565b6102fe6105a23660046128d9565b6119bf565b6102e76105b5366004612882565b6119e5565b6102fe600080516020612e0883398151915281565b6102e76105dd366004612882565b611b0c565b6102e76105f0366004612882565b611c26565b6102fe600080516020612dc883398151915281565b6102e76106183660046128f2565b611d2e565b6102fe61062b36600461298d565b611d4a565b6102e761063e3660046129b7565b611d94565b6000546104c5906001600160a01b031681565b6102e7610664366004612882565b611dcb565b6102fe7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60006001600160e01b03198216635a05180f60e01b14806106b557506106b582611e4f565b92915050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020612d88833981519152916106fa906129f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610726906129f3565b80156107735780601f1061074857610100808354040283529160200191610773565b820191906000526020600020905b81548152906001019060200180831161075657829003601f168201915b505050505091505090565b600080610789611e84565b9050610796818585611e93565b5060019392505050565b60006107ab81611ea0565b816001600160a01b0381166107d357604051636e5ec59f60e01b815260040160405180910390fd5b6107eb600080516020612d688339815191528461125f565b6108355760405162461bcd60e51b81526020600482015260166024820152752737ba103bb434ba32b634b9ba32b21039b2b73232b960511b60448201526064015b60405180910390fd5b61084d600080516020612e088339815191528461125f565b156108935760405162461bcd60e51b815260206004820152601660248201527543616e6e6f742072656d6f766520747265617375727960501b604482015260640161082c565b6108ab600080516020612d6883398151915284611eb4565b50826001600160a01b03167f0e178bf7cc940ed3c4d14c1206db670ab5b94749d88646dc197f874a32372ea56040516109239060208082526025908201527f53656e64657220416464726573732052656d6f7665642046726f6d2057686974604082015264195b1a5cdd60da1b606082015260800190565b60405180910390a2505050565b600061093b81611ea0565b816001600160a01b03811661096357604051636e5ec59f60e01b815260040160405180910390fd5b61097b600080516020612da88339815191528461125f565b6109c75760405162461bcd60e51b815260206004820152601860248201527f4e6f742077686974656c69737465642072656365697665720000000000000000604482015260640161082c565b6109df600080516020612da883398151915284611eb4565b50826001600160a01b03167faaf02ba1bcb5b6c4b56e5b51c64ffb18bd8ed3760523f4d845a3c0cc0a8592446040516109239060208082526027908201527f526563656976657220416464726573732052656d6f7665642046726f6d2057686040820152661a5d195b1a5cdd60ca1b606082015260800190565b60008180600003610a7d5760405163162908e360e11b815260040160405180910390fd5b836001600160a01b038116610aa557604051636e5ec59f60e01b815260040160405180910390fd5b6001600160a01b038616600090815260016020526040902054869060ff1615610ae05760405162461bcd60e51b815260040161082c90612a2d565b6001600160a01b038616600090815260016020526040902054869060ff1615610b1b5760405162461bcd60e51b815260040161082c90612a2d565b8787816001600160a01b0316816001600160a01b031603610b785760405162461bcd60e51b815260206004820152601760248201527621b0b73737ba103a3930b739b332b9103a379039b2b63360491b604482015260640161082c565b610b90600080516020612d688339815191528361125f565b80610bae5750610bae600080516020612da88339815191528261125f565b610bfa5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642073656e646572206f72207265636569766572000000000000604482015260640161082c565b610c058a8a8a611ef9565b9a9950505050505050505050565b6000908152600080516020612de8833981519152602052604090206001015490565b610c3e82610c13565b610c4781611ea0565b610c518383611f27565b50505050565b6000610c6281611ea0565b816001600160a01b038116610c8a57604051636e5ec59f60e01b815260040160405180910390fd5b610ca2600080516020612e288339815191528461125f565b15610ce45760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e48189d5c9b881d985d5b1d60721b604482015260640161082c565b6000610cff600080516020612e288339815191526000611230565b90506001600160a01b03811615610d2a57610d28600080516020612e2883398151915282611eb4565b505b610d42600080516020612e2883398151915285611f27565b50836001600160a01b03167f27cb0b1f15cf273268c02c4ac770f2121077509fd09f76000f26fef2107c8e39604051610dac9060208082526018908201527f4275726e61626c65204164647265737320557064617465640000000000000000604082015260600190565b60405180910390a250505050565b610dc2611e84565b6001600160a01b0316816001600160a01b031614610df35760405163334bd91960e11b815260040160405180910390fd5b610dfd8282611eb4565b505050565b600080516020612dc8833981519152610e1a81611ea0565b8180600003610e3c5760405163162908e360e11b815260040160405180910390fd5b836001600160a01b038116610e6457604051636e5ec59f60e01b815260040160405180910390fd5b610e7c600080516020612e088339815191528661125f565b610ec15760405162461bcd60e51b81526020600482015260166024820152754e6f742061207472656173757279206164647265737360501b604482015260640161082c565b610ecb8585611f63565b846001600160a01b03167fbfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de85604051610f0691815260200190565b60405180910390a25050505050565b6000610f2081611ea0565b816001600160a01b038116610f4857604051636e5ec59f60e01b815260040160405180910390fd5b610f60600080516020612dc88339815191528461125f565b15610f9e5760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c9036b4b73a32b960911b604482015260640161082c565b6000610fb9600080516020612dc88339815191526000611230565b90506001600160a01b03811615610fe457610fe2600080516020612dc883398151915282611eb4565b505b610ffc600080516020612dc883398151915285611f27565b50836001600160a01b03167f6de4157337b92becadb23ac8c53bdcaba13d56eaa4e2350eff3e65c4d1d84c7c604051610dac906020808252600a90820152692732bb9026b4b73a32b960b11b604082015260600190565b600061105e81611ea0565b816001600160a01b03811661108657604051636e5ec59f60e01b815260040160405180910390fd5b6001600160a01b038316600081815260016020526040808220805460ff19169055517ff915cd9fe234de6e8d3afe7bf2388d35b2b6d48e8c629a24602019bde79c213a9190a2505050565b33806110f057604051636e5ec59f60e01b815260040160405180910390fd5b6000546001600160a01b0316331461113a5760405162461bcd60e51b815260206004820152600d60248201526c139bdd081b9bdb5a5b985d1959609a1b604482015260640161082c565b6000546001600160a01b031661118a5760405162461bcd60e51b81526020600482015260156024820152742737903832b73234b733903737b6b4b730ba34b7b760591b604482015260640161082c565b60006111968180611230565b90506001600160a01b038116156111b4576111b2600082611eb4565b505b6111bf600033611f27565b50600080546001600160a01b031916905560405133907f33357bb61b6ce4d9e2a54fd3d9ec5807e7df4bbd6ba3fa1b0860c0a1a39e700a90611224906020808252600f908201526e13995dc810591b5a5b881059191959608a1b604082015260600190565b60405180910390a25050565b6000828152600080516020612d488339815191526020819052604082206112579084611f9d565b949350505050565b6000918252600080516020612de8833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020612d88833981519152916106fa906129f3565b600080516020612e288339815191526112ee81611ea0565b81806000036113105760405163162908e360e11b815260040160405180910390fd5b836001600160a01b03811661133857604051636e5ec59f60e01b815260040160405180910390fd5b6113428585611fa9565b5050505050565b6000818152600080516020612d48833981519152602081905260409091206060919061137490611fdf565b9392505050565b6000818060000361139f5760405163162908e360e11b815260040160405180910390fd5b836001600160a01b0381166113c757604051636e5ec59f60e01b815260040160405180910390fd5b3360008181526001602052604090205460ff16156113f75760405162461bcd60e51b815260040161082c90612a2d565b6001600160a01b038616600090815260016020526040902054869060ff16156114325760405162461bcd60e51b815260040161082c90612a2d565b33876001600160a01b0381168290036114875760405162461bcd60e51b815260206004820152601760248201527621b0b73737ba103a3930b739b332b9103a379039b2b63360491b604482015260640161082c565b61149f600080516020612d688339815191528361125f565b806114bd57506114bd600080516020612da88339815191528261125f565b6115095760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642073656e646572206f72207265636569766572000000000000604482015260640161082c565b6115138989611fec565b9998505050505050505050565b600061152b81611ea0565b816001600160a01b03811661155357604051636e5ec59f60e01b815260040160405180910390fd5b61156b600080516020612e088339815191528461125f565b156115ab5760405162461bcd60e51b815260206004820152601060248201526f416c726561647920747265617375727960801b604482015260640161082c565b6115c3600080516020612e0883398151915284611f27565b506115dc600080516020612d688339815191528461125f565b61166b576115f8600080516020612d6883398151915284611f27565b50826001600160a01b03167fa148f9af0f634918fbaf23b2be442ee99c628242fb2805bf87c08e4be7a1afac604051611662906020808252601e908201527f4e65772053656e64657220416464726573732057686974656c69737465640000604082015260600190565b60405180910390a25b826001600160a01b03167fd93a23cfa249287d5dd4d056066c79b1a45bc8608890ea92b4dafa6e874b3fd0604051610923906020808252601a908201527f4e65772054726561737572792041646472657373204164646564000000000000604082015260600190565b60006116de612004565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156117065750825b905060008267ffffffffffffffff1660011480156117235750303b155b905081158015611731575080155b1561174f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561177957845460ff60401b1916600160401b1785555b6117bd604051806040016040528060058152602001643925a3a2a760d91b815250604051806040016040528060058152602001643925a3a2a760d91b81525061202d565b6117c561203f565b6117cd612049565b6117d8600087611f27565b506117f1600080516020612dc883398151915287611f27565b5061180a600080516020612e2883398151915287611f27565b506118357f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e387611f27565b50611859866118466008600a612b52565b611854906317d78400612b61565b611f63565b831561189f57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60006118b281611ea0565b816001600160a01b0381166118da57604051636e5ec59f60e01b815260040160405180910390fd5b6118f2600080516020612da88339815191528461125f565b1561193f5760405162461bcd60e51b815260206004820152601c60248201527f416c72656164792077686974656c697374656420726563656976657200000000604482015260640161082c565b611957600080516020612da883398151915284611f27565b50826001600160a01b03167ffe6d2d6f86f1b4f5f6d5833a27d9eb52bba0f8aad51eb089023c6a4dcfd21a8f604051610923906020808252818101527f4e657720526563656976657220416464726573732057686974656c6973746564604082015260600190565b6000818152600080516020612d4883398151915260208190526040822061137490612059565b60006119f081611ea0565b816001600160a01b038116611a1857604051636e5ec59f60e01b815260040160405180910390fd5b336001600160a01b03841603611a675760405162461bcd60e51b815260206004820152601460248201527321b0b73737ba103737b6b4b730ba329039b2b63360611b604482015260640161082c565b600080546001600160a01b0385166001600160a01b031990911681179091556040517fa9c1d417fdb88c493dbab369bd79c043aa4c6c9522a681d9334ba091ede58cd990610923906020808252603a908201527f4e65772041646d696e204e6f6d696e617465642c204e6f77206e65772061646d60408201527f696e206e65656420746f206163636570742074686520726f6c65000000000000606082015260800190565b6000611b1781611ea0565b816001600160a01b038116611b3f57604051636e5ec59f60e01b815260040160405180910390fd5b611b57600080516020612d688339815191528461125f565b15611ba45760405162461bcd60e51b815260206004820152601a60248201527f416c72656164792077686974656c69737465642073656e646572000000000000604482015260640161082c565b611bbc600080516020612d6883398151915284611f27565b50826001600160a01b03167fa148f9af0f634918fbaf23b2be442ee99c628242fb2805bf87c08e4be7a1afac604051610923906020808252601e908201527f4e65772053656e64657220416464726573732057686974656c69737465640000604082015260600190565b6000611c3181611ea0565b816001600160a01b038116611c5957604051636e5ec59f60e01b815260040160405180910390fd5b611c71600080516020612e088339815191528461125f565b611cac5760405162461bcd60e51b815260206004820152600c60248201526b4e6f7420747265617375727960a01b604482015260640161082c565b611cc4600080516020612e0883398151915284611eb4565b50826001600160a01b03167f238be719becf7de7673229da18d51189916a74316ccd29739e8bf3fa30288d876040516109239060208082526018908201527f547265617375727920416464726573732052656d6f7665640000000000000000604082015260600190565b611d3782610c13565b611d4081611ea0565b610c518383611eb4565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6000611d9f81611ea0565b506001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b6000611dd681611ea0565b816001600160a01b038116611dfe57604051636e5ec59f60e01b815260040160405180910390fd5b6001600160a01b0383166000818152600160208190526040808320805460ff1916909217909155517f4f2a367e694e71282f29ab5eaa04c4c0be45ac5bf2ca74fb67068b98bdc2887d9190a2505050565b60006001600160e01b03198216637965db0b60e01b14806106b557506301ffc9a760e01b6001600160e01b03198316146106b5565b6000611e8e612063565b905090565b610dfd83838360016120bf565b611eb181611eac611e84565b6121a6565b50565b6000600080516020612d4883398151915281611ed085856121df565b90508015611257576000858152602083905260409020611ef09085612283565b50949350505050565b600080611f04611e84565b9050611f11858285612298565b611f1c8585856122f9565b506001949350505050565b6000600080516020612d4883398151915281611f438585612358565b90508015611257576000858152602083905260409020611ef090856123f4565b6001600160a01b038216611f8d5760405163ec442f0560e01b81526000600482015260240161082c565b611f9960008383612409565b5050565b60006113748383612547565b6001600160a01b038216611fd357604051634b637e8f60e11b81526000600482015260240161082c565b611f9982600083612409565b6060600061137483612571565b600080611ff7611e84565b90506107968185856122f9565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106b5565b6120356125cd565b611f9982826125f2565b6120476125cd565b565b6120516125cd565b612047612643565b60006106b5825490565b33600090815260026020526040812054369060149060ff1680156120875750808210155b156120b7576000366120998385612b78565b6120a4928290612b8b565b6120ad91612bb5565b60601c9250505090565b339250505090565b600080516020612d888339815191526001600160a01b0385166120f85760405163e602df0560e01b81526000600482015260240161082c565b6001600160a01b03841661212257604051634a1406b160e11b81526000600482015260240161082c565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561134257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161219791815260200190565b60405180910390a35050505050565b6121b0828261125f565b611f995760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161082c565b6000600080516020612de88339815191526121fa848461125f565b15612279576000848152602082815260408083206001600160a01b03871684529091529020805460ff1916905561222f611e84565b6001600160a01b0316836001600160a01b0316857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506106b5565b60009150506106b5565b6000611374836001600160a01b038416612671565b60006122a48484611d4a565b9050600019811015610c5157818110156122ea57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161082c565b610c51848484840360006120bf565b6001600160a01b03831661232357604051634b637e8f60e11b81526000600482015260240161082c565b6001600160a01b03821661234d5760405163ec442f0560e01b81526000600482015260240161082c565b610dfd838383612409565b6000600080516020612de8833981519152612373848461125f565b612279576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556123aa611e84565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506106b5565b6000611374836001600160a01b03841661275a565b600080516020612d888339815191526001600160a01b038416612445578181600201600082825461243a9190612bea565b909155506124b79050565b6001600160a01b038416600090815260208290526040902054828110156124985760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161082c565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b0383166124d55760028101805483900390556124f4565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161253991815260200190565b60405180910390a350505050565b600082600001828154811061255e5761255e612bfd565b9060005260206000200154905092915050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156125c157602002820191906000526020600020905b8154815260200190600101908083116125ad575b50505050509050919050565b6125d56127a9565b61204757604051631afcd79f60e31b815260040160405180910390fd5b6125fa6125cd565b600080516020612d888339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036126348482612c71565b5060048101610c518382612c71565b61264b6125cd565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b60008181526001830160205260408120548015612279576000612695600183612b78565b85549091506000906126a990600190612b78565b905080821461270e5760008660000182815481106126c9576126c9612bfd565b90600052602060002001549050808760000184815481106126ec576126ec612bfd565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061271f5761271f612d31565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506106b5565b60008181526001830160205260408120546127a1575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106b5565b5060006106b5565b60006127b3612004565b54600160401b900460ff16919050565b6000602082840312156127d557600080fd5b81356001600160e01b03198116811461137457600080fd5b60006020808352835180602085015260005b8181101561281b578581018301518582016040015282016127ff565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461285357600080fd5b919050565b6000806040838503121561286b57600080fd5b6128748361283c565b946020939093013593505050565b60006020828403121561289457600080fd5b6113748261283c565b6000806000606084860312156128b257600080fd5b6128bb8461283c565b92506128c96020850161283c565b9150604084013590509250925092565b6000602082840312156128eb57600080fd5b5035919050565b6000806040838503121561290557600080fd5b823591506129156020840161283c565b90509250929050565b6000806040838503121561293157600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156129815783516001600160a01b03168352928401929184019160010161295c565b50909695505050505050565b600080604083850312156129a057600080fd5b6129a98361283c565b91506129156020840161283c565b600080604083850312156129ca57600080fd5b6129d38361283c565b9150602083013580151581146129e857600080fd5b809150509250929050565b600181811c90821680612a0757607f821691505b602082108103612a2757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527020b1b1b7bab73a1034b990333937bd32b760791b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115612aa9578160001904821115612a8f57612a8f612a58565b80851615612a9c57918102915b93841c9390800290612a73565b509250929050565b600082612ac0575060016106b5565b81612acd575060006106b5565b8160018114612ae35760028114612aed57612b09565b60019150506106b5565b60ff841115612afe57612afe612a58565b50506001821b6106b5565b5060208310610133831016604e8410600b8410161715612b2c575081810a6106b5565b612b368383612a6e565b8060001904821115612b4a57612b4a612a58565b029392505050565b600061137460ff841683612ab1565b80820281158282048414176106b5576106b5612a58565b818103818111156106b5576106b5612a58565b60008085851115612b9b57600080fd5b83861115612ba857600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015612be25780818660140360031b1b83161692505b505092915050565b808201808211156106b5576106b5612a58565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610dfd576000816000526020600020601f850160051c81016020861015612c525750805b601f850160051c820191505b8181101561189f57828155600101612c5e565b815167ffffffffffffffff811115612c8b57612c8b612c13565b612c9f81612c9984546129f3565b84612c29565b602080601f831160018114612cd45760008415612cbc5750858301515b600019600386901b1c1916600185901b17855561189f565b600085815260208120601f198616915b82811015612d0357888601518255948401946001909101908401612ce4565b5085821015612d215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfec1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000d22ed3a112884bd9fd6003b71d02c2a671cf1ddcc8740e9a0a8e3ab3973e344f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00da4d20b686f7404041d4a40bc922508734f59795e8a7394e246602eb8ec5b77b9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a602dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800e1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca9cb4c1560f0ac783af04187bda6c71d491dee6a63e28b3ad8457b60790f38eebaa26469706673582212200b34e04657972da5769e85e3639cf6947222a4df6dfc41aaa3c0820f52355d8164736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1C PUSH3 0x22 JUMP JUMPDEST PUSH3 0xD6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH3 0xD3 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E7D DUP1 PUSH3 0xE6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xE691D03B EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xE8AC6533 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0xCD5AD4C5 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xD11A57EC EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xD403C878 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xD4179E8D EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xA8422C2F EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xBAE5EC04 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xC80EEEC2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35F14F14 GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x572B6C05 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x76B88024 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x860838A5 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x8C3D7301 EQ PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35F14F14 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x3A594A1D EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x4EB03F6E EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x175BADCB GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x175BADCB EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xEE3153F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x14EEB828 EQ PUSH2 0x2E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x297 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x289D JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x291E JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x63E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B7 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x2FE PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6B5 JUMPI POP PUSH2 0x6B5 DUP3 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6FA SWAP1 PUSH2 0x29F3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x726 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x773 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x748 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x773 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x756 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x789 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x796 DUP2 DUP6 DUP6 PUSH2 0x1E93 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AB DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA103BB434BA32B634B9BA32B21039B2B73232B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F742072656D6F7665207472656173757279 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x8AB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE178BF7CC940ED3C4D14C1206DB670AB5B94749D88646DC197F874A32372EA5 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x53656E64657220416464726573732052656D6F7665642046726F6D2057686974 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x195B1A5CDD PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742077686974656C69737465642072656365697665720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x9DF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAAF02BA1BCB5B6C4B56E5B51C64FFB18BD8ED3760523F4D845A3C0CC0A859244 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x526563656976657220416464726573732052656D6F7665642046726F6D205768 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1A5D195B1A5CDD PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST DUP8 DUP8 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B73737BA103A3930B739B332B9103A379039B2B633 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xB90 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH2 0xBAE JUMPI POP PUSH2 0xBAE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572206F72207265636569766572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xC05 DUP11 DUP11 DUP11 PUSH2 0x1EF9 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC3E DUP3 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xC51 DUP4 DUP4 PUSH2 0x1F27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E48189D5C9B881D985D5B1D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD28 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0xD42 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH2 0x1F27 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27CB0B1F15CF273268C02C4AC770F2121077509FD09F76000F26FEF2107C8E39 PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4275726E61626C65204164647265737320557064617465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xDC2 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP3 DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE1A DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420612074726561737572792061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xECB DUP6 DUP6 PUSH2 0x1F63 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBFA21AA5D5F9A1F0120A95E7C0749F389863CBDBFFF531AA7339077A5BC919DE DUP6 PUSH1 0x40 MLOAD PUSH2 0xF06 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF20 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF60 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C9036B4B73A32B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFE4 JUMPI PUSH2 0xFE2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0xFFC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH2 0x1F27 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6DE4157337B92BECADB23AC8C53BDCABA13D56EAA4E2350EFF3E65C4D1D84C7C PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x2732BB9026B4B73A32B9 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xF915CD9FE234DE6E8D3AFE7BF2388D35B2B6D48E8C629A24602019BDE79C213A SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER DUP1 PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD081B9BDB5A5B985D1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x118A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737903832B73234B733903737B6B4B730BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 DUP2 DUP1 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B2 PUSH1 0x0 DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x11BF PUSH1 0x0 CALLER PUSH2 0x1F27 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x33357BB61B6CE4D9E2A54FD3D9EC5807E7DF4BBD6BA3FA1B0860C0A1A39E700A SWAP1 PUSH2 0x1224 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x13995DC810591B5A5B881059191959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x1257 SWAP1 DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6FA SWAP1 PUSH2 0x29F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12EE DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1342 DUP6 DUP6 PUSH2 0x1FA9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1374 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST CALLER DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 SWAP1 SUB PUSH2 0x1487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B73737BA103A3930B739B332B9103A379039B2B633 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x149F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH2 0x14BD JUMPI POP PUSH2 0x14BD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572206F72207265636569766572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1513 DUP10 DUP10 PUSH2 0x1FEC JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152B DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416C7265616479207472656173757279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x15C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x15DC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x166B JUMPI PUSH2 0x15F8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA148F9AF0F634918FBAF23B2BE442EE99C628242FB2805BF87C08E4BE7A1AFAC PUSH1 0x40 MLOAD PUSH2 0x1662 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772053656E64657220416464726573732057686974656C69737465640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD93A23CFA249287D5DD4D056066C79B1A45BC8608890EA92B4DAFA6E874B3FD0 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772054726561737572792041646472657373204164646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DE PUSH2 0x2004 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1706 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1723 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1731 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1779 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x17BD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x3925A3A2A7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x3925A3A2A7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x202D JUMP JUMPDEST PUSH2 0x17C5 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x17CD PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x17D8 PUSH1 0x0 DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x17F1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x180A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1835 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1859 DUP7 PUSH2 0x1846 PUSH1 0x8 PUSH1 0xA PUSH2 0x2B52 JUMP JUMPDEST PUSH2 0x1854 SWAP1 PUSH4 0x17D78400 PUSH2 0x2B61 JUMP JUMPDEST PUSH2 0x1F63 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x189F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B2 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18F2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792077686974656C697374656420726563656976657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1957 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFE6D2D6F86F1B4F5F6D5833A27D9EB52BBA0F8AAD51EB089023C6A4DCFD21A8F PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4E657720526563656976657220416464726573732057686974656C6973746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x1374 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F0 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x1A67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B73737BA103737B6B4B730BA329039B2B633 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9C1D417FDB88C493DBAB369BD79C043AA4C6C9522A681D9334BA091EDE58CD9 SWAP1 PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772041646D696E204E6F6D696E617465642C204E6F77206E65772061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x696E206E65656420746F206163636570742074686520726F6C65000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B57 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792077686974656C69737465642073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1BBC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA148F9AF0F634918FBAF23B2BE442EE99C628242FB2805BF87C08E4BE7A1AFAC PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772053656E64657220416464726573732057686974656C69737465640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C71 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1CAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F74207472656173757279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1CC4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x238BE719BECF7DE7673229DA18D51189916A74316CCD29739E8BF3FA30288D87 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x547265617375727920416464726573732052656D6F7665640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D37 DUP3 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xC51 DUP4 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP2 PUSH2 0x1EA0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x4F2A367E694E71282F29AB5EAA04C4C0BE45AC5BF2CA74FB67068B98BDC2887D SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x1EB1 DUP2 PUSH2 0x1EAC PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x21A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1ED0 DUP6 DUP6 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF0 SWAP1 DUP6 PUSH2 0x2283 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F04 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F11 DUP6 DUP3 DUP6 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x1F1C DUP6 DUP6 DUP6 PUSH2 0x22F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1F43 DUP6 DUP6 PUSH2 0x2358 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF0 SWAP1 DUP6 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1F99 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 DUP4 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1F99 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FF7 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x796 DUP2 DUP6 DUP6 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2035 PUSH2 0x25CD JUMP JUMPDEST PUSH2 0x1F99 DUP3 DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH2 0x2047 PUSH2 0x25CD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2051 PUSH2 0x25CD JUMP JUMPDEST PUSH2 0x2047 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B5 DUP3 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD CALLDATASIZE SWAP1 PUSH1 0x14 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2087 JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x20B7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH2 0x2099 DUP4 DUP6 PUSH2 0x2B78 JUMP JUMPDEST PUSH2 0x20A4 SWAP3 DUP3 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH2 0x20AD SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1342 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP3 DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1F99 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x21FA DUP5 DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x222F PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A4 DUP5 DUP5 PUSH2 0x1D4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xC51 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x22EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xC51 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2373 DUP5 DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x2279 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x23AA PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x275A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2445 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x243A SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24B7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2498 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24D5 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2539 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x255E JUMPI PUSH2 0x255E PUSH2 0x2BFD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x25C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x25AD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x2047 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25FA PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2634 DUP5 DUP3 PUSH2 0x2C71 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0xC51 DUP4 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH2 0x264B PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 PUSH2 0x2695 PUSH1 0x1 DUP4 PUSH2 0x2B78 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x26A9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x270E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26C9 JUMPI PUSH2 0x26C9 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x26EC JUMPI PUSH2 0x26EC PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x271F JUMPI PUSH2 0x271F PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x27A1 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B3 PUSH2 0x2004 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x281B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x27FF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2874 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1374 DUP3 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28BB DUP5 PUSH2 0x283C JUMP JUMPDEST SWAP3 POP PUSH2 0x28C9 PUSH1 0x20 DUP6 ADD PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2915 PUSH1 0x20 DUP5 ADD PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2981 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x295C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29A9 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 PUSH1 0x20 DUP5 ADD PUSH2 0x283C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29D3 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x29E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A07 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B1B1B7BAB73A1034B990333937BD32B7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2AA9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2A8F JUMPI PUSH2 0x2A8F PUSH2 0x2A58 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2A9C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2A73 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AC0 JUMPI POP PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST DUP2 PUSH2 0x2ACD JUMPI POP PUSH1 0x0 PUSH2 0x6B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2AE3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2AED JUMPI PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2AFE PUSH2 0x2A58 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2B2C JUMPI POP DUP2 DUP2 EXP PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2B36 DUP4 DUP4 PUSH2 0x2A6E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2B4A JUMPI PUSH2 0x2B4A PUSH2 0x2A58 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2AB1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2B9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2BA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x2BE2 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2C52 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C5E JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C8B JUMPI PUSH2 0x2C8B PUSH2 0x2C13 JUMP JUMPDEST PUSH2 0x2C9F DUP2 PUSH2 0x2C99 DUP5 SLOAD PUSH2 0x29F3 JUMP JUMPDEST DUP5 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2CD4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2CBC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x189F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D03 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2CE4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2D21 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC1 0xF6 INVALID 0x24 PUSH3 0x1CE81E 0xC5 DUP3 PUSH29 0xAF0253CADB74709B061630E6B55E82371705932000D22ED3A112884BD9 REVERT PUSH1 0x3 0xB7 SAR MUL 0xC2 0xA6 PUSH18 0xCF1DDCC8740E9A0A8E3AB3973E344F52C632 SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00DA4D20B686 0xF7 BLOCKHASH BLOCKHASH COINBASE 0xD4 LOG4 SIGNEXTEND 0xC9 0x22 POP DUP8 CALLVALUE CREATE2 SWAP8 SWAP6 0xE8 0xA7 CODECOPY 0x4E 0x24 PUSH7 0x2EB8EC5B77B9F 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xE1 0xDC 0xBD 0xB9 SAR CALLCODE PUSH19 0x12A29BC27177C840CF2F819ECF2187432E1FAC DUP7 0xC2 0xDD 0x5D 0xFC 0xA9 0xCB 0x4C ISZERO PUSH1 0xF0 0xAC PUSH25 0x3AF04187BDA6C71D491DEE6A63E28B3AD8457B60790F38EEBA LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLVALUE 0xE0 CHAINID JUMPI SWAP8 0x2D 0xA5 PUSH23 0x9E85E3639CF6947222A4DF6DFC41AAA3C0820F52355D81 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"467:12032:27:-:0;;;2584:53;;;;;;;;;-1:-1:-1;2608:22:27;:20;:22::i;:::-;467:12032;;7709:422:2;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:2;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:2;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:2;-1:-1:-1;;;;;8033:33:2;;;;;8085:29;;158:50:29;;;8085:29:2;;146:2:29;131:18;8085:29:2;;;;;;;7979:146;7758:373;7709:422::o;14:200:29:-;467:12032:27;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BURN_VAULT_ROLE_9538":{"entryPoint":null,"id":9538,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":null,"id":28,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_9533":{"entryPoint":null,"id":9533,"parameterSlots":0,"returnSlots":0},"@TREASURY_ROLE_9543":{"entryPoint":null,"id":9543,"parameterSlots":0,"returnSlots":0},"@UPGRADER_ROLE_9558":{"entryPoint":null,"id":9558,"parameterSlots":0,"returnSlots":0},"@WHITELIST_RECEIVER_ROLE_9553":{"entryPoint":null,"id":9553,"parameterSlots":0,"returnSlots":0},"@WHITELIST_SENDER_ROLE_9548":{"entryPoint":null,"id":9548,"parameterSlots":0,"returnSlots":0},"@__AccessControlEnumerable_init_407":{"entryPoint":8255,"id":407,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_922":{"entryPoint":8237,"id":922,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_950":{"entryPoint":9714,"id":950,"parameterSlots":2,"returnSlots":0},"@__ReentrancyGuard_init_1557":{"entryPoint":8265,"id":1557,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1575":{"entryPoint":9795,"id":1575,"parameterSlots":0,"returnSlots":0},"@_add_8754":{"entryPoint":10074,"id":8754,"parameterSlots":2,"returnSlots":1},"@_approve_1354":{"entryPoint":7827,"id":1354,"parameterSlots":3,"returnSlots":0},"@_approve_1422":{"entryPoint":8383,"id":1422,"parameterSlots":4,"returnSlots":0},"@_at_8931":{"entryPoint":9543,"id":8931,"parameterSlots":2,"returnSlots":1},"@_burn_1336":{"entryPoint":8105,"id":1336,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_762":{"entryPoint":9677,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":7840,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":8614,"id":150,"parameterSlots":2,"returnSlots":0},"@_contains_8900":{"entryPoint":null,"id":8900,"parameterSlots":2,"returnSlots":1},"@_contextSuffixLength_10471":{"entryPoint":null,"id":10471,"parameterSlots":0,"returnSlots":1},"@_contextSuffixLength_9510":{"entryPoint":null,"id":9510,"parameterSlots":0,"returnSlots":1},"@_getAccessControlEnumerableStorage_401":{"entryPoint":null,"id":401,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_46":{"entryPoint":null,"id":46,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_906":{"entryPoint":null,"id":906,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_853":{"entryPoint":8196,"id":853,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1545":{"entryPoint":null,"id":1545,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":9048,"id":315,"parameterSlots":2,"returnSlots":1},"@_grantRole_545":{"entryPoint":7975,"id":545,"parameterSlots":2,"returnSlots":1},"@_initializableStorageSlot_839":{"entryPoint":null,"id":839,"parameterSlots":0,"returnSlots":1},"@_isInitializing_830":{"entryPoint":10153,"id":830,"parameterSlots":0,"returnSlots":1},"@_length_8914":{"entryPoint":null,"id":8914,"parameterSlots":1,"returnSlots":1},"@_mint_1303":{"entryPoint":8035,"id":1303,"parameterSlots":2,"returnSlots":0},"@_msgSender_10445":{"entryPoint":7812,"id":10445,"parameterSlots":0,"returnSlots":1},"@_msgSender_1499":{"entryPoint":null,"id":1499,"parameterSlots":0,"returnSlots":1},"@_msgSender_9459":{"entryPoint":8291,"id":9459,"parameterSlots":0,"returnSlots":1},"@_remove_8838":{"entryPoint":9841,"id":8838,"parameterSlots":2,"returnSlots":1},"@_revokeRole_361":{"entryPoint":8671,"id":361,"parameterSlots":2,"returnSlots":1},"@_revokeRole_585":{"entryPoint":7860,"id":585,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1470":{"entryPoint":8856,"id":1470,"parameterSlots":3,"returnSlots":0},"@_transfer_1178":{"entryPoint":8953,"id":1178,"parameterSlots":3,"returnSlots":0},"@_update_1270":{"entryPoint":9225,"id":1270,"parameterSlots":3,"returnSlots":0},"@_values_8945":{"entryPoint":9585,"id":8945,"parameterSlots":1,"returnSlots":1},"@acceptAdminRole_10083":{"entryPoint":4305,"id":10083,"parameterSlots":0,"returnSlots":0},"@addTreasuryAddress_10236":{"entryPoint":5408,"id":10236,"parameterSlots":1,"returnSlots":0},"@addWhitelistReceiver_10371":{"entryPoint":6311,"id":10371,"parameterSlots":1,"returnSlots":0},"@addWhitelistSender_10299":{"entryPoint":6924,"id":10299,"parameterSlots":1,"returnSlots":0},"@add_9110":{"entryPoint":9204,"id":9110,"parameterSlots":2,"returnSlots":1},"@allowance_1075":{"entryPoint":7498,"id":1075,"parameterSlots":2,"returnSlots":1},"@approve_1099":{"entryPoint":1918,"id":1099,"parameterSlots":2,"returnSlots":1},"@at_9219":{"entryPoint":8093,"id":9219,"parameterSlots":2,"returnSlots":1},"@balanceOf_1027":{"entryPoint":null,"id":1027,"parameterSlots":1,"returnSlots":1},"@burn_9941":{"entryPoint":4822,"id":9941,"parameterSlots":2,"returnSlots":0},"@decimals_9734":{"entryPoint":null,"id":9734,"parameterSlots":0,"returnSlots":1},"@freezeAccount_9964":{"entryPoint":7627,"id":9964,"parameterSlots":1,"returnSlots":0},"@frozenAccounts_9564":{"entryPoint":null,"id":9564,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_171":{"entryPoint":3091,"id":171,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_482":{"entryPoint":6591,"id":482,"parameterSlots":1,"returnSlots":1},"@getRoleMember_460":{"entryPoint":4656,"id":460,"parameterSlots":2,"returnSlots":1},"@getRoleMembers_505":{"entryPoint":4937,"id":505,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":3125,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":4703,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_9725":{"entryPoint":5844,"id":9725,"parameterSlots":1,"returnSlots":0},"@isTrustedForwarder_10432":{"entryPoint":null,"id":10432,"parameterSlots":1,"returnSlots":1},"@length_9192":{"entryPoint":8281,"id":9192,"parameterSlots":1,"returnSlots":1},"@mint_9918":{"entryPoint":3586,"id":9918,"parameterSlots":2,"returnSlots":0},"@name_966":{"entryPoint":1723,"id":966,"parameterSlots":0,"returnSlots":1},"@nominateAdmin_10017":{"entryPoint":6629,"id":10017,"parameterSlots":1,"returnSlots":0},"@nominatedAdmin_9560":{"entryPoint":null,"id":9560,"parameterSlots":0,"returnSlots":0},"@removeTreasuryAddress_10267":{"entryPoint":7206,"id":10267,"parameterSlots":1,"returnSlots":0},"@removeWhitelistReceiver_10402":{"entryPoint":2352,"id":10402,"parameterSlots":1,"returnSlots":0},"@removeWhitelistSender_10339":{"entryPoint":1952,"id":10339,"parameterSlots":1,"returnSlots":0},"@remove_9137":{"entryPoint":8835,"id":9137,"parameterSlots":2,"returnSlots":1},"@renounceRole_232":{"entryPoint":3514,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":7470,"id":209,"parameterSlots":2,"returnSlots":0},"@setTrustedForwarder_10419":{"entryPoint":7572,"id":10419,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1685":{"entryPoint":null,"id":1685,"parameterSlots":1,"returnSlots":1},"@supportsInterface_435":{"entryPoint":1680,"id":435,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":7759,"id":91,"parameterSlots":1,"returnSlots":1},"@symbol_982":{"entryPoint":4759,"id":982,"parameterSlots":0,"returnSlots":1},"@totalSupply_1007":{"entryPoint":null,"id":1007,"parameterSlots":0,"returnSlots":1},"@transferFrom_1131":{"entryPoint":7929,"id":1131,"parameterSlots":3,"returnSlots":1},"@transferFrom_9882":{"entryPoint":2649,"id":9882,"parameterSlots":3,"returnSlots":1},"@transfer_1051":{"entryPoint":8172,"id":1051,"parameterSlots":2,"returnSlots":1},"@transfer_9845":{"entryPoint":4987,"id":9845,"parameterSlots":2,"returnSlots":1},"@trustedForwarder_9568":{"entryPoint":null,"id":9568,"parameterSlots":0,"returnSlots":0},"@unfreezeAccount_9987":{"entryPoint":4179,"id":9987,"parameterSlots":1,"returnSlots":0},"@updateBurnVault_10187":{"entryPoint":3159,"id":10187,"parameterSlots":1,"returnSlots":0},"@updateMinter_10135":{"entryPoint":3861,"id":10135,"parameterSlots":1,"returnSlots":0},"@values_9249":{"entryPoint":8159,"id":9249,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":10300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10637,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10397,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10679,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10328,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":10457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":10482,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":10526,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06fe93bd62b86952d7d45d3607a1af05329ef3f1a265455c47e7e923d4c6c91f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0732a6164fc5ad94ef671b27945f3ee929ac0f99b1a7db6a8b65db08506dfe5a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_08de87ca866785396b4db24ad7cd371b3cd35b0ee04781a9ea47f5023c81fb31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_127ab9926eb405b5f4fe18fc4b7135a1e67c1158c5db81537d6d96ea16f7c145__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1606976bca4abf9103ed084b42233e8a5473021f32df1896688702b884a8ec56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e00ac7e1279f916115359abdeb64bbee0973e9d1fae1ea63f9db0c4b52ed0db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5c4f849172add0ee9051b6c29f3e21501e3cdfa77d3efc19078e185b7b30d750__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_60025fe8a16034c344f99fb27745f11571f566c0ad6bead632c46a6fe7ab4e06__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e61780c94bfda6c255ee69289c8bdaa3616ce54a5740fe437854d788bcd4833__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_783d59426230f00e811d19f70cbc216f514e1135bf5f8434dcb11831c50409e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7eded41d906ad8da9da4aaa2cae68f4bc27e405921f0ba877c84d9c54d24fd39__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83db599dc1885d338eaf0f66e0e5c2cd7c2529b829cb69eac7d07ee0dc3e7980__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_888da2894a44edbf1c03e9128c6e70054075a69831971d4c9689ad0c53419709__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_960f4b71dd6f99169c4f83e15f5d7adab2efe25ef7286f80dfb2c3a92a31387a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98412e28c30dd0c81883dad8f533a5fc3f6afc2c2ff2ed45e97513d9402cb97d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c04771ce8b365808d82fcedcff16ad41bc76cd3603245cc6cac98a7ae6a1852__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10797,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae4e56f1941b3343db2824c2bb1fc5e38f2909bfbd08017fa6f02a1833e710d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bba98c6c5eee4392be61cce76bb892247efee416ed42d1b480f24b0cffd19739__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d835f9bafafc594c77658738155ae0e7f00fb1f12a6421deb992433937d83b74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df5b65dd6872d85bb7648f9de88a45e204ec3bdd2f26b6ce2065e7755eae0811__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dfeff081a89c199601855fa7df8d8cfe88bd1fd5c5c86ef0392d1d0cbe760b2a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f150a6193dc925490f18a478495ba2387b38e614c5c2039387a5d1078f56c5db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f968dab381b01065bcd659c7b7ca684b6125a9262124b87757c3ce4b4a61b4e9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":11147,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":11242,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":10862,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":11090,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":10929,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11128,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":11305,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":11189,"id":null,"parameterSlots":2,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11377,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10739,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10840,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":11569,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11261,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11283,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:20481:29","nodeType":"YulBlock","src":"0:20481:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"83:217:29","nodeType":"YulBlock","src":"83:217:29","statements":[{"body":{"nativeSrc":"129:16:29","nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:29","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:29","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:29","nodeType":"YulIdentifier","src":"131:6:29"},"nativeSrc":"131:12:29","nodeType":"YulFunctionCall","src":"131:12:29"},"nativeSrc":"131:12:29","nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:29","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nativeSrc":"113:9:29","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nativeSrc":"100:3:29","nodeType":"YulIdentifier","src":"100:3:29"},"nativeSrc":"100:23:29","nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nativeSrc":"125:2:29","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:29","nodeType":"YulIdentifier","src":"96:3:29"},"nativeSrc":"96:32:29","nodeType":"YulFunctionCall","src":"96:32:29"},"nativeSrc":"93:52:29","nodeType":"YulIf","src":"93:52:29"},{"nativeSrc":"154:36:29","nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:29","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:29","nodeType":"YulIdentifier","src":"167:12:29"},"nativeSrc":"167:23:29","nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nativeSrc":"158:5:29","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nativeSrc":"254:16:29","nodeType":"YulBlock","src":"254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:29","nodeType":"YulLiteral","src":"263:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:29","nodeType":"YulLiteral","src":"266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:29","nodeType":"YulIdentifier","src":"256:6:29"},"nativeSrc":"256:12:29","nodeType":"YulFunctionCall","src":"256:12:29"},"nativeSrc":"256:12:29","nodeType":"YulExpressionStatement","src":"256:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:29","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nativeSrc":"223:5:29","nodeType":"YulIdentifier","src":"223:5:29"},{"arguments":[{"kind":"number","nativeSrc":"234:3:29","nodeType":"YulLiteral","src":"234:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:29","nodeType":"YulLiteral","src":"239:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:29","nodeType":"YulIdentifier","src":"230:3:29"},"nativeSrc":"230:20:29","nodeType":"YulFunctionCall","src":"230:20:29"}],"functionName":{"name":"and","nativeSrc":"219:3:29","nodeType":"YulIdentifier","src":"219:3:29"},"nativeSrc":"219:32:29","nodeType":"YulFunctionCall","src":"219:32:29"}],"functionName":{"name":"eq","nativeSrc":"209:2:29","nodeType":"YulIdentifier","src":"209:2:29"},"nativeSrc":"209:43:29","nodeType":"YulFunctionCall","src":"209:43:29"}],"functionName":{"name":"iszero","nativeSrc":"202:6:29","nodeType":"YulIdentifier","src":"202:6:29"},"nativeSrc":"202:51:29","nodeType":"YulFunctionCall","src":"202:51:29"},"nativeSrc":"199:71:29","nodeType":"YulIf","src":"199:71:29"},{"nativeSrc":"279:15:29","nodeType":"YulAssignment","src":"279:15:29","value":{"name":"value","nativeSrc":"289:5:29","nodeType":"YulIdentifier","src":"289:5:29"},"variableNames":[{"name":"value0","nativeSrc":"279:6:29","nodeType":"YulIdentifier","src":"279:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:29","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nativeSrc":"60:7:29","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:29","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:286:29"},{"body":{"nativeSrc":"400:92:29","nodeType":"YulBlock","src":"400:92:29","statements":[{"nativeSrc":"410:26:29","nodeType":"YulAssignment","src":"410:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:29","nodeType":"YulIdentifier","src":"422:9:29"},{"kind":"number","nativeSrc":"433:2:29","nodeType":"YulLiteral","src":"433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:29","nodeType":"YulIdentifier","src":"418:3:29"},"nativeSrc":"418:18:29","nodeType":"YulFunctionCall","src":"418:18:29"},"variableNames":[{"name":"tail","nativeSrc":"410:4:29","nodeType":"YulIdentifier","src":"410:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:29","nodeType":"YulIdentifier","src":"452:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:29","nodeType":"YulIdentifier","src":"477:6:29"}],"functionName":{"name":"iszero","nativeSrc":"470:6:29","nodeType":"YulIdentifier","src":"470:6:29"},"nativeSrc":"470:14:29","nodeType":"YulFunctionCall","src":"470:14:29"}],"functionName":{"name":"iszero","nativeSrc":"463:6:29","nodeType":"YulIdentifier","src":"463:6:29"},"nativeSrc":"463:22:29","nodeType":"YulFunctionCall","src":"463:22:29"}],"functionName":{"name":"mstore","nativeSrc":"445:6:29","nodeType":"YulIdentifier","src":"445:6:29"},"nativeSrc":"445:41:29","nodeType":"YulFunctionCall","src":"445:41:29"},"nativeSrc":"445:41:29","nodeType":"YulExpressionStatement","src":"445:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:29","nodeType":"YulTypedName","src":"369:9:29","type":""},{"name":"value0","nativeSrc":"380:6:29","nodeType":"YulTypedName","src":"380:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:29","nodeType":"YulTypedName","src":"391:4:29","type":""}],"src":"305:187:29"},{"body":{"nativeSrc":"618:427:29","nodeType":"YulBlock","src":"618:427:29","statements":[{"nativeSrc":"628:12:29","nodeType":"YulVariableDeclaration","src":"628:12:29","value":{"kind":"number","nativeSrc":"638:2:29","nodeType":"YulLiteral","src":"638:2:29","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"632:2:29","nodeType":"YulTypedName","src":"632:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"656:9:29","nodeType":"YulIdentifier","src":"656:9:29"},{"kind":"number","nativeSrc":"667:2:29","nodeType":"YulLiteral","src":"667:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"649:6:29","nodeType":"YulIdentifier","src":"649:6:29"},"nativeSrc":"649:21:29","nodeType":"YulFunctionCall","src":"649:21:29"},"nativeSrc":"649:21:29","nodeType":"YulExpressionStatement","src":"649:21:29"},{"nativeSrc":"679:27:29","nodeType":"YulVariableDeclaration","src":"679:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"699:6:29","nodeType":"YulIdentifier","src":"699:6:29"}],"functionName":{"name":"mload","nativeSrc":"693:5:29","nodeType":"YulIdentifier","src":"693:5:29"},"nativeSrc":"693:13:29","nodeType":"YulFunctionCall","src":"693:13:29"},"variables":[{"name":"length","nativeSrc":"683:6:29","nodeType":"YulTypedName","src":"683:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"726:9:29","nodeType":"YulIdentifier","src":"726:9:29"},{"kind":"number","nativeSrc":"737:2:29","nodeType":"YulLiteral","src":"737:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"722:3:29","nodeType":"YulIdentifier","src":"722:3:29"},"nativeSrc":"722:18:29","nodeType":"YulFunctionCall","src":"722:18:29"},{"name":"length","nativeSrc":"742:6:29","nodeType":"YulIdentifier","src":"742:6:29"}],"functionName":{"name":"mstore","nativeSrc":"715:6:29","nodeType":"YulIdentifier","src":"715:6:29"},"nativeSrc":"715:34:29","nodeType":"YulFunctionCall","src":"715:34:29"},"nativeSrc":"715:34:29","nodeType":"YulExpressionStatement","src":"715:34:29"},{"nativeSrc":"758:10:29","nodeType":"YulVariableDeclaration","src":"758:10:29","value":{"kind":"number","nativeSrc":"767:1:29","nodeType":"YulLiteral","src":"767:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"762:1:29","nodeType":"YulTypedName","src":"762:1:29","type":""}]},{"body":{"nativeSrc":"827:90:29","nodeType":"YulBlock","src":"827:90:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"856:9:29","nodeType":"YulIdentifier","src":"856:9:29"},{"name":"i","nativeSrc":"867:1:29","nodeType":"YulIdentifier","src":"867:1:29"}],"functionName":{"name":"add","nativeSrc":"852:3:29","nodeType":"YulIdentifier","src":"852:3:29"},"nativeSrc":"852:17:29","nodeType":"YulFunctionCall","src":"852:17:29"},{"kind":"number","nativeSrc":"871:2:29","nodeType":"YulLiteral","src":"871:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"848:3:29","nodeType":"YulIdentifier","src":"848:3:29"},"nativeSrc":"848:26:29","nodeType":"YulFunctionCall","src":"848:26:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"890:6:29","nodeType":"YulIdentifier","src":"890:6:29"},{"name":"i","nativeSrc":"898:1:29","nodeType":"YulIdentifier","src":"898:1:29"}],"functionName":{"name":"add","nativeSrc":"886:3:29","nodeType":"YulIdentifier","src":"886:3:29"},"nativeSrc":"886:14:29","nodeType":"YulFunctionCall","src":"886:14:29"},{"name":"_1","nativeSrc":"902:2:29","nodeType":"YulIdentifier","src":"902:2:29"}],"functionName":{"name":"add","nativeSrc":"882:3:29","nodeType":"YulIdentifier","src":"882:3:29"},"nativeSrc":"882:23:29","nodeType":"YulFunctionCall","src":"882:23:29"}],"functionName":{"name":"mload","nativeSrc":"876:5:29","nodeType":"YulIdentifier","src":"876:5:29"},"nativeSrc":"876:30:29","nodeType":"YulFunctionCall","src":"876:30:29"}],"functionName":{"name":"mstore","nativeSrc":"841:6:29","nodeType":"YulIdentifier","src":"841:6:29"},"nativeSrc":"841:66:29","nodeType":"YulFunctionCall","src":"841:66:29"},"nativeSrc":"841:66:29","nodeType":"YulExpressionStatement","src":"841:66:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"788:1:29","nodeType":"YulIdentifier","src":"788:1:29"},{"name":"length","nativeSrc":"791:6:29","nodeType":"YulIdentifier","src":"791:6:29"}],"functionName":{"name":"lt","nativeSrc":"785:2:29","nodeType":"YulIdentifier","src":"785:2:29"},"nativeSrc":"785:13:29","nodeType":"YulFunctionCall","src":"785:13:29"},"nativeSrc":"777:140:29","nodeType":"YulForLoop","post":{"nativeSrc":"799:19:29","nodeType":"YulBlock","src":"799:19:29","statements":[{"nativeSrc":"801:15:29","nodeType":"YulAssignment","src":"801:15:29","value":{"arguments":[{"name":"i","nativeSrc":"810:1:29","nodeType":"YulIdentifier","src":"810:1:29"},{"name":"_1","nativeSrc":"813:2:29","nodeType":"YulIdentifier","src":"813:2:29"}],"functionName":{"name":"add","nativeSrc":"806:3:29","nodeType":"YulIdentifier","src":"806:3:29"},"nativeSrc":"806:10:29","nodeType":"YulFunctionCall","src":"806:10:29"},"variableNames":[{"name":"i","nativeSrc":"801:1:29","nodeType":"YulIdentifier","src":"801:1:29"}]}]},"pre":{"nativeSrc":"781:3:29","nodeType":"YulBlock","src":"781:3:29","statements":[]},"src":"777:140:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"941:9:29","nodeType":"YulIdentifier","src":"941:9:29"},{"name":"length","nativeSrc":"952:6:29","nodeType":"YulIdentifier","src":"952:6:29"}],"functionName":{"name":"add","nativeSrc":"937:3:29","nodeType":"YulIdentifier","src":"937:3:29"},"nativeSrc":"937:22:29","nodeType":"YulFunctionCall","src":"937:22:29"},{"kind":"number","nativeSrc":"961:2:29","nodeType":"YulLiteral","src":"961:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"933:3:29","nodeType":"YulIdentifier","src":"933:3:29"},"nativeSrc":"933:31:29","nodeType":"YulFunctionCall","src":"933:31:29"},{"kind":"number","nativeSrc":"966:1:29","nodeType":"YulLiteral","src":"966:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"926:6:29","nodeType":"YulIdentifier","src":"926:6:29"},"nativeSrc":"926:42:29","nodeType":"YulFunctionCall","src":"926:42:29"},"nativeSrc":"926:42:29","nodeType":"YulExpressionStatement","src":"926:42:29"},{"nativeSrc":"977:62:29","nodeType":"YulAssignment","src":"977:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"993:9:29","nodeType":"YulIdentifier","src":"993:9:29"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1012:6:29","nodeType":"YulIdentifier","src":"1012:6:29"},{"kind":"number","nativeSrc":"1020:2:29","nodeType":"YulLiteral","src":"1020:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1008:3:29","nodeType":"YulIdentifier","src":"1008:3:29"},"nativeSrc":"1008:15:29","nodeType":"YulFunctionCall","src":"1008:15:29"},{"arguments":[{"kind":"number","nativeSrc":"1029:2:29","nodeType":"YulLiteral","src":"1029:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1025:3:29","nodeType":"YulIdentifier","src":"1025:3:29"},"nativeSrc":"1025:7:29","nodeType":"YulFunctionCall","src":"1025:7:29"}],"functionName":{"name":"and","nativeSrc":"1004:3:29","nodeType":"YulIdentifier","src":"1004:3:29"},"nativeSrc":"1004:29:29","nodeType":"YulFunctionCall","src":"1004:29:29"}],"functionName":{"name":"add","nativeSrc":"989:3:29","nodeType":"YulIdentifier","src":"989:3:29"},"nativeSrc":"989:45:29","nodeType":"YulFunctionCall","src":"989:45:29"},{"kind":"number","nativeSrc":"1036:2:29","nodeType":"YulLiteral","src":"1036:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"985:3:29","nodeType":"YulIdentifier","src":"985:3:29"},"nativeSrc":"985:54:29","nodeType":"YulFunctionCall","src":"985:54:29"},"variableNames":[{"name":"tail","nativeSrc":"977:4:29","nodeType":"YulIdentifier","src":"977:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"497:548:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"587:9:29","nodeType":"YulTypedName","src":"587:9:29","type":""},{"name":"value0","nativeSrc":"598:6:29","nodeType":"YulTypedName","src":"598:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"609:4:29","nodeType":"YulTypedName","src":"609:4:29","type":""}],"src":"497:548:29"},{"body":{"nativeSrc":"1099:124:29","nodeType":"YulBlock","src":"1099:124:29","statements":[{"nativeSrc":"1109:29:29","nodeType":"YulAssignment","src":"1109:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"1131:6:29","nodeType":"YulIdentifier","src":"1131:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"1118:12:29","nodeType":"YulIdentifier","src":"1118:12:29"},"nativeSrc":"1118:20:29","nodeType":"YulFunctionCall","src":"1118:20:29"},"variableNames":[{"name":"value","nativeSrc":"1109:5:29","nodeType":"YulIdentifier","src":"1109:5:29"}]},{"body":{"nativeSrc":"1201:16:29","nodeType":"YulBlock","src":"1201:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1210:1:29","nodeType":"YulLiteral","src":"1210:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1213:1:29","nodeType":"YulLiteral","src":"1213:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1203:6:29","nodeType":"YulIdentifier","src":"1203:6:29"},"nativeSrc":"1203:12:29","nodeType":"YulFunctionCall","src":"1203:12:29"},"nativeSrc":"1203:12:29","nodeType":"YulExpressionStatement","src":"1203:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1160:5:29","nodeType":"YulIdentifier","src":"1160:5:29"},{"arguments":[{"name":"value","nativeSrc":"1171:5:29","nodeType":"YulIdentifier","src":"1171:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1186:3:29","nodeType":"YulLiteral","src":"1186:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"1191:1:29","nodeType":"YulLiteral","src":"1191:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1182:3:29","nodeType":"YulIdentifier","src":"1182:3:29"},"nativeSrc":"1182:11:29","nodeType":"YulFunctionCall","src":"1182:11:29"},{"kind":"number","nativeSrc":"1195:1:29","nodeType":"YulLiteral","src":"1195:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1178:3:29","nodeType":"YulIdentifier","src":"1178:3:29"},"nativeSrc":"1178:19:29","nodeType":"YulFunctionCall","src":"1178:19:29"}],"functionName":{"name":"and","nativeSrc":"1167:3:29","nodeType":"YulIdentifier","src":"1167:3:29"},"nativeSrc":"1167:31:29","nodeType":"YulFunctionCall","src":"1167:31:29"}],"functionName":{"name":"eq","nativeSrc":"1157:2:29","nodeType":"YulIdentifier","src":"1157:2:29"},"nativeSrc":"1157:42:29","nodeType":"YulFunctionCall","src":"1157:42:29"}],"functionName":{"name":"iszero","nativeSrc":"1150:6:29","nodeType":"YulIdentifier","src":"1150:6:29"},"nativeSrc":"1150:50:29","nodeType":"YulFunctionCall","src":"1150:50:29"},"nativeSrc":"1147:70:29","nodeType":"YulIf","src":"1147:70:29"}]},"name":"abi_decode_address","nativeSrc":"1050:173:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:29","nodeType":"YulTypedName","src":"1078:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1089:5:29","nodeType":"YulTypedName","src":"1089:5:29","type":""}],"src":"1050:173:29"},{"body":{"nativeSrc":"1315:167:29","nodeType":"YulBlock","src":"1315:167:29","statements":[{"body":{"nativeSrc":"1361:16:29","nodeType":"YulBlock","src":"1361:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:1:29","nodeType":"YulLiteral","src":"1370:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1373:1:29","nodeType":"YulLiteral","src":"1373:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1363:6:29","nodeType":"YulIdentifier","src":"1363:6:29"},"nativeSrc":"1363:12:29","nodeType":"YulFunctionCall","src":"1363:12:29"},"nativeSrc":"1363:12:29","nodeType":"YulExpressionStatement","src":"1363:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1336:7:29","nodeType":"YulIdentifier","src":"1336:7:29"},{"name":"headStart","nativeSrc":"1345:9:29","nodeType":"YulIdentifier","src":"1345:9:29"}],"functionName":{"name":"sub","nativeSrc":"1332:3:29","nodeType":"YulIdentifier","src":"1332:3:29"},"nativeSrc":"1332:23:29","nodeType":"YulFunctionCall","src":"1332:23:29"},{"kind":"number","nativeSrc":"1357:2:29","nodeType":"YulLiteral","src":"1357:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1328:3:29","nodeType":"YulIdentifier","src":"1328:3:29"},"nativeSrc":"1328:32:29","nodeType":"YulFunctionCall","src":"1328:32:29"},"nativeSrc":"1325:52:29","nodeType":"YulIf","src":"1325:52:29"},{"nativeSrc":"1386:39:29","nodeType":"YulAssignment","src":"1386:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1415:9:29","nodeType":"YulIdentifier","src":"1415:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1396:18:29","nodeType":"YulIdentifier","src":"1396:18:29"},"nativeSrc":"1396:29:29","nodeType":"YulFunctionCall","src":"1396:29:29"},"variableNames":[{"name":"value0","nativeSrc":"1386:6:29","nodeType":"YulIdentifier","src":"1386:6:29"}]},{"nativeSrc":"1434:42:29","nodeType":"YulAssignment","src":"1434:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1461:9:29","nodeType":"YulIdentifier","src":"1461:9:29"},{"kind":"number","nativeSrc":"1472:2:29","nodeType":"YulLiteral","src":"1472:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1457:3:29","nodeType":"YulIdentifier","src":"1457:3:29"},"nativeSrc":"1457:18:29","nodeType":"YulFunctionCall","src":"1457:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1444:12:29","nodeType":"YulIdentifier","src":"1444:12:29"},"nativeSrc":"1444:32:29","nodeType":"YulFunctionCall","src":"1444:32:29"},"variableNames":[{"name":"value1","nativeSrc":"1434:6:29","nodeType":"YulIdentifier","src":"1434:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1228:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1273:9:29","nodeType":"YulTypedName","src":"1273:9:29","type":""},{"name":"dataEnd","nativeSrc":"1284:7:29","nodeType":"YulTypedName","src":"1284:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1296:6:29","nodeType":"YulTypedName","src":"1296:6:29","type":""},{"name":"value1","nativeSrc":"1304:6:29","nodeType":"YulTypedName","src":"1304:6:29","type":""}],"src":"1228:254:29"},{"body":{"nativeSrc":"1557:116:29","nodeType":"YulBlock","src":"1557:116:29","statements":[{"body":{"nativeSrc":"1603:16:29","nodeType":"YulBlock","src":"1603:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1612:1:29","nodeType":"YulLiteral","src":"1612:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1615:1:29","nodeType":"YulLiteral","src":"1615:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1605:6:29","nodeType":"YulIdentifier","src":"1605:6:29"},"nativeSrc":"1605:12:29","nodeType":"YulFunctionCall","src":"1605:12:29"},"nativeSrc":"1605:12:29","nodeType":"YulExpressionStatement","src":"1605:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1578:7:29","nodeType":"YulIdentifier","src":"1578:7:29"},{"name":"headStart","nativeSrc":"1587:9:29","nodeType":"YulIdentifier","src":"1587:9:29"}],"functionName":{"name":"sub","nativeSrc":"1574:3:29","nodeType":"YulIdentifier","src":"1574:3:29"},"nativeSrc":"1574:23:29","nodeType":"YulFunctionCall","src":"1574:23:29"},{"kind":"number","nativeSrc":"1599:2:29","nodeType":"YulLiteral","src":"1599:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1570:3:29","nodeType":"YulIdentifier","src":"1570:3:29"},"nativeSrc":"1570:32:29","nodeType":"YulFunctionCall","src":"1570:32:29"},"nativeSrc":"1567:52:29","nodeType":"YulIf","src":"1567:52:29"},{"nativeSrc":"1628:39:29","nodeType":"YulAssignment","src":"1628:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1657:9:29","nodeType":"YulIdentifier","src":"1657:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1638:18:29","nodeType":"YulIdentifier","src":"1638:18:29"},"nativeSrc":"1638:29:29","nodeType":"YulFunctionCall","src":"1638:29:29"},"variableNames":[{"name":"value0","nativeSrc":"1628:6:29","nodeType":"YulIdentifier","src":"1628:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1487:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1523:9:29","nodeType":"YulTypedName","src":"1523:9:29","type":""},{"name":"dataEnd","nativeSrc":"1534:7:29","nodeType":"YulTypedName","src":"1534:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1546:6:29","nodeType":"YulTypedName","src":"1546:6:29","type":""}],"src":"1487:186:29"},{"body":{"nativeSrc":"1779:76:29","nodeType":"YulBlock","src":"1779:76:29","statements":[{"nativeSrc":"1789:26:29","nodeType":"YulAssignment","src":"1789:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1801:9:29","nodeType":"YulIdentifier","src":"1801:9:29"},{"kind":"number","nativeSrc":"1812:2:29","nodeType":"YulLiteral","src":"1812:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1797:3:29","nodeType":"YulIdentifier","src":"1797:3:29"},"nativeSrc":"1797:18:29","nodeType":"YulFunctionCall","src":"1797:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1789:4:29","nodeType":"YulIdentifier","src":"1789:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1831:9:29","nodeType":"YulIdentifier","src":"1831:9:29"},{"name":"value0","nativeSrc":"1842:6:29","nodeType":"YulIdentifier","src":"1842:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:29","nodeType":"YulIdentifier","src":"1824:6:29"},"nativeSrc":"1824:25:29","nodeType":"YulFunctionCall","src":"1824:25:29"},"nativeSrc":"1824:25:29","nodeType":"YulExpressionStatement","src":"1824:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1678:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1748:9:29","nodeType":"YulTypedName","src":"1748:9:29","type":""},{"name":"value0","nativeSrc":"1759:6:29","nodeType":"YulTypedName","src":"1759:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1770:4:29","nodeType":"YulTypedName","src":"1770:4:29","type":""}],"src":"1678:177:29"},{"body":{"nativeSrc":"1961:76:29","nodeType":"YulBlock","src":"1961:76:29","statements":[{"nativeSrc":"1971:26:29","nodeType":"YulAssignment","src":"1971:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1983:9:29","nodeType":"YulIdentifier","src":"1983:9:29"},{"kind":"number","nativeSrc":"1994:2:29","nodeType":"YulLiteral","src":"1994:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1979:3:29","nodeType":"YulIdentifier","src":"1979:3:29"},"nativeSrc":"1979:18:29","nodeType":"YulFunctionCall","src":"1979:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1971:4:29","nodeType":"YulIdentifier","src":"1971:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2013:9:29","nodeType":"YulIdentifier","src":"2013:9:29"},{"name":"value0","nativeSrc":"2024:6:29","nodeType":"YulIdentifier","src":"2024:6:29"}],"functionName":{"name":"mstore","nativeSrc":"2006:6:29","nodeType":"YulIdentifier","src":"2006:6:29"},"nativeSrc":"2006:25:29","nodeType":"YulFunctionCall","src":"2006:25:29"},"nativeSrc":"2006:25:29","nodeType":"YulExpressionStatement","src":"2006:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1860:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1930:9:29","nodeType":"YulTypedName","src":"1930:9:29","type":""},{"name":"value0","nativeSrc":"1941:6:29","nodeType":"YulTypedName","src":"1941:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1952:4:29","nodeType":"YulTypedName","src":"1952:4:29","type":""}],"src":"1860:177:29"},{"body":{"nativeSrc":"2146:224:29","nodeType":"YulBlock","src":"2146:224:29","statements":[{"body":{"nativeSrc":"2192:16:29","nodeType":"YulBlock","src":"2192:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2201:1:29","nodeType":"YulLiteral","src":"2201:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2204:1:29","nodeType":"YulLiteral","src":"2204:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2194:6:29","nodeType":"YulIdentifier","src":"2194:6:29"},"nativeSrc":"2194:12:29","nodeType":"YulFunctionCall","src":"2194:12:29"},"nativeSrc":"2194:12:29","nodeType":"YulExpressionStatement","src":"2194:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2167:7:29","nodeType":"YulIdentifier","src":"2167:7:29"},{"name":"headStart","nativeSrc":"2176:9:29","nodeType":"YulIdentifier","src":"2176:9:29"}],"functionName":{"name":"sub","nativeSrc":"2163:3:29","nodeType":"YulIdentifier","src":"2163:3:29"},"nativeSrc":"2163:23:29","nodeType":"YulFunctionCall","src":"2163:23:29"},{"kind":"number","nativeSrc":"2188:2:29","nodeType":"YulLiteral","src":"2188:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2159:3:29","nodeType":"YulIdentifier","src":"2159:3:29"},"nativeSrc":"2159:32:29","nodeType":"YulFunctionCall","src":"2159:32:29"},"nativeSrc":"2156:52:29","nodeType":"YulIf","src":"2156:52:29"},{"nativeSrc":"2217:39:29","nodeType":"YulAssignment","src":"2217:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2246:9:29","nodeType":"YulIdentifier","src":"2246:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2227:18:29","nodeType":"YulIdentifier","src":"2227:18:29"},"nativeSrc":"2227:29:29","nodeType":"YulFunctionCall","src":"2227:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2217:6:29","nodeType":"YulIdentifier","src":"2217:6:29"}]},{"nativeSrc":"2265:48:29","nodeType":"YulAssignment","src":"2265:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2298:9:29","nodeType":"YulIdentifier","src":"2298:9:29"},{"kind":"number","nativeSrc":"2309:2:29","nodeType":"YulLiteral","src":"2309:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2294:3:29","nodeType":"YulIdentifier","src":"2294:3:29"},"nativeSrc":"2294:18:29","nodeType":"YulFunctionCall","src":"2294:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2275:18:29","nodeType":"YulIdentifier","src":"2275:18:29"},"nativeSrc":"2275:38:29","nodeType":"YulFunctionCall","src":"2275:38:29"},"variableNames":[{"name":"value1","nativeSrc":"2265:6:29","nodeType":"YulIdentifier","src":"2265:6:29"}]},{"nativeSrc":"2322:42:29","nodeType":"YulAssignment","src":"2322:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2349:9:29","nodeType":"YulIdentifier","src":"2349:9:29"},{"kind":"number","nativeSrc":"2360:2:29","nodeType":"YulLiteral","src":"2360:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2345:3:29","nodeType":"YulIdentifier","src":"2345:3:29"},"nativeSrc":"2345:18:29","nodeType":"YulFunctionCall","src":"2345:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"2332:12:29","nodeType":"YulIdentifier","src":"2332:12:29"},"nativeSrc":"2332:32:29","nodeType":"YulFunctionCall","src":"2332:32:29"},"variableNames":[{"name":"value2","nativeSrc":"2322:6:29","nodeType":"YulIdentifier","src":"2322:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2042:328:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2096:9:29","nodeType":"YulTypedName","src":"2096:9:29","type":""},{"name":"dataEnd","nativeSrc":"2107:7:29","nodeType":"YulTypedName","src":"2107:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2119:6:29","nodeType":"YulTypedName","src":"2119:6:29","type":""},{"name":"value1","nativeSrc":"2127:6:29","nodeType":"YulTypedName","src":"2127:6:29","type":""},{"name":"value2","nativeSrc":"2135:6:29","nodeType":"YulTypedName","src":"2135:6:29","type":""}],"src":"2042:328:29"},{"body":{"nativeSrc":"2445:110:29","nodeType":"YulBlock","src":"2445:110:29","statements":[{"body":{"nativeSrc":"2491:16:29","nodeType":"YulBlock","src":"2491:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2500:1:29","nodeType":"YulLiteral","src":"2500:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2503:1:29","nodeType":"YulLiteral","src":"2503:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2493:6:29","nodeType":"YulIdentifier","src":"2493:6:29"},"nativeSrc":"2493:12:29","nodeType":"YulFunctionCall","src":"2493:12:29"},"nativeSrc":"2493:12:29","nodeType":"YulExpressionStatement","src":"2493:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2466:7:29","nodeType":"YulIdentifier","src":"2466:7:29"},{"name":"headStart","nativeSrc":"2475:9:29","nodeType":"YulIdentifier","src":"2475:9:29"}],"functionName":{"name":"sub","nativeSrc":"2462:3:29","nodeType":"YulIdentifier","src":"2462:3:29"},"nativeSrc":"2462:23:29","nodeType":"YulFunctionCall","src":"2462:23:29"},{"kind":"number","nativeSrc":"2487:2:29","nodeType":"YulLiteral","src":"2487:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2458:3:29","nodeType":"YulIdentifier","src":"2458:3:29"},"nativeSrc":"2458:32:29","nodeType":"YulFunctionCall","src":"2458:32:29"},"nativeSrc":"2455:52:29","nodeType":"YulIf","src":"2455:52:29"},{"nativeSrc":"2516:33:29","nodeType":"YulAssignment","src":"2516:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2539:9:29","nodeType":"YulIdentifier","src":"2539:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2526:12:29","nodeType":"YulIdentifier","src":"2526:12:29"},"nativeSrc":"2526:23:29","nodeType":"YulFunctionCall","src":"2526:23:29"},"variableNames":[{"name":"value0","nativeSrc":"2516:6:29","nodeType":"YulIdentifier","src":"2516:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2375:180:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2411:9:29","nodeType":"YulTypedName","src":"2411:9:29","type":""},{"name":"dataEnd","nativeSrc":"2422:7:29","nodeType":"YulTypedName","src":"2422:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2434:6:29","nodeType":"YulTypedName","src":"2434:6:29","type":""}],"src":"2375:180:29"},{"body":{"nativeSrc":"2647:167:29","nodeType":"YulBlock","src":"2647:167:29","statements":[{"body":{"nativeSrc":"2693:16:29","nodeType":"YulBlock","src":"2693:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2702:1:29","nodeType":"YulLiteral","src":"2702:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2705:1:29","nodeType":"YulLiteral","src":"2705:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2695:6:29","nodeType":"YulIdentifier","src":"2695:6:29"},"nativeSrc":"2695:12:29","nodeType":"YulFunctionCall","src":"2695:12:29"},"nativeSrc":"2695:12:29","nodeType":"YulExpressionStatement","src":"2695:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2668:7:29","nodeType":"YulIdentifier","src":"2668:7:29"},{"name":"headStart","nativeSrc":"2677:9:29","nodeType":"YulIdentifier","src":"2677:9:29"}],"functionName":{"name":"sub","nativeSrc":"2664:3:29","nodeType":"YulIdentifier","src":"2664:3:29"},"nativeSrc":"2664:23:29","nodeType":"YulFunctionCall","src":"2664:23:29"},{"kind":"number","nativeSrc":"2689:2:29","nodeType":"YulLiteral","src":"2689:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2660:3:29","nodeType":"YulIdentifier","src":"2660:3:29"},"nativeSrc":"2660:32:29","nodeType":"YulFunctionCall","src":"2660:32:29"},"nativeSrc":"2657:52:29","nodeType":"YulIf","src":"2657:52:29"},{"nativeSrc":"2718:33:29","nodeType":"YulAssignment","src":"2718:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2741:9:29","nodeType":"YulIdentifier","src":"2741:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2728:12:29","nodeType":"YulIdentifier","src":"2728:12:29"},"nativeSrc":"2728:23:29","nodeType":"YulFunctionCall","src":"2728:23:29"},"variableNames":[{"name":"value0","nativeSrc":"2718:6:29","nodeType":"YulIdentifier","src":"2718:6:29"}]},{"nativeSrc":"2760:48:29","nodeType":"YulAssignment","src":"2760:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2793:9:29","nodeType":"YulIdentifier","src":"2793:9:29"},{"kind":"number","nativeSrc":"2804:2:29","nodeType":"YulLiteral","src":"2804:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2789:3:29","nodeType":"YulIdentifier","src":"2789:3:29"},"nativeSrc":"2789:18:29","nodeType":"YulFunctionCall","src":"2789:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2770:18:29","nodeType":"YulIdentifier","src":"2770:18:29"},"nativeSrc":"2770:38:29","nodeType":"YulFunctionCall","src":"2770:38:29"},"variableNames":[{"name":"value1","nativeSrc":"2760:6:29","nodeType":"YulIdentifier","src":"2760:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2560:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2605:9:29","nodeType":"YulTypedName","src":"2605:9:29","type":""},{"name":"dataEnd","nativeSrc":"2616:7:29","nodeType":"YulTypedName","src":"2616:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2628:6:29","nodeType":"YulTypedName","src":"2628:6:29","type":""},{"name":"value1","nativeSrc":"2636:6:29","nodeType":"YulTypedName","src":"2636:6:29","type":""}],"src":"2560:254:29"},{"body":{"nativeSrc":"2916:87:29","nodeType":"YulBlock","src":"2916:87:29","statements":[{"nativeSrc":"2926:26:29","nodeType":"YulAssignment","src":"2926:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2938:9:29","nodeType":"YulIdentifier","src":"2938:9:29"},{"kind":"number","nativeSrc":"2949:2:29","nodeType":"YulLiteral","src":"2949:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2934:3:29","nodeType":"YulIdentifier","src":"2934:3:29"},"nativeSrc":"2934:18:29","nodeType":"YulFunctionCall","src":"2934:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2926:4:29","nodeType":"YulIdentifier","src":"2926:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2968:9:29","nodeType":"YulIdentifier","src":"2968:9:29"},{"arguments":[{"name":"value0","nativeSrc":"2983:6:29","nodeType":"YulIdentifier","src":"2983:6:29"},{"kind":"number","nativeSrc":"2991:4:29","nodeType":"YulLiteral","src":"2991:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2979:3:29","nodeType":"YulIdentifier","src":"2979:3:29"},"nativeSrc":"2979:17:29","nodeType":"YulFunctionCall","src":"2979:17:29"}],"functionName":{"name":"mstore","nativeSrc":"2961:6:29","nodeType":"YulIdentifier","src":"2961:6:29"},"nativeSrc":"2961:36:29","nodeType":"YulFunctionCall","src":"2961:36:29"},"nativeSrc":"2961:36:29","nodeType":"YulExpressionStatement","src":"2961:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2819:184:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2885:9:29","nodeType":"YulTypedName","src":"2885:9:29","type":""},{"name":"value0","nativeSrc":"2896:6:29","nodeType":"YulTypedName","src":"2896:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2907:4:29","nodeType":"YulTypedName","src":"2907:4:29","type":""}],"src":"2819:184:29"},{"body":{"nativeSrc":"3095:161:29","nodeType":"YulBlock","src":"3095:161:29","statements":[{"body":{"nativeSrc":"3141:16:29","nodeType":"YulBlock","src":"3141:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3150:1:29","nodeType":"YulLiteral","src":"3150:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3153:1:29","nodeType":"YulLiteral","src":"3153:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3143:6:29","nodeType":"YulIdentifier","src":"3143:6:29"},"nativeSrc":"3143:12:29","nodeType":"YulFunctionCall","src":"3143:12:29"},"nativeSrc":"3143:12:29","nodeType":"YulExpressionStatement","src":"3143:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3116:7:29","nodeType":"YulIdentifier","src":"3116:7:29"},{"name":"headStart","nativeSrc":"3125:9:29","nodeType":"YulIdentifier","src":"3125:9:29"}],"functionName":{"name":"sub","nativeSrc":"3112:3:29","nodeType":"YulIdentifier","src":"3112:3:29"},"nativeSrc":"3112:23:29","nodeType":"YulFunctionCall","src":"3112:23:29"},{"kind":"number","nativeSrc":"3137:2:29","nodeType":"YulLiteral","src":"3137:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3108:3:29","nodeType":"YulIdentifier","src":"3108:3:29"},"nativeSrc":"3108:32:29","nodeType":"YulFunctionCall","src":"3108:32:29"},"nativeSrc":"3105:52:29","nodeType":"YulIf","src":"3105:52:29"},{"nativeSrc":"3166:33:29","nodeType":"YulAssignment","src":"3166:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3189:9:29","nodeType":"YulIdentifier","src":"3189:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"3176:12:29","nodeType":"YulIdentifier","src":"3176:12:29"},"nativeSrc":"3176:23:29","nodeType":"YulFunctionCall","src":"3176:23:29"},"variableNames":[{"name":"value0","nativeSrc":"3166:6:29","nodeType":"YulIdentifier","src":"3166:6:29"}]},{"nativeSrc":"3208:42:29","nodeType":"YulAssignment","src":"3208:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3235:9:29","nodeType":"YulIdentifier","src":"3235:9:29"},{"kind":"number","nativeSrc":"3246:2:29","nodeType":"YulLiteral","src":"3246:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3231:3:29","nodeType":"YulIdentifier","src":"3231:3:29"},"nativeSrc":"3231:18:29","nodeType":"YulFunctionCall","src":"3231:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"3218:12:29","nodeType":"YulIdentifier","src":"3218:12:29"},"nativeSrc":"3218:32:29","nodeType":"YulFunctionCall","src":"3218:32:29"},"variableNames":[{"name":"value1","nativeSrc":"3208:6:29","nodeType":"YulIdentifier","src":"3208:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"3008:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3053:9:29","nodeType":"YulTypedName","src":"3053:9:29","type":""},{"name":"dataEnd","nativeSrc":"3064:7:29","nodeType":"YulTypedName","src":"3064:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3076:6:29","nodeType":"YulTypedName","src":"3076:6:29","type":""},{"name":"value1","nativeSrc":"3084:6:29","nodeType":"YulTypedName","src":"3084:6:29","type":""}],"src":"3008:248:29"},{"body":{"nativeSrc":"3362:102:29","nodeType":"YulBlock","src":"3362:102:29","statements":[{"nativeSrc":"3372:26:29","nodeType":"YulAssignment","src":"3372:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3384:9:29","nodeType":"YulIdentifier","src":"3384:9:29"},{"kind":"number","nativeSrc":"3395:2:29","nodeType":"YulLiteral","src":"3395:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3380:3:29","nodeType":"YulIdentifier","src":"3380:3:29"},"nativeSrc":"3380:18:29","nodeType":"YulFunctionCall","src":"3380:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3372:4:29","nodeType":"YulIdentifier","src":"3372:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3414:9:29","nodeType":"YulIdentifier","src":"3414:9:29"},{"arguments":[{"name":"value0","nativeSrc":"3429:6:29","nodeType":"YulIdentifier","src":"3429:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3445:3:29","nodeType":"YulLiteral","src":"3445:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"3450:1:29","nodeType":"YulLiteral","src":"3450:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3441:3:29","nodeType":"YulIdentifier","src":"3441:3:29"},"nativeSrc":"3441:11:29","nodeType":"YulFunctionCall","src":"3441:11:29"},{"kind":"number","nativeSrc":"3454:1:29","nodeType":"YulLiteral","src":"3454:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3437:3:29","nodeType":"YulIdentifier","src":"3437:3:29"},"nativeSrc":"3437:19:29","nodeType":"YulFunctionCall","src":"3437:19:29"}],"functionName":{"name":"and","nativeSrc":"3425:3:29","nodeType":"YulIdentifier","src":"3425:3:29"},"nativeSrc":"3425:32:29","nodeType":"YulFunctionCall","src":"3425:32:29"}],"functionName":{"name":"mstore","nativeSrc":"3407:6:29","nodeType":"YulIdentifier","src":"3407:6:29"},"nativeSrc":"3407:51:29","nodeType":"YulFunctionCall","src":"3407:51:29"},"nativeSrc":"3407:51:29","nodeType":"YulExpressionStatement","src":"3407:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3261:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3331:9:29","nodeType":"YulTypedName","src":"3331:9:29","type":""},{"name":"value0","nativeSrc":"3342:6:29","nodeType":"YulTypedName","src":"3342:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3353:4:29","nodeType":"YulTypedName","src":"3353:4:29","type":""}],"src":"3261:203:29"},{"body":{"nativeSrc":"3620:507:29","nodeType":"YulBlock","src":"3620:507:29","statements":[{"nativeSrc":"3630:12:29","nodeType":"YulVariableDeclaration","src":"3630:12:29","value":{"kind":"number","nativeSrc":"3640:2:29","nodeType":"YulLiteral","src":"3640:2:29","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3634:2:29","nodeType":"YulTypedName","src":"3634:2:29","type":""}]},{"nativeSrc":"3651:32:29","nodeType":"YulVariableDeclaration","src":"3651:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3669:9:29","nodeType":"YulIdentifier","src":"3669:9:29"},{"kind":"number","nativeSrc":"3680:2:29","nodeType":"YulLiteral","src":"3680:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3665:3:29","nodeType":"YulIdentifier","src":"3665:3:29"},"nativeSrc":"3665:18:29","nodeType":"YulFunctionCall","src":"3665:18:29"},"variables":[{"name":"tail_1","nativeSrc":"3655:6:29","nodeType":"YulTypedName","src":"3655:6:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3699:9:29","nodeType":"YulIdentifier","src":"3699:9:29"},{"kind":"number","nativeSrc":"3710:2:29","nodeType":"YulLiteral","src":"3710:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3692:6:29","nodeType":"YulIdentifier","src":"3692:6:29"},"nativeSrc":"3692:21:29","nodeType":"YulFunctionCall","src":"3692:21:29"},"nativeSrc":"3692:21:29","nodeType":"YulExpressionStatement","src":"3692:21:29"},{"nativeSrc":"3722:17:29","nodeType":"YulVariableDeclaration","src":"3722:17:29","value":{"name":"tail_1","nativeSrc":"3733:6:29","nodeType":"YulIdentifier","src":"3733:6:29"},"variables":[{"name":"pos","nativeSrc":"3726:3:29","nodeType":"YulTypedName","src":"3726:3:29","type":""}]},{"nativeSrc":"3748:27:29","nodeType":"YulVariableDeclaration","src":"3748:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"3768:6:29","nodeType":"YulIdentifier","src":"3768:6:29"}],"functionName":{"name":"mload","nativeSrc":"3762:5:29","nodeType":"YulIdentifier","src":"3762:5:29"},"nativeSrc":"3762:13:29","nodeType":"YulFunctionCall","src":"3762:13:29"},"variables":[{"name":"length","nativeSrc":"3752:6:29","nodeType":"YulTypedName","src":"3752:6:29","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"3791:6:29","nodeType":"YulIdentifier","src":"3791:6:29"},{"name":"length","nativeSrc":"3799:6:29","nodeType":"YulIdentifier","src":"3799:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3784:6:29","nodeType":"YulIdentifier","src":"3784:6:29"},"nativeSrc":"3784:22:29","nodeType":"YulFunctionCall","src":"3784:22:29"},"nativeSrc":"3784:22:29","nodeType":"YulExpressionStatement","src":"3784:22:29"},{"nativeSrc":"3815:25:29","nodeType":"YulAssignment","src":"3815:25:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3826:9:29","nodeType":"YulIdentifier","src":"3826:9:29"},{"kind":"number","nativeSrc":"3837:2:29","nodeType":"YulLiteral","src":"3837:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3822:3:29","nodeType":"YulIdentifier","src":"3822:3:29"},"nativeSrc":"3822:18:29","nodeType":"YulFunctionCall","src":"3822:18:29"},"variableNames":[{"name":"pos","nativeSrc":"3815:3:29","nodeType":"YulIdentifier","src":"3815:3:29"}]},{"nativeSrc":"3849:29:29","nodeType":"YulVariableDeclaration","src":"3849:29:29","value":{"arguments":[{"name":"value0","nativeSrc":"3867:6:29","nodeType":"YulIdentifier","src":"3867:6:29"},{"kind":"number","nativeSrc":"3875:2:29","nodeType":"YulLiteral","src":"3875:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3863:3:29","nodeType":"YulIdentifier","src":"3863:3:29"},"nativeSrc":"3863:15:29","nodeType":"YulFunctionCall","src":"3863:15:29"},"variables":[{"name":"srcPtr","nativeSrc":"3853:6:29","nodeType":"YulTypedName","src":"3853:6:29","type":""}]},{"nativeSrc":"3887:10:29","nodeType":"YulVariableDeclaration","src":"3887:10:29","value":{"kind":"number","nativeSrc":"3896:1:29","nodeType":"YulLiteral","src":"3896:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3891:1:29","nodeType":"YulTypedName","src":"3891:1:29","type":""}]},{"body":{"nativeSrc":"3955:146:29","nodeType":"YulBlock","src":"3955:146:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3976:3:29","nodeType":"YulIdentifier","src":"3976:3:29"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"3991:6:29","nodeType":"YulIdentifier","src":"3991:6:29"}],"functionName":{"name":"mload","nativeSrc":"3985:5:29","nodeType":"YulIdentifier","src":"3985:5:29"},"nativeSrc":"3985:13:29","nodeType":"YulFunctionCall","src":"3985:13:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4008:3:29","nodeType":"YulLiteral","src":"4008:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"4013:1:29","nodeType":"YulLiteral","src":"4013:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4004:3:29","nodeType":"YulIdentifier","src":"4004:3:29"},"nativeSrc":"4004:11:29","nodeType":"YulFunctionCall","src":"4004:11:29"},{"kind":"number","nativeSrc":"4017:1:29","nodeType":"YulLiteral","src":"4017:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4000:3:29","nodeType":"YulIdentifier","src":"4000:3:29"},"nativeSrc":"4000:19:29","nodeType":"YulFunctionCall","src":"4000:19:29"}],"functionName":{"name":"and","nativeSrc":"3981:3:29","nodeType":"YulIdentifier","src":"3981:3:29"},"nativeSrc":"3981:39:29","nodeType":"YulFunctionCall","src":"3981:39:29"}],"functionName":{"name":"mstore","nativeSrc":"3969:6:29","nodeType":"YulIdentifier","src":"3969:6:29"},"nativeSrc":"3969:52:29","nodeType":"YulFunctionCall","src":"3969:52:29"},"nativeSrc":"3969:52:29","nodeType":"YulExpressionStatement","src":"3969:52:29"},{"nativeSrc":"4034:19:29","nodeType":"YulAssignment","src":"4034:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"4045:3:29","nodeType":"YulIdentifier","src":"4045:3:29"},{"name":"_1","nativeSrc":"4050:2:29","nodeType":"YulIdentifier","src":"4050:2:29"}],"functionName":{"name":"add","nativeSrc":"4041:3:29","nodeType":"YulIdentifier","src":"4041:3:29"},"nativeSrc":"4041:12:29","nodeType":"YulFunctionCall","src":"4041:12:29"},"variableNames":[{"name":"pos","nativeSrc":"4034:3:29","nodeType":"YulIdentifier","src":"4034:3:29"}]},{"nativeSrc":"4066:25:29","nodeType":"YulAssignment","src":"4066:25:29","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4080:6:29","nodeType":"YulIdentifier","src":"4080:6:29"},{"name":"_1","nativeSrc":"4088:2:29","nodeType":"YulIdentifier","src":"4088:2:29"}],"functionName":{"name":"add","nativeSrc":"4076:3:29","nodeType":"YulIdentifier","src":"4076:3:29"},"nativeSrc":"4076:15:29","nodeType":"YulFunctionCall","src":"4076:15:29"},"variableNames":[{"name":"srcPtr","nativeSrc":"4066:6:29","nodeType":"YulIdentifier","src":"4066:6:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3917:1:29","nodeType":"YulIdentifier","src":"3917:1:29"},{"name":"length","nativeSrc":"3920:6:29","nodeType":"YulIdentifier","src":"3920:6:29"}],"functionName":{"name":"lt","nativeSrc":"3914:2:29","nodeType":"YulIdentifier","src":"3914:2:29"},"nativeSrc":"3914:13:29","nodeType":"YulFunctionCall","src":"3914:13:29"},"nativeSrc":"3906:195:29","nodeType":"YulForLoop","post":{"nativeSrc":"3928:18:29","nodeType":"YulBlock","src":"3928:18:29","statements":[{"nativeSrc":"3930:14:29","nodeType":"YulAssignment","src":"3930:14:29","value":{"arguments":[{"name":"i","nativeSrc":"3939:1:29","nodeType":"YulIdentifier","src":"3939:1:29"},{"kind":"number","nativeSrc":"3942:1:29","nodeType":"YulLiteral","src":"3942:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3935:3:29","nodeType":"YulIdentifier","src":"3935:3:29"},"nativeSrc":"3935:9:29","nodeType":"YulFunctionCall","src":"3935:9:29"},"variableNames":[{"name":"i","nativeSrc":"3930:1:29","nodeType":"YulIdentifier","src":"3930:1:29"}]}]},"pre":{"nativeSrc":"3910:3:29","nodeType":"YulBlock","src":"3910:3:29","statements":[]},"src":"3906:195:29"},{"nativeSrc":"4110:11:29","nodeType":"YulAssignment","src":"4110:11:29","value":{"name":"pos","nativeSrc":"4118:3:29","nodeType":"YulIdentifier","src":"4118:3:29"},"variableNames":[{"name":"tail","nativeSrc":"4110:4:29","nodeType":"YulIdentifier","src":"4110:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3469:658:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3589:9:29","nodeType":"YulTypedName","src":"3589:9:29","type":""},{"name":"value0","nativeSrc":"3600:6:29","nodeType":"YulTypedName","src":"3600:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3611:4:29","nodeType":"YulTypedName","src":"3611:4:29","type":""}],"src":"3469:658:29"},{"body":{"nativeSrc":"4219:173:29","nodeType":"YulBlock","src":"4219:173:29","statements":[{"body":{"nativeSrc":"4265:16:29","nodeType":"YulBlock","src":"4265:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4274:1:29","nodeType":"YulLiteral","src":"4274:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4277:1:29","nodeType":"YulLiteral","src":"4277:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4267:6:29","nodeType":"YulIdentifier","src":"4267:6:29"},"nativeSrc":"4267:12:29","nodeType":"YulFunctionCall","src":"4267:12:29"},"nativeSrc":"4267:12:29","nodeType":"YulExpressionStatement","src":"4267:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4240:7:29","nodeType":"YulIdentifier","src":"4240:7:29"},{"name":"headStart","nativeSrc":"4249:9:29","nodeType":"YulIdentifier","src":"4249:9:29"}],"functionName":{"name":"sub","nativeSrc":"4236:3:29","nodeType":"YulIdentifier","src":"4236:3:29"},"nativeSrc":"4236:23:29","nodeType":"YulFunctionCall","src":"4236:23:29"},{"kind":"number","nativeSrc":"4261:2:29","nodeType":"YulLiteral","src":"4261:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4232:3:29","nodeType":"YulIdentifier","src":"4232:3:29"},"nativeSrc":"4232:32:29","nodeType":"YulFunctionCall","src":"4232:32:29"},"nativeSrc":"4229:52:29","nodeType":"YulIf","src":"4229:52:29"},{"nativeSrc":"4290:39:29","nodeType":"YulAssignment","src":"4290:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4319:9:29","nodeType":"YulIdentifier","src":"4319:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4300:18:29","nodeType":"YulIdentifier","src":"4300:18:29"},"nativeSrc":"4300:29:29","nodeType":"YulFunctionCall","src":"4300:29:29"},"variableNames":[{"name":"value0","nativeSrc":"4290:6:29","nodeType":"YulIdentifier","src":"4290:6:29"}]},{"nativeSrc":"4338:48:29","nodeType":"YulAssignment","src":"4338:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4371:9:29","nodeType":"YulIdentifier","src":"4371:9:29"},{"kind":"number","nativeSrc":"4382:2:29","nodeType":"YulLiteral","src":"4382:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4367:3:29","nodeType":"YulIdentifier","src":"4367:3:29"},"nativeSrc":"4367:18:29","nodeType":"YulFunctionCall","src":"4367:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4348:18:29","nodeType":"YulIdentifier","src":"4348:18:29"},"nativeSrc":"4348:38:29","nodeType":"YulFunctionCall","src":"4348:38:29"},"variableNames":[{"name":"value1","nativeSrc":"4338:6:29","nodeType":"YulIdentifier","src":"4338:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4132:260:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4177:9:29","nodeType":"YulTypedName","src":"4177:9:29","type":""},{"name":"dataEnd","nativeSrc":"4188:7:29","nodeType":"YulTypedName","src":"4188:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4200:6:29","nodeType":"YulTypedName","src":"4200:6:29","type":""},{"name":"value1","nativeSrc":"4208:6:29","nodeType":"YulTypedName","src":"4208:6:29","type":""}],"src":"4132:260:29"},{"body":{"nativeSrc":"4481:263:29","nodeType":"YulBlock","src":"4481:263:29","statements":[{"body":{"nativeSrc":"4527:16:29","nodeType":"YulBlock","src":"4527:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4536:1:29","nodeType":"YulLiteral","src":"4536:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4539:1:29","nodeType":"YulLiteral","src":"4539:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4529:6:29","nodeType":"YulIdentifier","src":"4529:6:29"},"nativeSrc":"4529:12:29","nodeType":"YulFunctionCall","src":"4529:12:29"},"nativeSrc":"4529:12:29","nodeType":"YulExpressionStatement","src":"4529:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4502:7:29","nodeType":"YulIdentifier","src":"4502:7:29"},{"name":"headStart","nativeSrc":"4511:9:29","nodeType":"YulIdentifier","src":"4511:9:29"}],"functionName":{"name":"sub","nativeSrc":"4498:3:29","nodeType":"YulIdentifier","src":"4498:3:29"},"nativeSrc":"4498:23:29","nodeType":"YulFunctionCall","src":"4498:23:29"},{"kind":"number","nativeSrc":"4523:2:29","nodeType":"YulLiteral","src":"4523:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4494:3:29","nodeType":"YulIdentifier","src":"4494:3:29"},"nativeSrc":"4494:32:29","nodeType":"YulFunctionCall","src":"4494:32:29"},"nativeSrc":"4491:52:29","nodeType":"YulIf","src":"4491:52:29"},{"nativeSrc":"4552:39:29","nodeType":"YulAssignment","src":"4552:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4581:9:29","nodeType":"YulIdentifier","src":"4581:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4562:18:29","nodeType":"YulIdentifier","src":"4562:18:29"},"nativeSrc":"4562:29:29","nodeType":"YulFunctionCall","src":"4562:29:29"},"variableNames":[{"name":"value0","nativeSrc":"4552:6:29","nodeType":"YulIdentifier","src":"4552:6:29"}]},{"nativeSrc":"4600:45:29","nodeType":"YulVariableDeclaration","src":"4600:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4630:9:29","nodeType":"YulIdentifier","src":"4630:9:29"},{"kind":"number","nativeSrc":"4641:2:29","nodeType":"YulLiteral","src":"4641:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4626:3:29","nodeType":"YulIdentifier","src":"4626:3:29"},"nativeSrc":"4626:18:29","nodeType":"YulFunctionCall","src":"4626:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"4613:12:29","nodeType":"YulIdentifier","src":"4613:12:29"},"nativeSrc":"4613:32:29","nodeType":"YulFunctionCall","src":"4613:32:29"},"variables":[{"name":"value","nativeSrc":"4604:5:29","nodeType":"YulTypedName","src":"4604:5:29","type":""}]},{"body":{"nativeSrc":"4698:16:29","nodeType":"YulBlock","src":"4698:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4707:1:29","nodeType":"YulLiteral","src":"4707:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4710:1:29","nodeType":"YulLiteral","src":"4710:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4700:6:29","nodeType":"YulIdentifier","src":"4700:6:29"},"nativeSrc":"4700:12:29","nodeType":"YulFunctionCall","src":"4700:12:29"},"nativeSrc":"4700:12:29","nodeType":"YulExpressionStatement","src":"4700:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4667:5:29","nodeType":"YulIdentifier","src":"4667:5:29"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4688:5:29","nodeType":"YulIdentifier","src":"4688:5:29"}],"functionName":{"name":"iszero","nativeSrc":"4681:6:29","nodeType":"YulIdentifier","src":"4681:6:29"},"nativeSrc":"4681:13:29","nodeType":"YulFunctionCall","src":"4681:13:29"}],"functionName":{"name":"iszero","nativeSrc":"4674:6:29","nodeType":"YulIdentifier","src":"4674:6:29"},"nativeSrc":"4674:21:29","nodeType":"YulFunctionCall","src":"4674:21:29"}],"functionName":{"name":"eq","nativeSrc":"4664:2:29","nodeType":"YulIdentifier","src":"4664:2:29"},"nativeSrc":"4664:32:29","nodeType":"YulFunctionCall","src":"4664:32:29"}],"functionName":{"name":"iszero","nativeSrc":"4657:6:29","nodeType":"YulIdentifier","src":"4657:6:29"},"nativeSrc":"4657:40:29","nodeType":"YulFunctionCall","src":"4657:40:29"},"nativeSrc":"4654:60:29","nodeType":"YulIf","src":"4654:60:29"},{"nativeSrc":"4723:15:29","nodeType":"YulAssignment","src":"4723:15:29","value":{"name":"value","nativeSrc":"4733:5:29","nodeType":"YulIdentifier","src":"4733:5:29"},"variableNames":[{"name":"value1","nativeSrc":"4723:6:29","nodeType":"YulIdentifier","src":"4723:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"4397:347:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4439:9:29","nodeType":"YulTypedName","src":"4439:9:29","type":""},{"name":"dataEnd","nativeSrc":"4450:7:29","nodeType":"YulTypedName","src":"4450:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4462:6:29","nodeType":"YulTypedName","src":"4462:6:29","type":""},{"name":"value1","nativeSrc":"4470:6:29","nodeType":"YulTypedName","src":"4470:6:29","type":""}],"src":"4397:347:29"},{"body":{"nativeSrc":"4804:325:29","nodeType":"YulBlock","src":"4804:325:29","statements":[{"nativeSrc":"4814:22:29","nodeType":"YulAssignment","src":"4814:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"4828:1:29","nodeType":"YulLiteral","src":"4828:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"4831:4:29","nodeType":"YulIdentifier","src":"4831:4:29"}],"functionName":{"name":"shr","nativeSrc":"4824:3:29","nodeType":"YulIdentifier","src":"4824:3:29"},"nativeSrc":"4824:12:29","nodeType":"YulFunctionCall","src":"4824:12:29"},"variableNames":[{"name":"length","nativeSrc":"4814:6:29","nodeType":"YulIdentifier","src":"4814:6:29"}]},{"nativeSrc":"4845:38:29","nodeType":"YulVariableDeclaration","src":"4845:38:29","value":{"arguments":[{"name":"data","nativeSrc":"4875:4:29","nodeType":"YulIdentifier","src":"4875:4:29"},{"kind":"number","nativeSrc":"4881:1:29","nodeType":"YulLiteral","src":"4881:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4871:3:29","nodeType":"YulIdentifier","src":"4871:3:29"},"nativeSrc":"4871:12:29","nodeType":"YulFunctionCall","src":"4871:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4849:18:29","nodeType":"YulTypedName","src":"4849:18:29","type":""}]},{"body":{"nativeSrc":"4922:31:29","nodeType":"YulBlock","src":"4922:31:29","statements":[{"nativeSrc":"4924:27:29","nodeType":"YulAssignment","src":"4924:27:29","value":{"arguments":[{"name":"length","nativeSrc":"4938:6:29","nodeType":"YulIdentifier","src":"4938:6:29"},{"kind":"number","nativeSrc":"4946:4:29","nodeType":"YulLiteral","src":"4946:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4934:3:29","nodeType":"YulIdentifier","src":"4934:3:29"},"nativeSrc":"4934:17:29","nodeType":"YulFunctionCall","src":"4934:17:29"},"variableNames":[{"name":"length","nativeSrc":"4924:6:29","nodeType":"YulIdentifier","src":"4924:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4902:18:29","nodeType":"YulIdentifier","src":"4902:18:29"}],"functionName":{"name":"iszero","nativeSrc":"4895:6:29","nodeType":"YulIdentifier","src":"4895:6:29"},"nativeSrc":"4895:26:29","nodeType":"YulFunctionCall","src":"4895:26:29"},"nativeSrc":"4892:61:29","nodeType":"YulIf","src":"4892:61:29"},{"body":{"nativeSrc":"5012:111:29","nodeType":"YulBlock","src":"5012:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5033:1:29","nodeType":"YulLiteral","src":"5033:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5040:3:29","nodeType":"YulLiteral","src":"5040:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"5045:10:29","nodeType":"YulLiteral","src":"5045:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5036:3:29","nodeType":"YulIdentifier","src":"5036:3:29"},"nativeSrc":"5036:20:29","nodeType":"YulFunctionCall","src":"5036:20:29"}],"functionName":{"name":"mstore","nativeSrc":"5026:6:29","nodeType":"YulIdentifier","src":"5026:6:29"},"nativeSrc":"5026:31:29","nodeType":"YulFunctionCall","src":"5026:31:29"},"nativeSrc":"5026:31:29","nodeType":"YulExpressionStatement","src":"5026:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5077:1:29","nodeType":"YulLiteral","src":"5077:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"5080:4:29","nodeType":"YulLiteral","src":"5080:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5070:6:29","nodeType":"YulIdentifier","src":"5070:6:29"},"nativeSrc":"5070:15:29","nodeType":"YulFunctionCall","src":"5070:15:29"},"nativeSrc":"5070:15:29","nodeType":"YulExpressionStatement","src":"5070:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5105:1:29","nodeType":"YulLiteral","src":"5105:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5108:4:29","nodeType":"YulLiteral","src":"5108:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5098:6:29","nodeType":"YulIdentifier","src":"5098:6:29"},"nativeSrc":"5098:15:29","nodeType":"YulFunctionCall","src":"5098:15:29"},"nativeSrc":"5098:15:29","nodeType":"YulExpressionStatement","src":"5098:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4968:18:29","nodeType":"YulIdentifier","src":"4968:18:29"},{"arguments":[{"name":"length","nativeSrc":"4991:6:29","nodeType":"YulIdentifier","src":"4991:6:29"},{"kind":"number","nativeSrc":"4999:2:29","nodeType":"YulLiteral","src":"4999:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4988:2:29","nodeType":"YulIdentifier","src":"4988:2:29"},"nativeSrc":"4988:14:29","nodeType":"YulFunctionCall","src":"4988:14:29"}],"functionName":{"name":"eq","nativeSrc":"4965:2:29","nodeType":"YulIdentifier","src":"4965:2:29"},"nativeSrc":"4965:38:29","nodeType":"YulFunctionCall","src":"4965:38:29"},"nativeSrc":"4962:161:29","nodeType":"YulIf","src":"4962:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"4749:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4784:4:29","nodeType":"YulTypedName","src":"4784:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4793:6:29","nodeType":"YulTypedName","src":"4793:6:29","type":""}],"src":"4749:380:29"},{"body":{"nativeSrc":"5308:172:29","nodeType":"YulBlock","src":"5308:172:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5325:9:29","nodeType":"YulIdentifier","src":"5325:9:29"},{"kind":"number","nativeSrc":"5336:2:29","nodeType":"YulLiteral","src":"5336:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5318:6:29","nodeType":"YulIdentifier","src":"5318:6:29"},"nativeSrc":"5318:21:29","nodeType":"YulFunctionCall","src":"5318:21:29"},"nativeSrc":"5318:21:29","nodeType":"YulExpressionStatement","src":"5318:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5359:9:29","nodeType":"YulIdentifier","src":"5359:9:29"},{"kind":"number","nativeSrc":"5370:2:29","nodeType":"YulLiteral","src":"5370:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5355:3:29","nodeType":"YulIdentifier","src":"5355:3:29"},"nativeSrc":"5355:18:29","nodeType":"YulFunctionCall","src":"5355:18:29"},{"kind":"number","nativeSrc":"5375:2:29","nodeType":"YulLiteral","src":"5375:2:29","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"5348:6:29","nodeType":"YulIdentifier","src":"5348:6:29"},"nativeSrc":"5348:30:29","nodeType":"YulFunctionCall","src":"5348:30:29"},"nativeSrc":"5348:30:29","nodeType":"YulExpressionStatement","src":"5348:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5398:9:29","nodeType":"YulIdentifier","src":"5398:9:29"},{"kind":"number","nativeSrc":"5409:2:29","nodeType":"YulLiteral","src":"5409:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5394:3:29","nodeType":"YulIdentifier","src":"5394:3:29"},"nativeSrc":"5394:18:29","nodeType":"YulFunctionCall","src":"5394:18:29"},{"hexValue":"4e6f742077686974656c69737465642073656e646572","kind":"string","nativeSrc":"5414:24:29","nodeType":"YulLiteral","src":"5414:24:29","type":"","value":"Not whitelisted sender"}],"functionName":{"name":"mstore","nativeSrc":"5387:6:29","nodeType":"YulIdentifier","src":"5387:6:29"},"nativeSrc":"5387:52:29","nodeType":"YulFunctionCall","src":"5387:52:29"},"nativeSrc":"5387:52:29","nodeType":"YulExpressionStatement","src":"5387:52:29"},{"nativeSrc":"5448:26:29","nodeType":"YulAssignment","src":"5448:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5460:9:29","nodeType":"YulIdentifier","src":"5460:9:29"},{"kind":"number","nativeSrc":"5471:2:29","nodeType":"YulLiteral","src":"5471:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5456:3:29","nodeType":"YulIdentifier","src":"5456:3:29"},"nativeSrc":"5456:18:29","nodeType":"YulFunctionCall","src":"5456:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5448:4:29","nodeType":"YulIdentifier","src":"5448:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f968dab381b01065bcd659c7b7ca684b6125a9262124b87757c3ce4b4a61b4e9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5134:346:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5285:9:29","nodeType":"YulTypedName","src":"5285:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5299:4:29","nodeType":"YulTypedName","src":"5299:4:29","type":""}],"src":"5134:346:29"},{"body":{"nativeSrc":"5659:172:29","nodeType":"YulBlock","src":"5659:172:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5676:9:29","nodeType":"YulIdentifier","src":"5676:9:29"},{"kind":"number","nativeSrc":"5687:2:29","nodeType":"YulLiteral","src":"5687:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5669:6:29","nodeType":"YulIdentifier","src":"5669:6:29"},"nativeSrc":"5669:21:29","nodeType":"YulFunctionCall","src":"5669:21:29"},"nativeSrc":"5669:21:29","nodeType":"YulExpressionStatement","src":"5669:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5710:9:29","nodeType":"YulIdentifier","src":"5710:9:29"},{"kind":"number","nativeSrc":"5721:2:29","nodeType":"YulLiteral","src":"5721:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5706:3:29","nodeType":"YulIdentifier","src":"5706:3:29"},"nativeSrc":"5706:18:29","nodeType":"YulFunctionCall","src":"5706:18:29"},{"kind":"number","nativeSrc":"5726:2:29","nodeType":"YulLiteral","src":"5726:2:29","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"5699:6:29","nodeType":"YulIdentifier","src":"5699:6:29"},"nativeSrc":"5699:30:29","nodeType":"YulFunctionCall","src":"5699:30:29"},"nativeSrc":"5699:30:29","nodeType":"YulExpressionStatement","src":"5699:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5749:9:29","nodeType":"YulIdentifier","src":"5749:9:29"},{"kind":"number","nativeSrc":"5760:2:29","nodeType":"YulLiteral","src":"5760:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5745:3:29","nodeType":"YulIdentifier","src":"5745:3:29"},"nativeSrc":"5745:18:29","nodeType":"YulFunctionCall","src":"5745:18:29"},{"hexValue":"43616e6e6f742072656d6f7665207472656173757279","kind":"string","nativeSrc":"5765:24:29","nodeType":"YulLiteral","src":"5765:24:29","type":"","value":"Cannot remove treasury"}],"functionName":{"name":"mstore","nativeSrc":"5738:6:29","nodeType":"YulIdentifier","src":"5738:6:29"},"nativeSrc":"5738:52:29","nodeType":"YulFunctionCall","src":"5738:52:29"},"nativeSrc":"5738:52:29","nodeType":"YulExpressionStatement","src":"5738:52:29"},{"nativeSrc":"5799:26:29","nodeType":"YulAssignment","src":"5799:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5811:9:29","nodeType":"YulIdentifier","src":"5811:9:29"},{"kind":"number","nativeSrc":"5822:2:29","nodeType":"YulLiteral","src":"5822:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5807:3:29","nodeType":"YulIdentifier","src":"5807:3:29"},"nativeSrc":"5807:18:29","nodeType":"YulFunctionCall","src":"5807:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5799:4:29","nodeType":"YulIdentifier","src":"5799:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e00ac7e1279f916115359abdeb64bbee0973e9d1fae1ea63f9db0c4b52ed0db__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5485:346:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5636:9:29","nodeType":"YulTypedName","src":"5636:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5650:4:29","nodeType":"YulTypedName","src":"5650:4:29","type":""}],"src":"5485:346:29"},{"body":{"nativeSrc":"6010:227:29","nodeType":"YulBlock","src":"6010:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6027:9:29","nodeType":"YulIdentifier","src":"6027:9:29"},{"kind":"number","nativeSrc":"6038:2:29","nodeType":"YulLiteral","src":"6038:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6020:6:29","nodeType":"YulIdentifier","src":"6020:6:29"},"nativeSrc":"6020:21:29","nodeType":"YulFunctionCall","src":"6020:21:29"},"nativeSrc":"6020:21:29","nodeType":"YulExpressionStatement","src":"6020:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6061:9:29","nodeType":"YulIdentifier","src":"6061:9:29"},{"kind":"number","nativeSrc":"6072:2:29","nodeType":"YulLiteral","src":"6072:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6057:3:29","nodeType":"YulIdentifier","src":"6057:3:29"},"nativeSrc":"6057:18:29","nodeType":"YulFunctionCall","src":"6057:18:29"},{"kind":"number","nativeSrc":"6077:2:29","nodeType":"YulLiteral","src":"6077:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"6050:6:29","nodeType":"YulIdentifier","src":"6050:6:29"},"nativeSrc":"6050:30:29","nodeType":"YulFunctionCall","src":"6050:30:29"},"nativeSrc":"6050:30:29","nodeType":"YulExpressionStatement","src":"6050:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6100:9:29","nodeType":"YulIdentifier","src":"6100:9:29"},{"kind":"number","nativeSrc":"6111:2:29","nodeType":"YulLiteral","src":"6111:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6096:3:29","nodeType":"YulIdentifier","src":"6096:3:29"},"nativeSrc":"6096:18:29","nodeType":"YulFunctionCall","src":"6096:18:29"},{"hexValue":"53656e64657220416464726573732052656d6f7665642046726f6d2057686974","kind":"string","nativeSrc":"6116:34:29","nodeType":"YulLiteral","src":"6116:34:29","type":"","value":"Sender Address Removed From Whit"}],"functionName":{"name":"mstore","nativeSrc":"6089:6:29","nodeType":"YulIdentifier","src":"6089:6:29"},"nativeSrc":"6089:62:29","nodeType":"YulFunctionCall","src":"6089:62:29"},"nativeSrc":"6089:62:29","nodeType":"YulExpressionStatement","src":"6089:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6171:9:29","nodeType":"YulIdentifier","src":"6171:9:29"},{"kind":"number","nativeSrc":"6182:2:29","nodeType":"YulLiteral","src":"6182:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6167:3:29","nodeType":"YulIdentifier","src":"6167:3:29"},"nativeSrc":"6167:18:29","nodeType":"YulFunctionCall","src":"6167:18:29"},{"hexValue":"656c697374","kind":"string","nativeSrc":"6187:7:29","nodeType":"YulLiteral","src":"6187:7:29","type":"","value":"elist"}],"functionName":{"name":"mstore","nativeSrc":"6160:6:29","nodeType":"YulIdentifier","src":"6160:6:29"},"nativeSrc":"6160:35:29","nodeType":"YulFunctionCall","src":"6160:35:29"},"nativeSrc":"6160:35:29","nodeType":"YulExpressionStatement","src":"6160:35:29"},{"nativeSrc":"6204:27:29","nodeType":"YulAssignment","src":"6204:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6216:9:29","nodeType":"YulIdentifier","src":"6216:9:29"},{"kind":"number","nativeSrc":"6227:3:29","nodeType":"YulLiteral","src":"6227:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6212:3:29","nodeType":"YulIdentifier","src":"6212:3:29"},"nativeSrc":"6212:19:29","nodeType":"YulFunctionCall","src":"6212:19:29"},"variableNames":[{"name":"tail","nativeSrc":"6204:4:29","nodeType":"YulIdentifier","src":"6204:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c04771ce8b365808d82fcedcff16ad41bc76cd3603245cc6cac98a7ae6a1852__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5836:401:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5987:9:29","nodeType":"YulTypedName","src":"5987:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6001:4:29","nodeType":"YulTypedName","src":"6001:4:29","type":""}],"src":"5836:401:29"},{"body":{"nativeSrc":"6416:174:29","nodeType":"YulBlock","src":"6416:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6433:9:29","nodeType":"YulIdentifier","src":"6433:9:29"},{"kind":"number","nativeSrc":"6444:2:29","nodeType":"YulLiteral","src":"6444:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6426:6:29","nodeType":"YulIdentifier","src":"6426:6:29"},"nativeSrc":"6426:21:29","nodeType":"YulFunctionCall","src":"6426:21:29"},"nativeSrc":"6426:21:29","nodeType":"YulExpressionStatement","src":"6426:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6467:9:29","nodeType":"YulIdentifier","src":"6467:9:29"},{"kind":"number","nativeSrc":"6478:2:29","nodeType":"YulLiteral","src":"6478:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6463:3:29","nodeType":"YulIdentifier","src":"6463:3:29"},"nativeSrc":"6463:18:29","nodeType":"YulFunctionCall","src":"6463:18:29"},{"kind":"number","nativeSrc":"6483:2:29","nodeType":"YulLiteral","src":"6483:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"6456:6:29","nodeType":"YulIdentifier","src":"6456:6:29"},"nativeSrc":"6456:30:29","nodeType":"YulFunctionCall","src":"6456:30:29"},"nativeSrc":"6456:30:29","nodeType":"YulExpressionStatement","src":"6456:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6506:9:29","nodeType":"YulIdentifier","src":"6506:9:29"},{"kind":"number","nativeSrc":"6517:2:29","nodeType":"YulLiteral","src":"6517:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6502:3:29","nodeType":"YulIdentifier","src":"6502:3:29"},"nativeSrc":"6502:18:29","nodeType":"YulFunctionCall","src":"6502:18:29"},{"hexValue":"4e6f742077686974656c6973746564207265636569766572","kind":"string","nativeSrc":"6522:26:29","nodeType":"YulLiteral","src":"6522:26:29","type":"","value":"Not whitelisted receiver"}],"functionName":{"name":"mstore","nativeSrc":"6495:6:29","nodeType":"YulIdentifier","src":"6495:6:29"},"nativeSrc":"6495:54:29","nodeType":"YulFunctionCall","src":"6495:54:29"},"nativeSrc":"6495:54:29","nodeType":"YulExpressionStatement","src":"6495:54:29"},{"nativeSrc":"6558:26:29","nodeType":"YulAssignment","src":"6558:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6570:9:29","nodeType":"YulIdentifier","src":"6570:9:29"},{"kind":"number","nativeSrc":"6581:2:29","nodeType":"YulLiteral","src":"6581:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6566:3:29","nodeType":"YulIdentifier","src":"6566:3:29"},"nativeSrc":"6566:18:29","nodeType":"YulFunctionCall","src":"6566:18:29"},"variableNames":[{"name":"tail","nativeSrc":"6558:4:29","nodeType":"YulIdentifier","src":"6558:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_888da2894a44edbf1c03e9128c6e70054075a69831971d4c9689ad0c53419709__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6242:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6393:9:29","nodeType":"YulTypedName","src":"6393:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6407:4:29","nodeType":"YulTypedName","src":"6407:4:29","type":""}],"src":"6242:348:29"},{"body":{"nativeSrc":"6769:229:29","nodeType":"YulBlock","src":"6769:229:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6786:9:29","nodeType":"YulIdentifier","src":"6786:9:29"},{"kind":"number","nativeSrc":"6797:2:29","nodeType":"YulLiteral","src":"6797:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6779:6:29","nodeType":"YulIdentifier","src":"6779:6:29"},"nativeSrc":"6779:21:29","nodeType":"YulFunctionCall","src":"6779:21:29"},"nativeSrc":"6779:21:29","nodeType":"YulExpressionStatement","src":"6779:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6820:9:29","nodeType":"YulIdentifier","src":"6820:9:29"},{"kind":"number","nativeSrc":"6831:2:29","nodeType":"YulLiteral","src":"6831:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6816:3:29","nodeType":"YulIdentifier","src":"6816:3:29"},"nativeSrc":"6816:18:29","nodeType":"YulFunctionCall","src":"6816:18:29"},{"kind":"number","nativeSrc":"6836:2:29","nodeType":"YulLiteral","src":"6836:2:29","type":"","value":"39"}],"functionName":{"name":"mstore","nativeSrc":"6809:6:29","nodeType":"YulIdentifier","src":"6809:6:29"},"nativeSrc":"6809:30:29","nodeType":"YulFunctionCall","src":"6809:30:29"},"nativeSrc":"6809:30:29","nodeType":"YulExpressionStatement","src":"6809:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6859:9:29","nodeType":"YulIdentifier","src":"6859:9:29"},{"kind":"number","nativeSrc":"6870:2:29","nodeType":"YulLiteral","src":"6870:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6855:3:29","nodeType":"YulIdentifier","src":"6855:3:29"},"nativeSrc":"6855:18:29","nodeType":"YulFunctionCall","src":"6855:18:29"},{"hexValue":"526563656976657220416464726573732052656d6f7665642046726f6d205768","kind":"string","nativeSrc":"6875:34:29","nodeType":"YulLiteral","src":"6875:34:29","type":"","value":"Receiver Address Removed From Wh"}],"functionName":{"name":"mstore","nativeSrc":"6848:6:29","nodeType":"YulIdentifier","src":"6848:6:29"},"nativeSrc":"6848:62:29","nodeType":"YulFunctionCall","src":"6848:62:29"},"nativeSrc":"6848:62:29","nodeType":"YulExpressionStatement","src":"6848:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6930:9:29","nodeType":"YulIdentifier","src":"6930:9:29"},{"kind":"number","nativeSrc":"6941:2:29","nodeType":"YulLiteral","src":"6941:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6926:3:29","nodeType":"YulIdentifier","src":"6926:3:29"},"nativeSrc":"6926:18:29","nodeType":"YulFunctionCall","src":"6926:18:29"},{"hexValue":"6974656c697374","kind":"string","nativeSrc":"6946:9:29","nodeType":"YulLiteral","src":"6946:9:29","type":"","value":"itelist"}],"functionName":{"name":"mstore","nativeSrc":"6919:6:29","nodeType":"YulIdentifier","src":"6919:6:29"},"nativeSrc":"6919:37:29","nodeType":"YulFunctionCall","src":"6919:37:29"},"nativeSrc":"6919:37:29","nodeType":"YulExpressionStatement","src":"6919:37:29"},{"nativeSrc":"6965:27:29","nodeType":"YulAssignment","src":"6965:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6977:9:29","nodeType":"YulIdentifier","src":"6977:9:29"},{"kind":"number","nativeSrc":"6988:3:29","nodeType":"YulLiteral","src":"6988:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6973:3:29","nodeType":"YulIdentifier","src":"6973:3:29"},"nativeSrc":"6973:19:29","nodeType":"YulFunctionCall","src":"6973:19:29"},"variableNames":[{"name":"tail","nativeSrc":"6965:4:29","nodeType":"YulIdentifier","src":"6965:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e61780c94bfda6c255ee69289c8bdaa3616ce54a5740fe437854d788bcd4833__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6595:403:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6746:9:29","nodeType":"YulTypedName","src":"6746:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6760:4:29","nodeType":"YulTypedName","src":"6760:4:29","type":""}],"src":"6595:403:29"},{"body":{"nativeSrc":"7177:167:29","nodeType":"YulBlock","src":"7177:167:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7194:9:29","nodeType":"YulIdentifier","src":"7194:9:29"},{"kind":"number","nativeSrc":"7205:2:29","nodeType":"YulLiteral","src":"7205:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7187:6:29","nodeType":"YulIdentifier","src":"7187:6:29"},"nativeSrc":"7187:21:29","nodeType":"YulFunctionCall","src":"7187:21:29"},"nativeSrc":"7187:21:29","nodeType":"YulExpressionStatement","src":"7187:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7228:9:29","nodeType":"YulIdentifier","src":"7228:9:29"},{"kind":"number","nativeSrc":"7239:2:29","nodeType":"YulLiteral","src":"7239:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7224:3:29","nodeType":"YulIdentifier","src":"7224:3:29"},"nativeSrc":"7224:18:29","nodeType":"YulFunctionCall","src":"7224:18:29"},{"kind":"number","nativeSrc":"7244:2:29","nodeType":"YulLiteral","src":"7244:2:29","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"7217:6:29","nodeType":"YulIdentifier","src":"7217:6:29"},"nativeSrc":"7217:30:29","nodeType":"YulFunctionCall","src":"7217:30:29"},"nativeSrc":"7217:30:29","nodeType":"YulExpressionStatement","src":"7217:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7267:9:29","nodeType":"YulIdentifier","src":"7267:9:29"},{"kind":"number","nativeSrc":"7278:2:29","nodeType":"YulLiteral","src":"7278:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7263:3:29","nodeType":"YulIdentifier","src":"7263:3:29"},"nativeSrc":"7263:18:29","nodeType":"YulFunctionCall","src":"7263:18:29"},{"hexValue":"4163636f756e742069732066726f7a656e","kind":"string","nativeSrc":"7283:19:29","nodeType":"YulLiteral","src":"7283:19:29","type":"","value":"Account is frozen"}],"functionName":{"name":"mstore","nativeSrc":"7256:6:29","nodeType":"YulIdentifier","src":"7256:6:29"},"nativeSrc":"7256:47:29","nodeType":"YulFunctionCall","src":"7256:47:29"},"nativeSrc":"7256:47:29","nodeType":"YulExpressionStatement","src":"7256:47:29"},{"nativeSrc":"7312:26:29","nodeType":"YulAssignment","src":"7312:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7324:9:29","nodeType":"YulIdentifier","src":"7324:9:29"},{"kind":"number","nativeSrc":"7335:2:29","nodeType":"YulLiteral","src":"7335:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7320:3:29","nodeType":"YulIdentifier","src":"7320:3:29"},"nativeSrc":"7320:18:29","nodeType":"YulFunctionCall","src":"7320:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7312:4:29","nodeType":"YulIdentifier","src":"7312:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7003:341:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7154:9:29","nodeType":"YulTypedName","src":"7154:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7168:4:29","nodeType":"YulTypedName","src":"7168:4:29","type":""}],"src":"7003:341:29"},{"body":{"nativeSrc":"7523:173:29","nodeType":"YulBlock","src":"7523:173:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7540:9:29","nodeType":"YulIdentifier","src":"7540:9:29"},{"kind":"number","nativeSrc":"7551:2:29","nodeType":"YulLiteral","src":"7551:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7533:6:29","nodeType":"YulIdentifier","src":"7533:6:29"},"nativeSrc":"7533:21:29","nodeType":"YulFunctionCall","src":"7533:21:29"},"nativeSrc":"7533:21:29","nodeType":"YulExpressionStatement","src":"7533:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7574:9:29","nodeType":"YulIdentifier","src":"7574:9:29"},{"kind":"number","nativeSrc":"7585:2:29","nodeType":"YulLiteral","src":"7585:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7570:3:29","nodeType":"YulIdentifier","src":"7570:3:29"},"nativeSrc":"7570:18:29","nodeType":"YulFunctionCall","src":"7570:18:29"},{"kind":"number","nativeSrc":"7590:2:29","nodeType":"YulLiteral","src":"7590:2:29","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"7563:6:29","nodeType":"YulIdentifier","src":"7563:6:29"},"nativeSrc":"7563:30:29","nodeType":"YulFunctionCall","src":"7563:30:29"},"nativeSrc":"7563:30:29","nodeType":"YulExpressionStatement","src":"7563:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7613:9:29","nodeType":"YulIdentifier","src":"7613:9:29"},{"kind":"number","nativeSrc":"7624:2:29","nodeType":"YulLiteral","src":"7624:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7609:3:29","nodeType":"YulIdentifier","src":"7609:3:29"},"nativeSrc":"7609:18:29","nodeType":"YulFunctionCall","src":"7609:18:29"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"7629:25:29","nodeType":"YulLiteral","src":"7629:25:29","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"7602:6:29","nodeType":"YulIdentifier","src":"7602:6:29"},"nativeSrc":"7602:53:29","nodeType":"YulFunctionCall","src":"7602:53:29"},"nativeSrc":"7602:53:29","nodeType":"YulExpressionStatement","src":"7602:53:29"},{"nativeSrc":"7664:26:29","nodeType":"YulAssignment","src":"7664:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7676:9:29","nodeType":"YulIdentifier","src":"7676:9:29"},{"kind":"number","nativeSrc":"7687:2:29","nodeType":"YulLiteral","src":"7687:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7672:3:29","nodeType":"YulIdentifier","src":"7672:3:29"},"nativeSrc":"7672:18:29","nodeType":"YulFunctionCall","src":"7672:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7664:4:29","nodeType":"YulIdentifier","src":"7664:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7349:347:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7500:9:29","nodeType":"YulTypedName","src":"7500:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7514:4:29","nodeType":"YulTypedName","src":"7514:4:29","type":""}],"src":"7349:347:29"},{"body":{"nativeSrc":"7875:176:29","nodeType":"YulBlock","src":"7875:176:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7892:9:29","nodeType":"YulIdentifier","src":"7892:9:29"},{"kind":"number","nativeSrc":"7903:2:29","nodeType":"YulLiteral","src":"7903:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7885:6:29","nodeType":"YulIdentifier","src":"7885:6:29"},"nativeSrc":"7885:21:29","nodeType":"YulFunctionCall","src":"7885:21:29"},"nativeSrc":"7885:21:29","nodeType":"YulExpressionStatement","src":"7885:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7926:9:29","nodeType":"YulIdentifier","src":"7926:9:29"},{"kind":"number","nativeSrc":"7937:2:29","nodeType":"YulLiteral","src":"7937:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7922:3:29","nodeType":"YulIdentifier","src":"7922:3:29"},"nativeSrc":"7922:18:29","nodeType":"YulFunctionCall","src":"7922:18:29"},{"kind":"number","nativeSrc":"7942:2:29","nodeType":"YulLiteral","src":"7942:2:29","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"7915:6:29","nodeType":"YulIdentifier","src":"7915:6:29"},"nativeSrc":"7915:30:29","nodeType":"YulFunctionCall","src":"7915:30:29"},"nativeSrc":"7915:30:29","nodeType":"YulExpressionStatement","src":"7915:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7965:9:29","nodeType":"YulIdentifier","src":"7965:9:29"},{"kind":"number","nativeSrc":"7976:2:29","nodeType":"YulLiteral","src":"7976:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7961:3:29","nodeType":"YulIdentifier","src":"7961:3:29"},"nativeSrc":"7961:18:29","nodeType":"YulFunctionCall","src":"7961:18:29"},{"hexValue":"496e76616c69642073656e646572206f72207265636569766572","kind":"string","nativeSrc":"7981:28:29","nodeType":"YulLiteral","src":"7981:28:29","type":"","value":"Invalid sender or receiver"}],"functionName":{"name":"mstore","nativeSrc":"7954:6:29","nodeType":"YulIdentifier","src":"7954:6:29"},"nativeSrc":"7954:56:29","nodeType":"YulFunctionCall","src":"7954:56:29"},"nativeSrc":"7954:56:29","nodeType":"YulExpressionStatement","src":"7954:56:29"},{"nativeSrc":"8019:26:29","nodeType":"YulAssignment","src":"8019:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8031:9:29","nodeType":"YulIdentifier","src":"8031:9:29"},{"kind":"number","nativeSrc":"8042:2:29","nodeType":"YulLiteral","src":"8042:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8027:3:29","nodeType":"YulIdentifier","src":"8027:3:29"},"nativeSrc":"8027:18:29","nodeType":"YulFunctionCall","src":"8027:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8019:4:29","nodeType":"YulIdentifier","src":"8019:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_60025fe8a16034c344f99fb27745f11571f566c0ad6bead632c46a6fe7ab4e06__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7701:350:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7852:9:29","nodeType":"YulTypedName","src":"7852:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7866:4:29","nodeType":"YulTypedName","src":"7866:4:29","type":""}],"src":"7701:350:29"},{"body":{"nativeSrc":"8230:168:29","nodeType":"YulBlock","src":"8230:168:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8247:9:29","nodeType":"YulIdentifier","src":"8247:9:29"},{"kind":"number","nativeSrc":"8258:2:29","nodeType":"YulLiteral","src":"8258:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8240:6:29","nodeType":"YulIdentifier","src":"8240:6:29"},"nativeSrc":"8240:21:29","nodeType":"YulFunctionCall","src":"8240:21:29"},"nativeSrc":"8240:21:29","nodeType":"YulExpressionStatement","src":"8240:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8281:9:29","nodeType":"YulIdentifier","src":"8281:9:29"},{"kind":"number","nativeSrc":"8292:2:29","nodeType":"YulLiteral","src":"8292:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8277:3:29","nodeType":"YulIdentifier","src":"8277:3:29"},"nativeSrc":"8277:18:29","nodeType":"YulFunctionCall","src":"8277:18:29"},{"kind":"number","nativeSrc":"8297:2:29","nodeType":"YulLiteral","src":"8297:2:29","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"8270:6:29","nodeType":"YulIdentifier","src":"8270:6:29"},"nativeSrc":"8270:30:29","nodeType":"YulFunctionCall","src":"8270:30:29"},"nativeSrc":"8270:30:29","nodeType":"YulExpressionStatement","src":"8270:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8320:9:29","nodeType":"YulIdentifier","src":"8320:9:29"},{"kind":"number","nativeSrc":"8331:2:29","nodeType":"YulLiteral","src":"8331:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8316:3:29","nodeType":"YulIdentifier","src":"8316:3:29"},"nativeSrc":"8316:18:29","nodeType":"YulFunctionCall","src":"8316:18:29"},{"hexValue":"416c7265616479206275726e207661756c74","kind":"string","nativeSrc":"8336:20:29","nodeType":"YulLiteral","src":"8336:20:29","type":"","value":"Already burn vault"}],"functionName":{"name":"mstore","nativeSrc":"8309:6:29","nodeType":"YulIdentifier","src":"8309:6:29"},"nativeSrc":"8309:48:29","nodeType":"YulFunctionCall","src":"8309:48:29"},"nativeSrc":"8309:48:29","nodeType":"YulExpressionStatement","src":"8309:48:29"},{"nativeSrc":"8366:26:29","nodeType":"YulAssignment","src":"8366:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8378:9:29","nodeType":"YulIdentifier","src":"8378:9:29"},{"kind":"number","nativeSrc":"8389:2:29","nodeType":"YulLiteral","src":"8389:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8374:3:29","nodeType":"YulIdentifier","src":"8374:3:29"},"nativeSrc":"8374:18:29","nodeType":"YulFunctionCall","src":"8374:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8366:4:29","nodeType":"YulIdentifier","src":"8366:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_783d59426230f00e811d19f70cbc216f514e1135bf5f8434dcb11831c50409e1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8056:342:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8207:9:29","nodeType":"YulTypedName","src":"8207:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8221:4:29","nodeType":"YulTypedName","src":"8221:4:29","type":""}],"src":"8056:342:29"},{"body":{"nativeSrc":"8577:174:29","nodeType":"YulBlock","src":"8577:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8594:9:29","nodeType":"YulIdentifier","src":"8594:9:29"},{"kind":"number","nativeSrc":"8605:2:29","nodeType":"YulLiteral","src":"8605:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8587:6:29","nodeType":"YulIdentifier","src":"8587:6:29"},"nativeSrc":"8587:21:29","nodeType":"YulFunctionCall","src":"8587:21:29"},"nativeSrc":"8587:21:29","nodeType":"YulExpressionStatement","src":"8587:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8628:9:29","nodeType":"YulIdentifier","src":"8628:9:29"},{"kind":"number","nativeSrc":"8639:2:29","nodeType":"YulLiteral","src":"8639:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8624:3:29","nodeType":"YulIdentifier","src":"8624:3:29"},"nativeSrc":"8624:18:29","nodeType":"YulFunctionCall","src":"8624:18:29"},{"kind":"number","nativeSrc":"8644:2:29","nodeType":"YulLiteral","src":"8644:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"8617:6:29","nodeType":"YulIdentifier","src":"8617:6:29"},"nativeSrc":"8617:30:29","nodeType":"YulFunctionCall","src":"8617:30:29"},"nativeSrc":"8617:30:29","nodeType":"YulExpressionStatement","src":"8617:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8667:9:29","nodeType":"YulIdentifier","src":"8667:9:29"},{"kind":"number","nativeSrc":"8678:2:29","nodeType":"YulLiteral","src":"8678:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8663:3:29","nodeType":"YulIdentifier","src":"8663:3:29"},"nativeSrc":"8663:18:29","nodeType":"YulFunctionCall","src":"8663:18:29"},{"hexValue":"4275726e61626c6520416464726573732055706461746564","kind":"string","nativeSrc":"8683:26:29","nodeType":"YulLiteral","src":"8683:26:29","type":"","value":"Burnable Address Updated"}],"functionName":{"name":"mstore","nativeSrc":"8656:6:29","nodeType":"YulIdentifier","src":"8656:6:29"},"nativeSrc":"8656:54:29","nodeType":"YulFunctionCall","src":"8656:54:29"},"nativeSrc":"8656:54:29","nodeType":"YulExpressionStatement","src":"8656:54:29"},{"nativeSrc":"8719:26:29","nodeType":"YulAssignment","src":"8719:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8731:9:29","nodeType":"YulIdentifier","src":"8731:9:29"},{"kind":"number","nativeSrc":"8742:2:29","nodeType":"YulLiteral","src":"8742:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8727:3:29","nodeType":"YulIdentifier","src":"8727:3:29"},"nativeSrc":"8727:18:29","nodeType":"YulFunctionCall","src":"8727:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8719:4:29","nodeType":"YulIdentifier","src":"8719:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_83db599dc1885d338eaf0f66e0e5c2cd7c2529b829cb69eac7d07ee0dc3e7980__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8403:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8554:9:29","nodeType":"YulTypedName","src":"8554:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8568:4:29","nodeType":"YulTypedName","src":"8568:4:29","type":""}],"src":"8403:348:29"},{"body":{"nativeSrc":"8930:172:29","nodeType":"YulBlock","src":"8930:172:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8947:9:29","nodeType":"YulIdentifier","src":"8947:9:29"},{"kind":"number","nativeSrc":"8958:2:29","nodeType":"YulLiteral","src":"8958:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8940:6:29","nodeType":"YulIdentifier","src":"8940:6:29"},"nativeSrc":"8940:21:29","nodeType":"YulFunctionCall","src":"8940:21:29"},"nativeSrc":"8940:21:29","nodeType":"YulExpressionStatement","src":"8940:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8981:9:29","nodeType":"YulIdentifier","src":"8981:9:29"},{"kind":"number","nativeSrc":"8992:2:29","nodeType":"YulLiteral","src":"8992:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8977:3:29","nodeType":"YulIdentifier","src":"8977:3:29"},"nativeSrc":"8977:18:29","nodeType":"YulFunctionCall","src":"8977:18:29"},{"kind":"number","nativeSrc":"8997:2:29","nodeType":"YulLiteral","src":"8997:2:29","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"8970:6:29","nodeType":"YulIdentifier","src":"8970:6:29"},"nativeSrc":"8970:30:29","nodeType":"YulFunctionCall","src":"8970:30:29"},"nativeSrc":"8970:30:29","nodeType":"YulExpressionStatement","src":"8970:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9020:9:29","nodeType":"YulIdentifier","src":"9020:9:29"},{"kind":"number","nativeSrc":"9031:2:29","nodeType":"YulLiteral","src":"9031:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9016:3:29","nodeType":"YulIdentifier","src":"9016:3:29"},"nativeSrc":"9016:18:29","nodeType":"YulFunctionCall","src":"9016:18:29"},{"hexValue":"4e6f7420612074726561737572792061646472657373","kind":"string","nativeSrc":"9036:24:29","nodeType":"YulLiteral","src":"9036:24:29","type":"","value":"Not a treasury address"}],"functionName":{"name":"mstore","nativeSrc":"9009:6:29","nodeType":"YulIdentifier","src":"9009:6:29"},"nativeSrc":"9009:52:29","nodeType":"YulFunctionCall","src":"9009:52:29"},"nativeSrc":"9009:52:29","nodeType":"YulExpressionStatement","src":"9009:52:29"},{"nativeSrc":"9070:26:29","nodeType":"YulAssignment","src":"9070:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9082:9:29","nodeType":"YulIdentifier","src":"9082:9:29"},{"kind":"number","nativeSrc":"9093:2:29","nodeType":"YulLiteral","src":"9093:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9078:3:29","nodeType":"YulIdentifier","src":"9078:3:29"},"nativeSrc":"9078:18:29","nodeType":"YulFunctionCall","src":"9078:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9070:4:29","nodeType":"YulIdentifier","src":"9070:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1606976bca4abf9103ed084b42233e8a5473021f32df1896688702b884a8ec56__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8756:346:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8907:9:29","nodeType":"YulTypedName","src":"8907:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8921:4:29","nodeType":"YulTypedName","src":"8921:4:29","type":""}],"src":"8756:346:29"},{"body":{"nativeSrc":"9281:164:29","nodeType":"YulBlock","src":"9281:164:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9298:9:29","nodeType":"YulIdentifier","src":"9298:9:29"},{"kind":"number","nativeSrc":"9309:2:29","nodeType":"YulLiteral","src":"9309:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9291:6:29","nodeType":"YulIdentifier","src":"9291:6:29"},"nativeSrc":"9291:21:29","nodeType":"YulFunctionCall","src":"9291:21:29"},"nativeSrc":"9291:21:29","nodeType":"YulExpressionStatement","src":"9291:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9332:9:29","nodeType":"YulIdentifier","src":"9332:9:29"},{"kind":"number","nativeSrc":"9343:2:29","nodeType":"YulLiteral","src":"9343:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9328:3:29","nodeType":"YulIdentifier","src":"9328:3:29"},"nativeSrc":"9328:18:29","nodeType":"YulFunctionCall","src":"9328:18:29"},{"kind":"number","nativeSrc":"9348:2:29","nodeType":"YulLiteral","src":"9348:2:29","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"9321:6:29","nodeType":"YulIdentifier","src":"9321:6:29"},"nativeSrc":"9321:30:29","nodeType":"YulFunctionCall","src":"9321:30:29"},"nativeSrc":"9321:30:29","nodeType":"YulExpressionStatement","src":"9321:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9371:9:29","nodeType":"YulIdentifier","src":"9371:9:29"},{"kind":"number","nativeSrc":"9382:2:29","nodeType":"YulLiteral","src":"9382:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9367:3:29","nodeType":"YulIdentifier","src":"9367:3:29"},"nativeSrc":"9367:18:29","nodeType":"YulFunctionCall","src":"9367:18:29"},{"hexValue":"416c7265616479206d696e746572","kind":"string","nativeSrc":"9387:16:29","nodeType":"YulLiteral","src":"9387:16:29","type":"","value":"Already minter"}],"functionName":{"name":"mstore","nativeSrc":"9360:6:29","nodeType":"YulIdentifier","src":"9360:6:29"},"nativeSrc":"9360:44:29","nodeType":"YulFunctionCall","src":"9360:44:29"},"nativeSrc":"9360:44:29","nodeType":"YulExpressionStatement","src":"9360:44:29"},{"nativeSrc":"9413:26:29","nodeType":"YulAssignment","src":"9413:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9425:9:29","nodeType":"YulIdentifier","src":"9425:9:29"},{"kind":"number","nativeSrc":"9436:2:29","nodeType":"YulLiteral","src":"9436:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9421:3:29","nodeType":"YulIdentifier","src":"9421:3:29"},"nativeSrc":"9421:18:29","nodeType":"YulFunctionCall","src":"9421:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9413:4:29","nodeType":"YulIdentifier","src":"9413:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c4f849172add0ee9051b6c29f3e21501e3cdfa77d3efc19078e185b7b30d750__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9107:338:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9258:9:29","nodeType":"YulTypedName","src":"9258:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9272:4:29","nodeType":"YulTypedName","src":"9272:4:29","type":""}],"src":"9107:338:29"},{"body":{"nativeSrc":"9624:160:29","nodeType":"YulBlock","src":"9624:160:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9641:9:29","nodeType":"YulIdentifier","src":"9641:9:29"},{"kind":"number","nativeSrc":"9652:2:29","nodeType":"YulLiteral","src":"9652:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9634:6:29","nodeType":"YulIdentifier","src":"9634:6:29"},"nativeSrc":"9634:21:29","nodeType":"YulFunctionCall","src":"9634:21:29"},"nativeSrc":"9634:21:29","nodeType":"YulExpressionStatement","src":"9634:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9675:9:29","nodeType":"YulIdentifier","src":"9675:9:29"},{"kind":"number","nativeSrc":"9686:2:29","nodeType":"YulLiteral","src":"9686:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9671:3:29","nodeType":"YulIdentifier","src":"9671:3:29"},"nativeSrc":"9671:18:29","nodeType":"YulFunctionCall","src":"9671:18:29"},{"kind":"number","nativeSrc":"9691:2:29","nodeType":"YulLiteral","src":"9691:2:29","type":"","value":"10"}],"functionName":{"name":"mstore","nativeSrc":"9664:6:29","nodeType":"YulIdentifier","src":"9664:6:29"},"nativeSrc":"9664:30:29","nodeType":"YulFunctionCall","src":"9664:30:29"},"nativeSrc":"9664:30:29","nodeType":"YulExpressionStatement","src":"9664:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9714:9:29","nodeType":"YulIdentifier","src":"9714:9:29"},{"kind":"number","nativeSrc":"9725:2:29","nodeType":"YulLiteral","src":"9725:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9710:3:29","nodeType":"YulIdentifier","src":"9710:3:29"},"nativeSrc":"9710:18:29","nodeType":"YulFunctionCall","src":"9710:18:29"},{"hexValue":"4e6577204d696e746572","kind":"string","nativeSrc":"9730:12:29","nodeType":"YulLiteral","src":"9730:12:29","type":"","value":"New Minter"}],"functionName":{"name":"mstore","nativeSrc":"9703:6:29","nodeType":"YulIdentifier","src":"9703:6:29"},"nativeSrc":"9703:40:29","nodeType":"YulFunctionCall","src":"9703:40:29"},"nativeSrc":"9703:40:29","nodeType":"YulExpressionStatement","src":"9703:40:29"},{"nativeSrc":"9752:26:29","nodeType":"YulAssignment","src":"9752:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9764:9:29","nodeType":"YulIdentifier","src":"9764:9:29"},{"kind":"number","nativeSrc":"9775:2:29","nodeType":"YulLiteral","src":"9775:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9760:3:29","nodeType":"YulIdentifier","src":"9760:3:29"},"nativeSrc":"9760:18:29","nodeType":"YulFunctionCall","src":"9760:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9752:4:29","nodeType":"YulIdentifier","src":"9752:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7eded41d906ad8da9da4aaa2cae68f4bc27e405921f0ba877c84d9c54d24fd39__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9450:334:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9601:9:29","nodeType":"YulTypedName","src":"9601:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9615:4:29","nodeType":"YulTypedName","src":"9615:4:29","type":""}],"src":"9450:334:29"},{"body":{"nativeSrc":"9963:163:29","nodeType":"YulBlock","src":"9963:163:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9980:9:29","nodeType":"YulIdentifier","src":"9980:9:29"},{"kind":"number","nativeSrc":"9991:2:29","nodeType":"YulLiteral","src":"9991:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9973:6:29","nodeType":"YulIdentifier","src":"9973:6:29"},"nativeSrc":"9973:21:29","nodeType":"YulFunctionCall","src":"9973:21:29"},"nativeSrc":"9973:21:29","nodeType":"YulExpressionStatement","src":"9973:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10014:9:29","nodeType":"YulIdentifier","src":"10014:9:29"},{"kind":"number","nativeSrc":"10025:2:29","nodeType":"YulLiteral","src":"10025:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10010:3:29","nodeType":"YulIdentifier","src":"10010:3:29"},"nativeSrc":"10010:18:29","nodeType":"YulFunctionCall","src":"10010:18:29"},{"kind":"number","nativeSrc":"10030:2:29","nodeType":"YulLiteral","src":"10030:2:29","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"10003:6:29","nodeType":"YulIdentifier","src":"10003:6:29"},"nativeSrc":"10003:30:29","nodeType":"YulFunctionCall","src":"10003:30:29"},"nativeSrc":"10003:30:29","nodeType":"YulExpressionStatement","src":"10003:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10053:9:29","nodeType":"YulIdentifier","src":"10053:9:29"},{"kind":"number","nativeSrc":"10064:2:29","nodeType":"YulLiteral","src":"10064:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10049:3:29","nodeType":"YulIdentifier","src":"10049:3:29"},"nativeSrc":"10049:18:29","nodeType":"YulFunctionCall","src":"10049:18:29"},{"hexValue":"4e6f74206e6f6d696e61746564","kind":"string","nativeSrc":"10069:15:29","nodeType":"YulLiteral","src":"10069:15:29","type":"","value":"Not nominated"}],"functionName":{"name":"mstore","nativeSrc":"10042:6:29","nodeType":"YulIdentifier","src":"10042:6:29"},"nativeSrc":"10042:43:29","nodeType":"YulFunctionCall","src":"10042:43:29"},"nativeSrc":"10042:43:29","nodeType":"YulExpressionStatement","src":"10042:43:29"},{"nativeSrc":"10094:26:29","nodeType":"YulAssignment","src":"10094:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10106:9:29","nodeType":"YulIdentifier","src":"10106:9:29"},{"kind":"number","nativeSrc":"10117:2:29","nodeType":"YulLiteral","src":"10117:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10102:3:29","nodeType":"YulIdentifier","src":"10102:3:29"},"nativeSrc":"10102:18:29","nodeType":"YulFunctionCall","src":"10102:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10094:4:29","nodeType":"YulIdentifier","src":"10094:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d835f9bafafc594c77658738155ae0e7f00fb1f12a6421deb992433937d83b74__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9789:337:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9940:9:29","nodeType":"YulTypedName","src":"9940:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9954:4:29","nodeType":"YulTypedName","src":"9954:4:29","type":""}],"src":"9789:337:29"},{"body":{"nativeSrc":"10305:171:29","nodeType":"YulBlock","src":"10305:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10322:9:29","nodeType":"YulIdentifier","src":"10322:9:29"},{"kind":"number","nativeSrc":"10333:2:29","nodeType":"YulLiteral","src":"10333:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10315:6:29","nodeType":"YulIdentifier","src":"10315:6:29"},"nativeSrc":"10315:21:29","nodeType":"YulFunctionCall","src":"10315:21:29"},"nativeSrc":"10315:21:29","nodeType":"YulExpressionStatement","src":"10315:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10356:9:29","nodeType":"YulIdentifier","src":"10356:9:29"},{"kind":"number","nativeSrc":"10367:2:29","nodeType":"YulLiteral","src":"10367:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10352:3:29","nodeType":"YulIdentifier","src":"10352:3:29"},"nativeSrc":"10352:18:29","nodeType":"YulFunctionCall","src":"10352:18:29"},{"kind":"number","nativeSrc":"10372:2:29","nodeType":"YulLiteral","src":"10372:2:29","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"10345:6:29","nodeType":"YulIdentifier","src":"10345:6:29"},"nativeSrc":"10345:30:29","nodeType":"YulFunctionCall","src":"10345:30:29"},"nativeSrc":"10345:30:29","nodeType":"YulExpressionStatement","src":"10345:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10395:9:29","nodeType":"YulIdentifier","src":"10395:9:29"},{"kind":"number","nativeSrc":"10406:2:29","nodeType":"YulLiteral","src":"10406:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10391:3:29","nodeType":"YulIdentifier","src":"10391:3:29"},"nativeSrc":"10391:18:29","nodeType":"YulFunctionCall","src":"10391:18:29"},{"hexValue":"4e6f2070656e64696e67206e6f6d696e6174696f6e","kind":"string","nativeSrc":"10411:23:29","nodeType":"YulLiteral","src":"10411:23:29","type":"","value":"No pending nomination"}],"functionName":{"name":"mstore","nativeSrc":"10384:6:29","nodeType":"YulIdentifier","src":"10384:6:29"},"nativeSrc":"10384:51:29","nodeType":"YulFunctionCall","src":"10384:51:29"},"nativeSrc":"10384:51:29","nodeType":"YulExpressionStatement","src":"10384:51:29"},{"nativeSrc":"10444:26:29","nodeType":"YulAssignment","src":"10444:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10456:9:29","nodeType":"YulIdentifier","src":"10456:9:29"},{"kind":"number","nativeSrc":"10467:2:29","nodeType":"YulLiteral","src":"10467:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10452:3:29","nodeType":"YulIdentifier","src":"10452:3:29"},"nativeSrc":"10452:18:29","nodeType":"YulFunctionCall","src":"10452:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10444:4:29","nodeType":"YulIdentifier","src":"10444:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f150a6193dc925490f18a478495ba2387b38e614c5c2039387a5d1078f56c5db__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10131:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10282:9:29","nodeType":"YulTypedName","src":"10282:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10296:4:29","nodeType":"YulTypedName","src":"10296:4:29","type":""}],"src":"10131:345:29"},{"body":{"nativeSrc":"10655:165:29","nodeType":"YulBlock","src":"10655:165:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10672:9:29","nodeType":"YulIdentifier","src":"10672:9:29"},{"kind":"number","nativeSrc":"10683:2:29","nodeType":"YulLiteral","src":"10683:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10665:6:29","nodeType":"YulIdentifier","src":"10665:6:29"},"nativeSrc":"10665:21:29","nodeType":"YulFunctionCall","src":"10665:21:29"},"nativeSrc":"10665:21:29","nodeType":"YulExpressionStatement","src":"10665:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10706:9:29","nodeType":"YulIdentifier","src":"10706:9:29"},{"kind":"number","nativeSrc":"10717:2:29","nodeType":"YulLiteral","src":"10717:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10702:3:29","nodeType":"YulIdentifier","src":"10702:3:29"},"nativeSrc":"10702:18:29","nodeType":"YulFunctionCall","src":"10702:18:29"},{"kind":"number","nativeSrc":"10722:2:29","nodeType":"YulLiteral","src":"10722:2:29","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"10695:6:29","nodeType":"YulIdentifier","src":"10695:6:29"},"nativeSrc":"10695:30:29","nodeType":"YulFunctionCall","src":"10695:30:29"},"nativeSrc":"10695:30:29","nodeType":"YulExpressionStatement","src":"10695:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10745:9:29","nodeType":"YulIdentifier","src":"10745:9:29"},{"kind":"number","nativeSrc":"10756:2:29","nodeType":"YulLiteral","src":"10756:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10741:3:29","nodeType":"YulIdentifier","src":"10741:3:29"},"nativeSrc":"10741:18:29","nodeType":"YulFunctionCall","src":"10741:18:29"},{"hexValue":"4e65772041646d696e204164646564","kind":"string","nativeSrc":"10761:17:29","nodeType":"YulLiteral","src":"10761:17:29","type":"","value":"New Admin Added"}],"functionName":{"name":"mstore","nativeSrc":"10734:6:29","nodeType":"YulIdentifier","src":"10734:6:29"},"nativeSrc":"10734:45:29","nodeType":"YulFunctionCall","src":"10734:45:29"},"nativeSrc":"10734:45:29","nodeType":"YulExpressionStatement","src":"10734:45:29"},{"nativeSrc":"10788:26:29","nodeType":"YulAssignment","src":"10788:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10800:9:29","nodeType":"YulIdentifier","src":"10800:9:29"},{"kind":"number","nativeSrc":"10811:2:29","nodeType":"YulLiteral","src":"10811:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10796:3:29","nodeType":"YulIdentifier","src":"10796:3:29"},"nativeSrc":"10796:18:29","nodeType":"YulFunctionCall","src":"10796:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10788:4:29","nodeType":"YulIdentifier","src":"10788:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_960f4b71dd6f99169c4f83e15f5d7adab2efe25ef7286f80dfb2c3a92a31387a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10481:339:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10632:9:29","nodeType":"YulTypedName","src":"10632:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10646:4:29","nodeType":"YulTypedName","src":"10646:4:29","type":""}],"src":"10481:339:29"},{"body":{"nativeSrc":"10999:166:29","nodeType":"YulBlock","src":"10999:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11016:9:29","nodeType":"YulIdentifier","src":"11016:9:29"},{"kind":"number","nativeSrc":"11027:2:29","nodeType":"YulLiteral","src":"11027:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11009:6:29","nodeType":"YulIdentifier","src":"11009:6:29"},"nativeSrc":"11009:21:29","nodeType":"YulFunctionCall","src":"11009:21:29"},"nativeSrc":"11009:21:29","nodeType":"YulExpressionStatement","src":"11009:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11050:9:29","nodeType":"YulIdentifier","src":"11050:9:29"},{"kind":"number","nativeSrc":"11061:2:29","nodeType":"YulLiteral","src":"11061:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11046:3:29","nodeType":"YulIdentifier","src":"11046:3:29"},"nativeSrc":"11046:18:29","nodeType":"YulFunctionCall","src":"11046:18:29"},{"kind":"number","nativeSrc":"11066:2:29","nodeType":"YulLiteral","src":"11066:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"11039:6:29","nodeType":"YulIdentifier","src":"11039:6:29"},"nativeSrc":"11039:30:29","nodeType":"YulFunctionCall","src":"11039:30:29"},"nativeSrc":"11039:30:29","nodeType":"YulExpressionStatement","src":"11039:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11089:9:29","nodeType":"YulIdentifier","src":"11089:9:29"},{"kind":"number","nativeSrc":"11100:2:29","nodeType":"YulLiteral","src":"11100:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11085:3:29","nodeType":"YulIdentifier","src":"11085:3:29"},"nativeSrc":"11085:18:29","nodeType":"YulFunctionCall","src":"11085:18:29"},{"hexValue":"416c7265616479207472656173757279","kind":"string","nativeSrc":"11105:18:29","nodeType":"YulLiteral","src":"11105:18:29","type":"","value":"Already treasury"}],"functionName":{"name":"mstore","nativeSrc":"11078:6:29","nodeType":"YulIdentifier","src":"11078:6:29"},"nativeSrc":"11078:46:29","nodeType":"YulFunctionCall","src":"11078:46:29"},"nativeSrc":"11078:46:29","nodeType":"YulExpressionStatement","src":"11078:46:29"},{"nativeSrc":"11133:26:29","nodeType":"YulAssignment","src":"11133:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11145:9:29","nodeType":"YulIdentifier","src":"11145:9:29"},{"kind":"number","nativeSrc":"11156:2:29","nodeType":"YulLiteral","src":"11156:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11141:3:29","nodeType":"YulIdentifier","src":"11141:3:29"},"nativeSrc":"11141:18:29","nodeType":"YulFunctionCall","src":"11141:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11133:4:29","nodeType":"YulIdentifier","src":"11133:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_bba98c6c5eee4392be61cce76bb892247efee416ed42d1b480f24b0cffd19739__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10825:340:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10976:9:29","nodeType":"YulTypedName","src":"10976:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10990:4:29","nodeType":"YulTypedName","src":"10990:4:29","type":""}],"src":"10825:340:29"},{"body":{"nativeSrc":"11344:180:29","nodeType":"YulBlock","src":"11344:180:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11361:9:29","nodeType":"YulIdentifier","src":"11361:9:29"},{"kind":"number","nativeSrc":"11372:2:29","nodeType":"YulLiteral","src":"11372:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11354:6:29","nodeType":"YulIdentifier","src":"11354:6:29"},"nativeSrc":"11354:21:29","nodeType":"YulFunctionCall","src":"11354:21:29"},"nativeSrc":"11354:21:29","nodeType":"YulExpressionStatement","src":"11354:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11395:9:29","nodeType":"YulIdentifier","src":"11395:9:29"},{"kind":"number","nativeSrc":"11406:2:29","nodeType":"YulLiteral","src":"11406:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11391:3:29","nodeType":"YulIdentifier","src":"11391:3:29"},"nativeSrc":"11391:18:29","nodeType":"YulFunctionCall","src":"11391:18:29"},{"kind":"number","nativeSrc":"11411:2:29","nodeType":"YulLiteral","src":"11411:2:29","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"11384:6:29","nodeType":"YulIdentifier","src":"11384:6:29"},"nativeSrc":"11384:30:29","nodeType":"YulFunctionCall","src":"11384:30:29"},"nativeSrc":"11384:30:29","nodeType":"YulExpressionStatement","src":"11384:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11434:9:29","nodeType":"YulIdentifier","src":"11434:9:29"},{"kind":"number","nativeSrc":"11445:2:29","nodeType":"YulLiteral","src":"11445:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11430:3:29","nodeType":"YulIdentifier","src":"11430:3:29"},"nativeSrc":"11430:18:29","nodeType":"YulFunctionCall","src":"11430:18:29"},{"hexValue":"4e65772053656e64657220416464726573732057686974656c6973746564","kind":"string","nativeSrc":"11450:32:29","nodeType":"YulLiteral","src":"11450:32:29","type":"","value":"New Sender Address Whitelisted"}],"functionName":{"name":"mstore","nativeSrc":"11423:6:29","nodeType":"YulIdentifier","src":"11423:6:29"},"nativeSrc":"11423:60:29","nodeType":"YulFunctionCall","src":"11423:60:29"},"nativeSrc":"11423:60:29","nodeType":"YulExpressionStatement","src":"11423:60:29"},{"nativeSrc":"11492:26:29","nodeType":"YulAssignment","src":"11492:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11504:9:29","nodeType":"YulIdentifier","src":"11504:9:29"},{"kind":"number","nativeSrc":"11515:2:29","nodeType":"YulLiteral","src":"11515:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11500:3:29","nodeType":"YulIdentifier","src":"11500:3:29"},"nativeSrc":"11500:18:29","nodeType":"YulFunctionCall","src":"11500:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11492:4:29","nodeType":"YulIdentifier","src":"11492:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11170:354:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11321:9:29","nodeType":"YulTypedName","src":"11321:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11335:4:29","nodeType":"YulTypedName","src":"11335:4:29","type":""}],"src":"11170:354:29"},{"body":{"nativeSrc":"11703:176:29","nodeType":"YulBlock","src":"11703:176:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11720:9:29","nodeType":"YulIdentifier","src":"11720:9:29"},{"kind":"number","nativeSrc":"11731:2:29","nodeType":"YulLiteral","src":"11731:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11713:6:29","nodeType":"YulIdentifier","src":"11713:6:29"},"nativeSrc":"11713:21:29","nodeType":"YulFunctionCall","src":"11713:21:29"},"nativeSrc":"11713:21:29","nodeType":"YulExpressionStatement","src":"11713:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11754:9:29","nodeType":"YulIdentifier","src":"11754:9:29"},{"kind":"number","nativeSrc":"11765:2:29","nodeType":"YulLiteral","src":"11765:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11750:3:29","nodeType":"YulIdentifier","src":"11750:3:29"},"nativeSrc":"11750:18:29","nodeType":"YulFunctionCall","src":"11750:18:29"},{"kind":"number","nativeSrc":"11770:2:29","nodeType":"YulLiteral","src":"11770:2:29","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"11743:6:29","nodeType":"YulIdentifier","src":"11743:6:29"},"nativeSrc":"11743:30:29","nodeType":"YulFunctionCall","src":"11743:30:29"},"nativeSrc":"11743:30:29","nodeType":"YulExpressionStatement","src":"11743:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11793:9:29","nodeType":"YulIdentifier","src":"11793:9:29"},{"kind":"number","nativeSrc":"11804:2:29","nodeType":"YulLiteral","src":"11804:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11789:3:29","nodeType":"YulIdentifier","src":"11789:3:29"},"nativeSrc":"11789:18:29","nodeType":"YulFunctionCall","src":"11789:18:29"},{"hexValue":"4e65772054726561737572792041646472657373204164646564","kind":"string","nativeSrc":"11809:28:29","nodeType":"YulLiteral","src":"11809:28:29","type":"","value":"New Treasury Address Added"}],"functionName":{"name":"mstore","nativeSrc":"11782:6:29","nodeType":"YulIdentifier","src":"11782:6:29"},"nativeSrc":"11782:56:29","nodeType":"YulFunctionCall","src":"11782:56:29"},"nativeSrc":"11782:56:29","nodeType":"YulExpressionStatement","src":"11782:56:29"},{"nativeSrc":"11847:26:29","nodeType":"YulAssignment","src":"11847:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11859:9:29","nodeType":"YulIdentifier","src":"11859:9:29"},{"kind":"number","nativeSrc":"11870:2:29","nodeType":"YulLiteral","src":"11870:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11855:3:29","nodeType":"YulIdentifier","src":"11855:3:29"},"nativeSrc":"11855:18:29","nodeType":"YulFunctionCall","src":"11855:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11847:4:29","nodeType":"YulIdentifier","src":"11847:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_06fe93bd62b86952d7d45d3607a1af05329ef3f1a265455c47e7e923d4c6c91f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11529:350:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11680:9:29","nodeType":"YulTypedName","src":"11680:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11694:4:29","nodeType":"YulTypedName","src":"11694:4:29","type":""}],"src":"11529:350:29"},{"body":{"nativeSrc":"11916:95:29","nodeType":"YulBlock","src":"11916:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11933:1:29","nodeType":"YulLiteral","src":"11933:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11940:3:29","nodeType":"YulLiteral","src":"11940:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"11945:10:29","nodeType":"YulLiteral","src":"11945:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11936:3:29","nodeType":"YulIdentifier","src":"11936:3:29"},"nativeSrc":"11936:20:29","nodeType":"YulFunctionCall","src":"11936:20:29"}],"functionName":{"name":"mstore","nativeSrc":"11926:6:29","nodeType":"YulIdentifier","src":"11926:6:29"},"nativeSrc":"11926:31:29","nodeType":"YulFunctionCall","src":"11926:31:29"},"nativeSrc":"11926:31:29","nodeType":"YulExpressionStatement","src":"11926:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11973:1:29","nodeType":"YulLiteral","src":"11973:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"11976:4:29","nodeType":"YulLiteral","src":"11976:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11966:6:29","nodeType":"YulIdentifier","src":"11966:6:29"},"nativeSrc":"11966:15:29","nodeType":"YulFunctionCall","src":"11966:15:29"},"nativeSrc":"11966:15:29","nodeType":"YulExpressionStatement","src":"11966:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11997:1:29","nodeType":"YulLiteral","src":"11997:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"12000:4:29","nodeType":"YulLiteral","src":"12000:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11990:6:29","nodeType":"YulIdentifier","src":"11990:6:29"},"nativeSrc":"11990:15:29","nodeType":"YulFunctionCall","src":"11990:15:29"},"nativeSrc":"11990:15:29","nodeType":"YulExpressionStatement","src":"11990:15:29"}]},"name":"panic_error_0x11","nativeSrc":"11884:127:29","nodeType":"YulFunctionDefinition","src":"11884:127:29"},{"body":{"nativeSrc":"12080:352:29","nodeType":"YulBlock","src":"12080:352:29","statements":[{"nativeSrc":"12090:16:29","nodeType":"YulVariableDeclaration","src":"12090:16:29","value":{"kind":"number","nativeSrc":"12105:1:29","nodeType":"YulLiteral","src":"12105:1:29","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"12094:7:29","nodeType":"YulTypedName","src":"12094:7:29","type":""}]},{"nativeSrc":"12115:10:29","nodeType":"YulAssignment","src":"12115:10:29","value":{"kind":"number","nativeSrc":"12124:1:29","nodeType":"YulLiteral","src":"12124:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"12115:5:29","nodeType":"YulIdentifier","src":"12115:5:29"}]},{"nativeSrc":"12134:13:29","nodeType":"YulAssignment","src":"12134:13:29","value":{"name":"_base","nativeSrc":"12142:5:29","nodeType":"YulIdentifier","src":"12142:5:29"},"variableNames":[{"name":"base","nativeSrc":"12134:4:29","nodeType":"YulIdentifier","src":"12134:4:29"}]},{"body":{"nativeSrc":"12198:228:29","nodeType":"YulBlock","src":"12198:228:29","statements":[{"body":{"nativeSrc":"12243:22:29","nodeType":"YulBlock","src":"12243:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12245:16:29","nodeType":"YulIdentifier","src":"12245:16:29"},"nativeSrc":"12245:18:29","nodeType":"YulFunctionCall","src":"12245:18:29"},"nativeSrc":"12245:18:29","nodeType":"YulExpressionStatement","src":"12245:18:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"12218:4:29","nodeType":"YulIdentifier","src":"12218:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12232:1:29","nodeType":"YulLiteral","src":"12232:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"12228:3:29","nodeType":"YulIdentifier","src":"12228:3:29"},"nativeSrc":"12228:6:29","nodeType":"YulFunctionCall","src":"12228:6:29"},{"name":"base","nativeSrc":"12236:4:29","nodeType":"YulIdentifier","src":"12236:4:29"}],"functionName":{"name":"div","nativeSrc":"12224:3:29","nodeType":"YulIdentifier","src":"12224:3:29"},"nativeSrc":"12224:17:29","nodeType":"YulFunctionCall","src":"12224:17:29"}],"functionName":{"name":"gt","nativeSrc":"12215:2:29","nodeType":"YulIdentifier","src":"12215:2:29"},"nativeSrc":"12215:27:29","nodeType":"YulFunctionCall","src":"12215:27:29"},"nativeSrc":"12212:53:29","nodeType":"YulIf","src":"12212:53:29"},{"body":{"nativeSrc":"12304:29:29","nodeType":"YulBlock","src":"12304:29:29","statements":[{"nativeSrc":"12306:25:29","nodeType":"YulAssignment","src":"12306:25:29","value":{"arguments":[{"name":"power","nativeSrc":"12319:5:29","nodeType":"YulIdentifier","src":"12319:5:29"},{"name":"base","nativeSrc":"12326:4:29","nodeType":"YulIdentifier","src":"12326:4:29"}],"functionName":{"name":"mul","nativeSrc":"12315:3:29","nodeType":"YulIdentifier","src":"12315:3:29"},"nativeSrc":"12315:16:29","nodeType":"YulFunctionCall","src":"12315:16:29"},"variableNames":[{"name":"power","nativeSrc":"12306:5:29","nodeType":"YulIdentifier","src":"12306:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12285:8:29","nodeType":"YulIdentifier","src":"12285:8:29"},{"name":"power_1","nativeSrc":"12295:7:29","nodeType":"YulIdentifier","src":"12295:7:29"}],"functionName":{"name":"and","nativeSrc":"12281:3:29","nodeType":"YulIdentifier","src":"12281:3:29"},"nativeSrc":"12281:22:29","nodeType":"YulFunctionCall","src":"12281:22:29"},"nativeSrc":"12278:55:29","nodeType":"YulIf","src":"12278:55:29"},{"nativeSrc":"12346:23:29","nodeType":"YulAssignment","src":"12346:23:29","value":{"arguments":[{"name":"base","nativeSrc":"12358:4:29","nodeType":"YulIdentifier","src":"12358:4:29"},{"name":"base","nativeSrc":"12364:4:29","nodeType":"YulIdentifier","src":"12364:4:29"}],"functionName":{"name":"mul","nativeSrc":"12354:3:29","nodeType":"YulIdentifier","src":"12354:3:29"},"nativeSrc":"12354:15:29","nodeType":"YulFunctionCall","src":"12354:15:29"},"variableNames":[{"name":"base","nativeSrc":"12346:4:29","nodeType":"YulIdentifier","src":"12346:4:29"}]},{"nativeSrc":"12382:34:29","nodeType":"YulAssignment","src":"12382:34:29","value":{"arguments":[{"name":"power_1","nativeSrc":"12398:7:29","nodeType":"YulIdentifier","src":"12398:7:29"},{"name":"exponent","nativeSrc":"12407:8:29","nodeType":"YulIdentifier","src":"12407:8:29"}],"functionName":{"name":"shr","nativeSrc":"12394:3:29","nodeType":"YulIdentifier","src":"12394:3:29"},"nativeSrc":"12394:22:29","nodeType":"YulFunctionCall","src":"12394:22:29"},"variableNames":[{"name":"exponent","nativeSrc":"12382:8:29","nodeType":"YulIdentifier","src":"12382:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12167:8:29","nodeType":"YulIdentifier","src":"12167:8:29"},{"name":"power_1","nativeSrc":"12177:7:29","nodeType":"YulIdentifier","src":"12177:7:29"}],"functionName":{"name":"gt","nativeSrc":"12164:2:29","nodeType":"YulIdentifier","src":"12164:2:29"},"nativeSrc":"12164:21:29","nodeType":"YulFunctionCall","src":"12164:21:29"},"nativeSrc":"12156:270:29","nodeType":"YulForLoop","post":{"nativeSrc":"12186:3:29","nodeType":"YulBlock","src":"12186:3:29","statements":[]},"pre":{"nativeSrc":"12160:3:29","nodeType":"YulBlock","src":"12160:3:29","statements":[]},"src":"12156:270:29"}]},"name":"checked_exp_helper","nativeSrc":"12016:416:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"12044:5:29","nodeType":"YulTypedName","src":"12044:5:29","type":""},{"name":"exponent","nativeSrc":"12051:8:29","nodeType":"YulTypedName","src":"12051:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"12064:5:29","nodeType":"YulTypedName","src":"12064:5:29","type":""},{"name":"base","nativeSrc":"12071:4:29","nodeType":"YulTypedName","src":"12071:4:29","type":""}],"src":"12016:416:29"},{"body":{"nativeSrc":"12496:747:29","nodeType":"YulBlock","src":"12496:747:29","statements":[{"body":{"nativeSrc":"12534:52:29","nodeType":"YulBlock","src":"12534:52:29","statements":[{"nativeSrc":"12548:10:29","nodeType":"YulAssignment","src":"12548:10:29","value":{"kind":"number","nativeSrc":"12557:1:29","nodeType":"YulLiteral","src":"12557:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"12548:5:29","nodeType":"YulIdentifier","src":"12548:5:29"}]},{"nativeSrc":"12571:5:29","nodeType":"YulLeave","src":"12571:5:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12516:8:29","nodeType":"YulIdentifier","src":"12516:8:29"}],"functionName":{"name":"iszero","nativeSrc":"12509:6:29","nodeType":"YulIdentifier","src":"12509:6:29"},"nativeSrc":"12509:16:29","nodeType":"YulFunctionCall","src":"12509:16:29"},"nativeSrc":"12506:80:29","nodeType":"YulIf","src":"12506:80:29"},{"body":{"nativeSrc":"12619:52:29","nodeType":"YulBlock","src":"12619:52:29","statements":[{"nativeSrc":"12633:10:29","nodeType":"YulAssignment","src":"12633:10:29","value":{"kind":"number","nativeSrc":"12642:1:29","nodeType":"YulLiteral","src":"12642:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"12633:5:29","nodeType":"YulIdentifier","src":"12633:5:29"}]},{"nativeSrc":"12656:5:29","nodeType":"YulLeave","src":"12656:5:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"12605:4:29","nodeType":"YulIdentifier","src":"12605:4:29"}],"functionName":{"name":"iszero","nativeSrc":"12598:6:29","nodeType":"YulIdentifier","src":"12598:6:29"},"nativeSrc":"12598:12:29","nodeType":"YulFunctionCall","src":"12598:12:29"},"nativeSrc":"12595:76:29","nodeType":"YulIf","src":"12595:76:29"},{"cases":[{"body":{"nativeSrc":"12707:52:29","nodeType":"YulBlock","src":"12707:52:29","statements":[{"nativeSrc":"12721:10:29","nodeType":"YulAssignment","src":"12721:10:29","value":{"kind":"number","nativeSrc":"12730:1:29","nodeType":"YulLiteral","src":"12730:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"12721:5:29","nodeType":"YulIdentifier","src":"12721:5:29"}]},{"nativeSrc":"12744:5:29","nodeType":"YulLeave","src":"12744:5:29"}]},"nativeSrc":"12700:59:29","nodeType":"YulCase","src":"12700:59:29","value":{"kind":"number","nativeSrc":"12705:1:29","nodeType":"YulLiteral","src":"12705:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"12775:123:29","nodeType":"YulBlock","src":"12775:123:29","statements":[{"body":{"nativeSrc":"12810:22:29","nodeType":"YulBlock","src":"12810:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12812:16:29","nodeType":"YulIdentifier","src":"12812:16:29"},"nativeSrc":"12812:18:29","nodeType":"YulFunctionCall","src":"12812:18:29"},"nativeSrc":"12812:18:29","nodeType":"YulExpressionStatement","src":"12812:18:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12795:8:29","nodeType":"YulIdentifier","src":"12795:8:29"},{"kind":"number","nativeSrc":"12805:3:29","nodeType":"YulLiteral","src":"12805:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"12792:2:29","nodeType":"YulIdentifier","src":"12792:2:29"},"nativeSrc":"12792:17:29","nodeType":"YulFunctionCall","src":"12792:17:29"},"nativeSrc":"12789:43:29","nodeType":"YulIf","src":"12789:43:29"},{"nativeSrc":"12845:25:29","nodeType":"YulAssignment","src":"12845:25:29","value":{"arguments":[{"name":"exponent","nativeSrc":"12858:8:29","nodeType":"YulIdentifier","src":"12858:8:29"},{"kind":"number","nativeSrc":"12868:1:29","nodeType":"YulLiteral","src":"12868:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12854:3:29","nodeType":"YulIdentifier","src":"12854:3:29"},"nativeSrc":"12854:16:29","nodeType":"YulFunctionCall","src":"12854:16:29"},"variableNames":[{"name":"power","nativeSrc":"12845:5:29","nodeType":"YulIdentifier","src":"12845:5:29"}]},{"nativeSrc":"12883:5:29","nodeType":"YulLeave","src":"12883:5:29"}]},"nativeSrc":"12768:130:29","nodeType":"YulCase","src":"12768:130:29","value":{"kind":"number","nativeSrc":"12773:1:29","nodeType":"YulLiteral","src":"12773:1:29","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"12687:4:29","nodeType":"YulIdentifier","src":"12687:4:29"},"nativeSrc":"12680:218:29","nodeType":"YulSwitch","src":"12680:218:29"},{"body":{"nativeSrc":"12996:70:29","nodeType":"YulBlock","src":"12996:70:29","statements":[{"nativeSrc":"13010:28:29","nodeType":"YulAssignment","src":"13010:28:29","value":{"arguments":[{"name":"base","nativeSrc":"13023:4:29","nodeType":"YulIdentifier","src":"13023:4:29"},{"name":"exponent","nativeSrc":"13029:8:29","nodeType":"YulIdentifier","src":"13029:8:29"}],"functionName":{"name":"exp","nativeSrc":"13019:3:29","nodeType":"YulIdentifier","src":"13019:3:29"},"nativeSrc":"13019:19:29","nodeType":"YulFunctionCall","src":"13019:19:29"},"variableNames":[{"name":"power","nativeSrc":"13010:5:29","nodeType":"YulIdentifier","src":"13010:5:29"}]},{"nativeSrc":"13051:5:29","nodeType":"YulLeave","src":"13051:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"12920:4:29","nodeType":"YulIdentifier","src":"12920:4:29"},{"kind":"number","nativeSrc":"12926:2:29","nodeType":"YulLiteral","src":"12926:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"12917:2:29","nodeType":"YulIdentifier","src":"12917:2:29"},"nativeSrc":"12917:12:29","nodeType":"YulFunctionCall","src":"12917:12:29"},{"arguments":[{"name":"exponent","nativeSrc":"12934:8:29","nodeType":"YulIdentifier","src":"12934:8:29"},{"kind":"number","nativeSrc":"12944:2:29","nodeType":"YulLiteral","src":"12944:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"12931:2:29","nodeType":"YulIdentifier","src":"12931:2:29"},"nativeSrc":"12931:16:29","nodeType":"YulFunctionCall","src":"12931:16:29"}],"functionName":{"name":"and","nativeSrc":"12913:3:29","nodeType":"YulIdentifier","src":"12913:3:29"},"nativeSrc":"12913:35:29","nodeType":"YulFunctionCall","src":"12913:35:29"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"12957:4:29","nodeType":"YulIdentifier","src":"12957:4:29"},{"kind":"number","nativeSrc":"12963:3:29","nodeType":"YulLiteral","src":"12963:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"12954:2:29","nodeType":"YulIdentifier","src":"12954:2:29"},"nativeSrc":"12954:13:29","nodeType":"YulFunctionCall","src":"12954:13:29"},{"arguments":[{"name":"exponent","nativeSrc":"12972:8:29","nodeType":"YulIdentifier","src":"12972:8:29"},{"kind":"number","nativeSrc":"12982:2:29","nodeType":"YulLiteral","src":"12982:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12969:2:29","nodeType":"YulIdentifier","src":"12969:2:29"},"nativeSrc":"12969:16:29","nodeType":"YulFunctionCall","src":"12969:16:29"}],"functionName":{"name":"and","nativeSrc":"12950:3:29","nodeType":"YulIdentifier","src":"12950:3:29"},"nativeSrc":"12950:36:29","nodeType":"YulFunctionCall","src":"12950:36:29"}],"functionName":{"name":"or","nativeSrc":"12910:2:29","nodeType":"YulIdentifier","src":"12910:2:29"},"nativeSrc":"12910:77:29","nodeType":"YulFunctionCall","src":"12910:77:29"},"nativeSrc":"12907:159:29","nodeType":"YulIf","src":"12907:159:29"},{"nativeSrc":"13075:57:29","nodeType":"YulVariableDeclaration","src":"13075:57:29","value":{"arguments":[{"name":"base","nativeSrc":"13117:4:29","nodeType":"YulIdentifier","src":"13117:4:29"},{"name":"exponent","nativeSrc":"13123:8:29","nodeType":"YulIdentifier","src":"13123:8:29"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"13098:18:29","nodeType":"YulIdentifier","src":"13098:18:29"},"nativeSrc":"13098:34:29","nodeType":"YulFunctionCall","src":"13098:34:29"},"variables":[{"name":"power_1","nativeSrc":"13079:7:29","nodeType":"YulTypedName","src":"13079:7:29","type":""},{"name":"base_1","nativeSrc":"13088:6:29","nodeType":"YulTypedName","src":"13088:6:29","type":""}]},{"body":{"nativeSrc":"13177:22:29","nodeType":"YulBlock","src":"13177:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13179:16:29","nodeType":"YulIdentifier","src":"13179:16:29"},"nativeSrc":"13179:18:29","nodeType":"YulFunctionCall","src":"13179:18:29"},"nativeSrc":"13179:18:29","nodeType":"YulExpressionStatement","src":"13179:18:29"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"13147:7:29","nodeType":"YulIdentifier","src":"13147:7:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13164:1:29","nodeType":"YulLiteral","src":"13164:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"13160:3:29","nodeType":"YulIdentifier","src":"13160:3:29"},"nativeSrc":"13160:6:29","nodeType":"YulFunctionCall","src":"13160:6:29"},{"name":"base_1","nativeSrc":"13168:6:29","nodeType":"YulIdentifier","src":"13168:6:29"}],"functionName":{"name":"div","nativeSrc":"13156:3:29","nodeType":"YulIdentifier","src":"13156:3:29"},"nativeSrc":"13156:19:29","nodeType":"YulFunctionCall","src":"13156:19:29"}],"functionName":{"name":"gt","nativeSrc":"13144:2:29","nodeType":"YulIdentifier","src":"13144:2:29"},"nativeSrc":"13144:32:29","nodeType":"YulFunctionCall","src":"13144:32:29"},"nativeSrc":"13141:58:29","nodeType":"YulIf","src":"13141:58:29"},{"nativeSrc":"13208:29:29","nodeType":"YulAssignment","src":"13208:29:29","value":{"arguments":[{"name":"power_1","nativeSrc":"13221:7:29","nodeType":"YulIdentifier","src":"13221:7:29"},{"name":"base_1","nativeSrc":"13230:6:29","nodeType":"YulIdentifier","src":"13230:6:29"}],"functionName":{"name":"mul","nativeSrc":"13217:3:29","nodeType":"YulIdentifier","src":"13217:3:29"},"nativeSrc":"13217:20:29","nodeType":"YulFunctionCall","src":"13217:20:29"},"variableNames":[{"name":"power","nativeSrc":"13208:5:29","nodeType":"YulIdentifier","src":"13208:5:29"}]}]},"name":"checked_exp_unsigned","nativeSrc":"12437:806:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"12467:4:29","nodeType":"YulTypedName","src":"12467:4:29","type":""},{"name":"exponent","nativeSrc":"12473:8:29","nodeType":"YulTypedName","src":"12473:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"12486:5:29","nodeType":"YulTypedName","src":"12486:5:29","type":""}],"src":"12437:806:29"},{"body":{"nativeSrc":"13316:72:29","nodeType":"YulBlock","src":"13316:72:29","statements":[{"nativeSrc":"13326:56:29","nodeType":"YulAssignment","src":"13326:56:29","value":{"arguments":[{"name":"base","nativeSrc":"13356:4:29","nodeType":"YulIdentifier","src":"13356:4:29"},{"arguments":[{"name":"exponent","nativeSrc":"13366:8:29","nodeType":"YulIdentifier","src":"13366:8:29"},{"kind":"number","nativeSrc":"13376:4:29","nodeType":"YulLiteral","src":"13376:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"13362:3:29","nodeType":"YulIdentifier","src":"13362:3:29"},"nativeSrc":"13362:19:29","nodeType":"YulFunctionCall","src":"13362:19:29"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"13335:20:29","nodeType":"YulIdentifier","src":"13335:20:29"},"nativeSrc":"13335:47:29","nodeType":"YulFunctionCall","src":"13335:47:29"},"variableNames":[{"name":"power","nativeSrc":"13326:5:29","nodeType":"YulIdentifier","src":"13326:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"13248:140:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"13287:4:29","nodeType":"YulTypedName","src":"13287:4:29","type":""},{"name":"exponent","nativeSrc":"13293:8:29","nodeType":"YulTypedName","src":"13293:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"13306:5:29","nodeType":"YulTypedName","src":"13306:5:29","type":""}],"src":"13248:140:29"},{"body":{"nativeSrc":"13445:116:29","nodeType":"YulBlock","src":"13445:116:29","statements":[{"nativeSrc":"13455:20:29","nodeType":"YulAssignment","src":"13455:20:29","value":{"arguments":[{"name":"x","nativeSrc":"13470:1:29","nodeType":"YulIdentifier","src":"13470:1:29"},{"name":"y","nativeSrc":"13473:1:29","nodeType":"YulIdentifier","src":"13473:1:29"}],"functionName":{"name":"mul","nativeSrc":"13466:3:29","nodeType":"YulIdentifier","src":"13466:3:29"},"nativeSrc":"13466:9:29","nodeType":"YulFunctionCall","src":"13466:9:29"},"variableNames":[{"name":"product","nativeSrc":"13455:7:29","nodeType":"YulIdentifier","src":"13455:7:29"}]},{"body":{"nativeSrc":"13533:22:29","nodeType":"YulBlock","src":"13533:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13535:16:29","nodeType":"YulIdentifier","src":"13535:16:29"},"nativeSrc":"13535:18:29","nodeType":"YulFunctionCall","src":"13535:18:29"},"nativeSrc":"13535:18:29","nodeType":"YulExpressionStatement","src":"13535:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"13504:1:29","nodeType":"YulIdentifier","src":"13504:1:29"}],"functionName":{"name":"iszero","nativeSrc":"13497:6:29","nodeType":"YulIdentifier","src":"13497:6:29"},"nativeSrc":"13497:9:29","nodeType":"YulFunctionCall","src":"13497:9:29"},{"arguments":[{"name":"y","nativeSrc":"13511:1:29","nodeType":"YulIdentifier","src":"13511:1:29"},{"arguments":[{"name":"product","nativeSrc":"13518:7:29","nodeType":"YulIdentifier","src":"13518:7:29"},{"name":"x","nativeSrc":"13527:1:29","nodeType":"YulIdentifier","src":"13527:1:29"}],"functionName":{"name":"div","nativeSrc":"13514:3:29","nodeType":"YulIdentifier","src":"13514:3:29"},"nativeSrc":"13514:15:29","nodeType":"YulFunctionCall","src":"13514:15:29"}],"functionName":{"name":"eq","nativeSrc":"13508:2:29","nodeType":"YulIdentifier","src":"13508:2:29"},"nativeSrc":"13508:22:29","nodeType":"YulFunctionCall","src":"13508:22:29"}],"functionName":{"name":"or","nativeSrc":"13494:2:29","nodeType":"YulIdentifier","src":"13494:2:29"},"nativeSrc":"13494:37:29","nodeType":"YulFunctionCall","src":"13494:37:29"}],"functionName":{"name":"iszero","nativeSrc":"13487:6:29","nodeType":"YulIdentifier","src":"13487:6:29"},"nativeSrc":"13487:45:29","nodeType":"YulFunctionCall","src":"13487:45:29"},"nativeSrc":"13484:71:29","nodeType":"YulIf","src":"13484:71:29"}]},"name":"checked_mul_t_uint256","nativeSrc":"13393:168:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13424:1:29","nodeType":"YulTypedName","src":"13424:1:29","type":""},{"name":"y","nativeSrc":"13427:1:29","nodeType":"YulTypedName","src":"13427:1:29","type":""}],"returnVariables":[{"name":"product","nativeSrc":"13433:7:29","nodeType":"YulTypedName","src":"13433:7:29","type":""}],"src":"13393:168:29"},{"body":{"nativeSrc":"13674:101:29","nodeType":"YulBlock","src":"13674:101:29","statements":[{"nativeSrc":"13684:26:29","nodeType":"YulAssignment","src":"13684:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13696:9:29","nodeType":"YulIdentifier","src":"13696:9:29"},{"kind":"number","nativeSrc":"13707:2:29","nodeType":"YulLiteral","src":"13707:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13692:3:29","nodeType":"YulIdentifier","src":"13692:3:29"},"nativeSrc":"13692:18:29","nodeType":"YulFunctionCall","src":"13692:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13684:4:29","nodeType":"YulIdentifier","src":"13684:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13726:9:29","nodeType":"YulIdentifier","src":"13726:9:29"},{"arguments":[{"name":"value0","nativeSrc":"13741:6:29","nodeType":"YulIdentifier","src":"13741:6:29"},{"kind":"number","nativeSrc":"13749:18:29","nodeType":"YulLiteral","src":"13749:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13737:3:29","nodeType":"YulIdentifier","src":"13737:3:29"},"nativeSrc":"13737:31:29","nodeType":"YulFunctionCall","src":"13737:31:29"}],"functionName":{"name":"mstore","nativeSrc":"13719:6:29","nodeType":"YulIdentifier","src":"13719:6:29"},"nativeSrc":"13719:50:29","nodeType":"YulFunctionCall","src":"13719:50:29"},"nativeSrc":"13719:50:29","nodeType":"YulExpressionStatement","src":"13719:50:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"13566:209:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13643:9:29","nodeType":"YulTypedName","src":"13643:9:29","type":""},{"name":"value0","nativeSrc":"13654:6:29","nodeType":"YulTypedName","src":"13654:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13665:4:29","nodeType":"YulTypedName","src":"13665:4:29","type":""}],"src":"13566:209:29"},{"body":{"nativeSrc":"13954:178:29","nodeType":"YulBlock","src":"13954:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13971:9:29","nodeType":"YulIdentifier","src":"13971:9:29"},{"kind":"number","nativeSrc":"13982:2:29","nodeType":"YulLiteral","src":"13982:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13964:6:29","nodeType":"YulIdentifier","src":"13964:6:29"},"nativeSrc":"13964:21:29","nodeType":"YulFunctionCall","src":"13964:21:29"},"nativeSrc":"13964:21:29","nodeType":"YulExpressionStatement","src":"13964:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14005:9:29","nodeType":"YulIdentifier","src":"14005:9:29"},{"kind":"number","nativeSrc":"14016:2:29","nodeType":"YulLiteral","src":"14016:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14001:3:29","nodeType":"YulIdentifier","src":"14001:3:29"},"nativeSrc":"14001:18:29","nodeType":"YulFunctionCall","src":"14001:18:29"},{"kind":"number","nativeSrc":"14021:2:29","nodeType":"YulLiteral","src":"14021:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"13994:6:29","nodeType":"YulIdentifier","src":"13994:6:29"},"nativeSrc":"13994:30:29","nodeType":"YulFunctionCall","src":"13994:30:29"},"nativeSrc":"13994:30:29","nodeType":"YulExpressionStatement","src":"13994:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14044:9:29","nodeType":"YulIdentifier","src":"14044:9:29"},{"kind":"number","nativeSrc":"14055:2:29","nodeType":"YulLiteral","src":"14055:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14040:3:29","nodeType":"YulIdentifier","src":"14040:3:29"},"nativeSrc":"14040:18:29","nodeType":"YulFunctionCall","src":"14040:18:29"},{"hexValue":"416c72656164792077686974656c6973746564207265636569766572","kind":"string","nativeSrc":"14060:30:29","nodeType":"YulLiteral","src":"14060:30:29","type":"","value":"Already whitelisted receiver"}],"functionName":{"name":"mstore","nativeSrc":"14033:6:29","nodeType":"YulIdentifier","src":"14033:6:29"},"nativeSrc":"14033:58:29","nodeType":"YulFunctionCall","src":"14033:58:29"},"nativeSrc":"14033:58:29","nodeType":"YulExpressionStatement","src":"14033:58:29"},{"nativeSrc":"14100:26:29","nodeType":"YulAssignment","src":"14100:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"14112:9:29","nodeType":"YulIdentifier","src":"14112:9:29"},{"kind":"number","nativeSrc":"14123:2:29","nodeType":"YulLiteral","src":"14123:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14108:3:29","nodeType":"YulIdentifier","src":"14108:3:29"},"nativeSrc":"14108:18:29","nodeType":"YulFunctionCall","src":"14108:18:29"},"variableNames":[{"name":"tail","nativeSrc":"14100:4:29","nodeType":"YulIdentifier","src":"14100:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_127ab9926eb405b5f4fe18fc4b7135a1e67c1158c5db81537d6d96ea16f7c145__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13780:352:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13931:9:29","nodeType":"YulTypedName","src":"13931:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13945:4:29","nodeType":"YulTypedName","src":"13945:4:29","type":""}],"src":"13780:352:29"},{"body":{"nativeSrc":"14311:182:29","nodeType":"YulBlock","src":"14311:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14328:9:29","nodeType":"YulIdentifier","src":"14328:9:29"},{"kind":"number","nativeSrc":"14339:2:29","nodeType":"YulLiteral","src":"14339:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14321:6:29","nodeType":"YulIdentifier","src":"14321:6:29"},"nativeSrc":"14321:21:29","nodeType":"YulFunctionCall","src":"14321:21:29"},"nativeSrc":"14321:21:29","nodeType":"YulExpressionStatement","src":"14321:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14362:9:29","nodeType":"YulIdentifier","src":"14362:9:29"},{"kind":"number","nativeSrc":"14373:2:29","nodeType":"YulLiteral","src":"14373:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14358:3:29","nodeType":"YulIdentifier","src":"14358:3:29"},"nativeSrc":"14358:18:29","nodeType":"YulFunctionCall","src":"14358:18:29"},{"kind":"number","nativeSrc":"14378:2:29","nodeType":"YulLiteral","src":"14378:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14351:6:29","nodeType":"YulIdentifier","src":"14351:6:29"},"nativeSrc":"14351:30:29","nodeType":"YulFunctionCall","src":"14351:30:29"},"nativeSrc":"14351:30:29","nodeType":"YulExpressionStatement","src":"14351:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14401:9:29","nodeType":"YulIdentifier","src":"14401:9:29"},{"kind":"number","nativeSrc":"14412:2:29","nodeType":"YulLiteral","src":"14412:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14397:3:29","nodeType":"YulIdentifier","src":"14397:3:29"},"nativeSrc":"14397:18:29","nodeType":"YulFunctionCall","src":"14397:18:29"},{"hexValue":"4e657720526563656976657220416464726573732057686974656c6973746564","kind":"string","nativeSrc":"14417:34:29","nodeType":"YulLiteral","src":"14417:34:29","type":"","value":"New Receiver Address Whitelisted"}],"functionName":{"name":"mstore","nativeSrc":"14390:6:29","nodeType":"YulIdentifier","src":"14390:6:29"},"nativeSrc":"14390:62:29","nodeType":"YulFunctionCall","src":"14390:62:29"},"nativeSrc":"14390:62:29","nodeType":"YulExpressionStatement","src":"14390:62:29"},{"nativeSrc":"14461:26:29","nodeType":"YulAssignment","src":"14461:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"14473:9:29","nodeType":"YulIdentifier","src":"14473:9:29"},{"kind":"number","nativeSrc":"14484:2:29","nodeType":"YulLiteral","src":"14484:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14469:3:29","nodeType":"YulIdentifier","src":"14469:3:29"},"nativeSrc":"14469:18:29","nodeType":"YulFunctionCall","src":"14469:18:29"},"variableNames":[{"name":"tail","nativeSrc":"14461:4:29","nodeType":"YulIdentifier","src":"14461:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0732a6164fc5ad94ef671b27945f3ee929ac0f99b1a7db6a8b65db08506dfe5a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14137:356:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14288:9:29","nodeType":"YulTypedName","src":"14288:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14302:4:29","nodeType":"YulTypedName","src":"14302:4:29","type":""}],"src":"14137:356:29"},{"body":{"nativeSrc":"14672:170:29","nodeType":"YulBlock","src":"14672:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14689:9:29","nodeType":"YulIdentifier","src":"14689:9:29"},{"kind":"number","nativeSrc":"14700:2:29","nodeType":"YulLiteral","src":"14700:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14682:6:29","nodeType":"YulIdentifier","src":"14682:6:29"},"nativeSrc":"14682:21:29","nodeType":"YulFunctionCall","src":"14682:21:29"},"nativeSrc":"14682:21:29","nodeType":"YulExpressionStatement","src":"14682:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14723:9:29","nodeType":"YulIdentifier","src":"14723:9:29"},{"kind":"number","nativeSrc":"14734:2:29","nodeType":"YulLiteral","src":"14734:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14719:3:29","nodeType":"YulIdentifier","src":"14719:3:29"},"nativeSrc":"14719:18:29","nodeType":"YulFunctionCall","src":"14719:18:29"},{"kind":"number","nativeSrc":"14739:2:29","nodeType":"YulLiteral","src":"14739:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"14712:6:29","nodeType":"YulIdentifier","src":"14712:6:29"},"nativeSrc":"14712:30:29","nodeType":"YulFunctionCall","src":"14712:30:29"},"nativeSrc":"14712:30:29","nodeType":"YulExpressionStatement","src":"14712:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14762:9:29","nodeType":"YulIdentifier","src":"14762:9:29"},{"kind":"number","nativeSrc":"14773:2:29","nodeType":"YulLiteral","src":"14773:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14758:3:29","nodeType":"YulIdentifier","src":"14758:3:29"},"nativeSrc":"14758:18:29","nodeType":"YulFunctionCall","src":"14758:18:29"},{"hexValue":"43616e6e6f74206e6f6d696e6174652073656c66","kind":"string","nativeSrc":"14778:22:29","nodeType":"YulLiteral","src":"14778:22:29","type":"","value":"Cannot nominate self"}],"functionName":{"name":"mstore","nativeSrc":"14751:6:29","nodeType":"YulIdentifier","src":"14751:6:29"},"nativeSrc":"14751:50:29","nodeType":"YulFunctionCall","src":"14751:50:29"},"nativeSrc":"14751:50:29","nodeType":"YulExpressionStatement","src":"14751:50:29"},{"nativeSrc":"14810:26:29","nodeType":"YulAssignment","src":"14810:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"14822:9:29","nodeType":"YulIdentifier","src":"14822:9:29"},{"kind":"number","nativeSrc":"14833:2:29","nodeType":"YulLiteral","src":"14833:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14818:3:29","nodeType":"YulIdentifier","src":"14818:3:29"},"nativeSrc":"14818:18:29","nodeType":"YulFunctionCall","src":"14818:18:29"},"variableNames":[{"name":"tail","nativeSrc":"14810:4:29","nodeType":"YulIdentifier","src":"14810:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_98412e28c30dd0c81883dad8f533a5fc3f6afc2c2ff2ed45e97513d9402cb97d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14498:344:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14649:9:29","nodeType":"YulTypedName","src":"14649:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14663:4:29","nodeType":"YulTypedName","src":"14663:4:29","type":""}],"src":"14498:344:29"},{"body":{"nativeSrc":"15021:248:29","nodeType":"YulBlock","src":"15021:248:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15038:9:29","nodeType":"YulIdentifier","src":"15038:9:29"},{"kind":"number","nativeSrc":"15049:2:29","nodeType":"YulLiteral","src":"15049:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15031:6:29","nodeType":"YulIdentifier","src":"15031:6:29"},"nativeSrc":"15031:21:29","nodeType":"YulFunctionCall","src":"15031:21:29"},"nativeSrc":"15031:21:29","nodeType":"YulExpressionStatement","src":"15031:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15072:9:29","nodeType":"YulIdentifier","src":"15072:9:29"},{"kind":"number","nativeSrc":"15083:2:29","nodeType":"YulLiteral","src":"15083:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15068:3:29","nodeType":"YulIdentifier","src":"15068:3:29"},"nativeSrc":"15068:18:29","nodeType":"YulFunctionCall","src":"15068:18:29"},{"kind":"number","nativeSrc":"15088:2:29","nodeType":"YulLiteral","src":"15088:2:29","type":"","value":"58"}],"functionName":{"name":"mstore","nativeSrc":"15061:6:29","nodeType":"YulIdentifier","src":"15061:6:29"},"nativeSrc":"15061:30:29","nodeType":"YulFunctionCall","src":"15061:30:29"},"nativeSrc":"15061:30:29","nodeType":"YulExpressionStatement","src":"15061:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15111:9:29","nodeType":"YulIdentifier","src":"15111:9:29"},{"kind":"number","nativeSrc":"15122:2:29","nodeType":"YulLiteral","src":"15122:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15107:3:29","nodeType":"YulIdentifier","src":"15107:3:29"},"nativeSrc":"15107:18:29","nodeType":"YulFunctionCall","src":"15107:18:29"},{"hexValue":"4e65772041646d696e204e6f6d696e617465642c204e6f77206e65772061646d","kind":"string","nativeSrc":"15127:34:29","nodeType":"YulLiteral","src":"15127:34:29","type":"","value":"New Admin Nominated, Now new adm"}],"functionName":{"name":"mstore","nativeSrc":"15100:6:29","nodeType":"YulIdentifier","src":"15100:6:29"},"nativeSrc":"15100:62:29","nodeType":"YulFunctionCall","src":"15100:62:29"},"nativeSrc":"15100:62:29","nodeType":"YulExpressionStatement","src":"15100:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15182:9:29","nodeType":"YulIdentifier","src":"15182:9:29"},{"kind":"number","nativeSrc":"15193:2:29","nodeType":"YulLiteral","src":"15193:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15178:3:29","nodeType":"YulIdentifier","src":"15178:3:29"},"nativeSrc":"15178:18:29","nodeType":"YulFunctionCall","src":"15178:18:29"},{"hexValue":"696e206e65656420746f206163636570742074686520726f6c65","kind":"string","nativeSrc":"15198:28:29","nodeType":"YulLiteral","src":"15198:28:29","type":"","value":"in need to accept the role"}],"functionName":{"name":"mstore","nativeSrc":"15171:6:29","nodeType":"YulIdentifier","src":"15171:6:29"},"nativeSrc":"15171:56:29","nodeType":"YulFunctionCall","src":"15171:56:29"},"nativeSrc":"15171:56:29","nodeType":"YulExpressionStatement","src":"15171:56:29"},{"nativeSrc":"15236:27:29","nodeType":"YulAssignment","src":"15236:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"15248:9:29","nodeType":"YulIdentifier","src":"15248:9:29"},{"kind":"number","nativeSrc":"15259:3:29","nodeType":"YulLiteral","src":"15259:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15244:3:29","nodeType":"YulIdentifier","src":"15244:3:29"},"nativeSrc":"15244:19:29","nodeType":"YulFunctionCall","src":"15244:19:29"},"variableNames":[{"name":"tail","nativeSrc":"15236:4:29","nodeType":"YulIdentifier","src":"15236:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_08de87ca866785396b4db24ad7cd371b3cd35b0ee04781a9ea47f5023c81fb31__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14847:422:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14998:9:29","nodeType":"YulTypedName","src":"14998:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15012:4:29","nodeType":"YulTypedName","src":"15012:4:29","type":""}],"src":"14847:422:29"},{"body":{"nativeSrc":"15448:176:29","nodeType":"YulBlock","src":"15448:176:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15465:9:29","nodeType":"YulIdentifier","src":"15465:9:29"},{"kind":"number","nativeSrc":"15476:2:29","nodeType":"YulLiteral","src":"15476:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15458:6:29","nodeType":"YulIdentifier","src":"15458:6:29"},"nativeSrc":"15458:21:29","nodeType":"YulFunctionCall","src":"15458:21:29"},"nativeSrc":"15458:21:29","nodeType":"YulExpressionStatement","src":"15458:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15499:9:29","nodeType":"YulIdentifier","src":"15499:9:29"},{"kind":"number","nativeSrc":"15510:2:29","nodeType":"YulLiteral","src":"15510:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15495:3:29","nodeType":"YulIdentifier","src":"15495:3:29"},"nativeSrc":"15495:18:29","nodeType":"YulFunctionCall","src":"15495:18:29"},{"kind":"number","nativeSrc":"15515:2:29","nodeType":"YulLiteral","src":"15515:2:29","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"15488:6:29","nodeType":"YulIdentifier","src":"15488:6:29"},"nativeSrc":"15488:30:29","nodeType":"YulFunctionCall","src":"15488:30:29"},"nativeSrc":"15488:30:29","nodeType":"YulExpressionStatement","src":"15488:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15538:9:29","nodeType":"YulIdentifier","src":"15538:9:29"},{"kind":"number","nativeSrc":"15549:2:29","nodeType":"YulLiteral","src":"15549:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15534:3:29","nodeType":"YulIdentifier","src":"15534:3:29"},"nativeSrc":"15534:18:29","nodeType":"YulFunctionCall","src":"15534:18:29"},{"hexValue":"416c72656164792077686974656c69737465642073656e646572","kind":"string","nativeSrc":"15554:28:29","nodeType":"YulLiteral","src":"15554:28:29","type":"","value":"Already whitelisted sender"}],"functionName":{"name":"mstore","nativeSrc":"15527:6:29","nodeType":"YulIdentifier","src":"15527:6:29"},"nativeSrc":"15527:56:29","nodeType":"YulFunctionCall","src":"15527:56:29"},"nativeSrc":"15527:56:29","nodeType":"YulExpressionStatement","src":"15527:56:29"},{"nativeSrc":"15592:26:29","nodeType":"YulAssignment","src":"15592:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"15604:9:29","nodeType":"YulIdentifier","src":"15604:9:29"},{"kind":"number","nativeSrc":"15615:2:29","nodeType":"YulLiteral","src":"15615:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15600:3:29","nodeType":"YulIdentifier","src":"15600:3:29"},"nativeSrc":"15600:18:29","nodeType":"YulFunctionCall","src":"15600:18:29"},"variableNames":[{"name":"tail","nativeSrc":"15592:4:29","nodeType":"YulIdentifier","src":"15592:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfeff081a89c199601855fa7df8d8cfe88bd1fd5c5c86ef0392d1d0cbe760b2a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15274:350:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15425:9:29","nodeType":"YulTypedName","src":"15425:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15439:4:29","nodeType":"YulTypedName","src":"15439:4:29","type":""}],"src":"15274:350:29"},{"body":{"nativeSrc":"15803:162:29","nodeType":"YulBlock","src":"15803:162:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15820:9:29","nodeType":"YulIdentifier","src":"15820:9:29"},{"kind":"number","nativeSrc":"15831:2:29","nodeType":"YulLiteral","src":"15831:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15813:6:29","nodeType":"YulIdentifier","src":"15813:6:29"},"nativeSrc":"15813:21:29","nodeType":"YulFunctionCall","src":"15813:21:29"},"nativeSrc":"15813:21:29","nodeType":"YulExpressionStatement","src":"15813:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15854:9:29","nodeType":"YulIdentifier","src":"15854:9:29"},{"kind":"number","nativeSrc":"15865:2:29","nodeType":"YulLiteral","src":"15865:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15850:3:29","nodeType":"YulIdentifier","src":"15850:3:29"},"nativeSrc":"15850:18:29","nodeType":"YulFunctionCall","src":"15850:18:29"},{"kind":"number","nativeSrc":"15870:2:29","nodeType":"YulLiteral","src":"15870:2:29","type":"","value":"12"}],"functionName":{"name":"mstore","nativeSrc":"15843:6:29","nodeType":"YulIdentifier","src":"15843:6:29"},"nativeSrc":"15843:30:29","nodeType":"YulFunctionCall","src":"15843:30:29"},"nativeSrc":"15843:30:29","nodeType":"YulExpressionStatement","src":"15843:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15893:9:29","nodeType":"YulIdentifier","src":"15893:9:29"},{"kind":"number","nativeSrc":"15904:2:29","nodeType":"YulLiteral","src":"15904:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15889:3:29","nodeType":"YulIdentifier","src":"15889:3:29"},"nativeSrc":"15889:18:29","nodeType":"YulFunctionCall","src":"15889:18:29"},{"hexValue":"4e6f74207472656173757279","kind":"string","nativeSrc":"15909:14:29","nodeType":"YulLiteral","src":"15909:14:29","type":"","value":"Not treasury"}],"functionName":{"name":"mstore","nativeSrc":"15882:6:29","nodeType":"YulIdentifier","src":"15882:6:29"},"nativeSrc":"15882:42:29","nodeType":"YulFunctionCall","src":"15882:42:29"},"nativeSrc":"15882:42:29","nodeType":"YulExpressionStatement","src":"15882:42:29"},{"nativeSrc":"15933:26:29","nodeType":"YulAssignment","src":"15933:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"15945:9:29","nodeType":"YulIdentifier","src":"15945:9:29"},{"kind":"number","nativeSrc":"15956:2:29","nodeType":"YulLiteral","src":"15956:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15941:3:29","nodeType":"YulIdentifier","src":"15941:3:29"},"nativeSrc":"15941:18:29","nodeType":"YulFunctionCall","src":"15941:18:29"},"variableNames":[{"name":"tail","nativeSrc":"15933:4:29","nodeType":"YulIdentifier","src":"15933:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae4e56f1941b3343db2824c2bb1fc5e38f2909bfbd08017fa6f02a1833e710d8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15629:336:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15780:9:29","nodeType":"YulTypedName","src":"15780:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15794:4:29","nodeType":"YulTypedName","src":"15794:4:29","type":""}],"src":"15629:336:29"},{"body":{"nativeSrc":"16144:174:29","nodeType":"YulBlock","src":"16144:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16161:9:29","nodeType":"YulIdentifier","src":"16161:9:29"},{"kind":"number","nativeSrc":"16172:2:29","nodeType":"YulLiteral","src":"16172:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16154:6:29","nodeType":"YulIdentifier","src":"16154:6:29"},"nativeSrc":"16154:21:29","nodeType":"YulFunctionCall","src":"16154:21:29"},"nativeSrc":"16154:21:29","nodeType":"YulExpressionStatement","src":"16154:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16195:9:29","nodeType":"YulIdentifier","src":"16195:9:29"},{"kind":"number","nativeSrc":"16206:2:29","nodeType":"YulLiteral","src":"16206:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16191:3:29","nodeType":"YulIdentifier","src":"16191:3:29"},"nativeSrc":"16191:18:29","nodeType":"YulFunctionCall","src":"16191:18:29"},{"kind":"number","nativeSrc":"16211:2:29","nodeType":"YulLiteral","src":"16211:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"16184:6:29","nodeType":"YulIdentifier","src":"16184:6:29"},"nativeSrc":"16184:30:29","nodeType":"YulFunctionCall","src":"16184:30:29"},"nativeSrc":"16184:30:29","nodeType":"YulExpressionStatement","src":"16184:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16234:9:29","nodeType":"YulIdentifier","src":"16234:9:29"},{"kind":"number","nativeSrc":"16245:2:29","nodeType":"YulLiteral","src":"16245:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16230:3:29","nodeType":"YulIdentifier","src":"16230:3:29"},"nativeSrc":"16230:18:29","nodeType":"YulFunctionCall","src":"16230:18:29"},{"hexValue":"547265617375727920416464726573732052656d6f766564","kind":"string","nativeSrc":"16250:26:29","nodeType":"YulLiteral","src":"16250:26:29","type":"","value":"Treasury Address Removed"}],"functionName":{"name":"mstore","nativeSrc":"16223:6:29","nodeType":"YulIdentifier","src":"16223:6:29"},"nativeSrc":"16223:54:29","nodeType":"YulFunctionCall","src":"16223:54:29"},"nativeSrc":"16223:54:29","nodeType":"YulExpressionStatement","src":"16223:54:29"},{"nativeSrc":"16286:26:29","nodeType":"YulAssignment","src":"16286:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"16298:9:29","nodeType":"YulIdentifier","src":"16298:9:29"},{"kind":"number","nativeSrc":"16309:2:29","nodeType":"YulLiteral","src":"16309:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16294:3:29","nodeType":"YulIdentifier","src":"16294:3:29"},"nativeSrc":"16294:18:29","nodeType":"YulFunctionCall","src":"16294:18:29"},"variableNames":[{"name":"tail","nativeSrc":"16286:4:29","nodeType":"YulIdentifier","src":"16286:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_df5b65dd6872d85bb7648f9de88a45e204ec3bdd2f26b6ce2065e7755eae0811__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15970:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16121:9:29","nodeType":"YulTypedName","src":"16121:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16135:4:29","nodeType":"YulTypedName","src":"16135:4:29","type":""}],"src":"15970:348:29"},{"body":{"nativeSrc":"16372:79:29","nodeType":"YulBlock","src":"16372:79:29","statements":[{"nativeSrc":"16382:17:29","nodeType":"YulAssignment","src":"16382:17:29","value":{"arguments":[{"name":"x","nativeSrc":"16394:1:29","nodeType":"YulIdentifier","src":"16394:1:29"},{"name":"y","nativeSrc":"16397:1:29","nodeType":"YulIdentifier","src":"16397:1:29"}],"functionName":{"name":"sub","nativeSrc":"16390:3:29","nodeType":"YulIdentifier","src":"16390:3:29"},"nativeSrc":"16390:9:29","nodeType":"YulFunctionCall","src":"16390:9:29"},"variableNames":[{"name":"diff","nativeSrc":"16382:4:29","nodeType":"YulIdentifier","src":"16382:4:29"}]},{"body":{"nativeSrc":"16423:22:29","nodeType":"YulBlock","src":"16423:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16425:16:29","nodeType":"YulIdentifier","src":"16425:16:29"},"nativeSrc":"16425:18:29","nodeType":"YulFunctionCall","src":"16425:18:29"},"nativeSrc":"16425:18:29","nodeType":"YulExpressionStatement","src":"16425:18:29"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"16414:4:29","nodeType":"YulIdentifier","src":"16414:4:29"},{"name":"x","nativeSrc":"16420:1:29","nodeType":"YulIdentifier","src":"16420:1:29"}],"functionName":{"name":"gt","nativeSrc":"16411:2:29","nodeType":"YulIdentifier","src":"16411:2:29"},"nativeSrc":"16411:11:29","nodeType":"YulFunctionCall","src":"16411:11:29"},"nativeSrc":"16408:37:29","nodeType":"YulIf","src":"16408:37:29"}]},"name":"checked_sub_t_uint256","nativeSrc":"16323:128:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16354:1:29","nodeType":"YulTypedName","src":"16354:1:29","type":""},{"name":"y","nativeSrc":"16357:1:29","nodeType":"YulTypedName","src":"16357:1:29","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"16363:4:29","nodeType":"YulTypedName","src":"16363:4:29","type":""}],"src":"16323:128:29"},{"body":{"nativeSrc":"16586:201:29","nodeType":"YulBlock","src":"16586:201:29","statements":[{"body":{"nativeSrc":"16624:16:29","nodeType":"YulBlock","src":"16624:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16633:1:29","nodeType":"YulLiteral","src":"16633:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"16636:1:29","nodeType":"YulLiteral","src":"16636:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16626:6:29","nodeType":"YulIdentifier","src":"16626:6:29"},"nativeSrc":"16626:12:29","nodeType":"YulFunctionCall","src":"16626:12:29"},"nativeSrc":"16626:12:29","nodeType":"YulExpressionStatement","src":"16626:12:29"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"16602:10:29","nodeType":"YulIdentifier","src":"16602:10:29"},{"name":"endIndex","nativeSrc":"16614:8:29","nodeType":"YulIdentifier","src":"16614:8:29"}],"functionName":{"name":"gt","nativeSrc":"16599:2:29","nodeType":"YulIdentifier","src":"16599:2:29"},"nativeSrc":"16599:24:29","nodeType":"YulFunctionCall","src":"16599:24:29"},"nativeSrc":"16596:44:29","nodeType":"YulIf","src":"16596:44:29"},{"body":{"nativeSrc":"16673:16:29","nodeType":"YulBlock","src":"16673:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16682:1:29","nodeType":"YulLiteral","src":"16682:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"16685:1:29","nodeType":"YulLiteral","src":"16685:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16675:6:29","nodeType":"YulIdentifier","src":"16675:6:29"},"nativeSrc":"16675:12:29","nodeType":"YulFunctionCall","src":"16675:12:29"},"nativeSrc":"16675:12:29","nodeType":"YulExpressionStatement","src":"16675:12:29"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"16655:8:29","nodeType":"YulIdentifier","src":"16655:8:29"},{"name":"length","nativeSrc":"16665:6:29","nodeType":"YulIdentifier","src":"16665:6:29"}],"functionName":{"name":"gt","nativeSrc":"16652:2:29","nodeType":"YulIdentifier","src":"16652:2:29"},"nativeSrc":"16652:20:29","nodeType":"YulFunctionCall","src":"16652:20:29"},"nativeSrc":"16649:40:29","nodeType":"YulIf","src":"16649:40:29"},{"nativeSrc":"16698:36:29","nodeType":"YulAssignment","src":"16698:36:29","value":{"arguments":[{"name":"offset","nativeSrc":"16715:6:29","nodeType":"YulIdentifier","src":"16715:6:29"},{"name":"startIndex","nativeSrc":"16723:10:29","nodeType":"YulIdentifier","src":"16723:10:29"}],"functionName":{"name":"add","nativeSrc":"16711:3:29","nodeType":"YulIdentifier","src":"16711:3:29"},"nativeSrc":"16711:23:29","nodeType":"YulFunctionCall","src":"16711:23:29"},"variableNames":[{"name":"offsetOut","nativeSrc":"16698:9:29","nodeType":"YulIdentifier","src":"16698:9:29"}]},{"nativeSrc":"16743:38:29","nodeType":"YulAssignment","src":"16743:38:29","value":{"arguments":[{"name":"endIndex","nativeSrc":"16760:8:29","nodeType":"YulIdentifier","src":"16760:8:29"},{"name":"startIndex","nativeSrc":"16770:10:29","nodeType":"YulIdentifier","src":"16770:10:29"}],"functionName":{"name":"sub","nativeSrc":"16756:3:29","nodeType":"YulIdentifier","src":"16756:3:29"},"nativeSrc":"16756:25:29","nodeType":"YulFunctionCall","src":"16756:25:29"},"variableNames":[{"name":"lengthOut","nativeSrc":"16743:9:29","nodeType":"YulIdentifier","src":"16743:9:29"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"16456:331:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16520:6:29","nodeType":"YulTypedName","src":"16520:6:29","type":""},{"name":"length","nativeSrc":"16528:6:29","nodeType":"YulTypedName","src":"16528:6:29","type":""},{"name":"startIndex","nativeSrc":"16536:10:29","nodeType":"YulTypedName","src":"16536:10:29","type":""},{"name":"endIndex","nativeSrc":"16548:8:29","nodeType":"YulTypedName","src":"16548:8:29","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"16561:9:29","nodeType":"YulTypedName","src":"16561:9:29","type":""},{"name":"lengthOut","nativeSrc":"16572:9:29","nodeType":"YulTypedName","src":"16572:9:29","type":""}],"src":"16456:331:29"},{"body":{"nativeSrc":"16893:236:29","nodeType":"YulBlock","src":"16893:236:29","statements":[{"nativeSrc":"16903:29:29","nodeType":"YulVariableDeclaration","src":"16903:29:29","value":{"arguments":[{"name":"array","nativeSrc":"16926:5:29","nodeType":"YulIdentifier","src":"16926:5:29"}],"functionName":{"name":"calldataload","nativeSrc":"16913:12:29","nodeType":"YulIdentifier","src":"16913:12:29"},"nativeSrc":"16913:19:29","nodeType":"YulFunctionCall","src":"16913:19:29"},"variables":[{"name":"_1","nativeSrc":"16907:2:29","nodeType":"YulTypedName","src":"16907:2:29","type":""}]},{"nativeSrc":"16941:41:29","nodeType":"YulVariableDeclaration","src":"16941:41:29","value":{"arguments":[{"kind":"number","nativeSrc":"16955:26:29","nodeType":"YulLiteral","src":"16955:26:29","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"16951:3:29","nodeType":"YulIdentifier","src":"16951:3:29"},"nativeSrc":"16951:31:29","nodeType":"YulFunctionCall","src":"16951:31:29"},"variables":[{"name":"_2","nativeSrc":"16945:2:29","nodeType":"YulTypedName","src":"16945:2:29","type":""}]},{"nativeSrc":"16991:20:29","nodeType":"YulAssignment","src":"16991:20:29","value":{"arguments":[{"name":"_1","nativeSrc":"17004:2:29","nodeType":"YulIdentifier","src":"17004:2:29"},{"name":"_2","nativeSrc":"17008:2:29","nodeType":"YulIdentifier","src":"17008:2:29"}],"functionName":{"name":"and","nativeSrc":"17000:3:29","nodeType":"YulIdentifier","src":"17000:3:29"},"nativeSrc":"17000:11:29","nodeType":"YulFunctionCall","src":"17000:11:29"},"variableNames":[{"name":"value","nativeSrc":"16991:5:29","nodeType":"YulIdentifier","src":"16991:5:29"}]},{"body":{"nativeSrc":"17043:80:29","nodeType":"YulBlock","src":"17043:80:29","statements":[{"nativeSrc":"17057:56:29","nodeType":"YulAssignment","src":"17057:56:29","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"17074:2:29","nodeType":"YulIdentifier","src":"17074:2:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17086:1:29","nodeType":"YulLiteral","src":"17086:1:29","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"17093:2:29","nodeType":"YulLiteral","src":"17093:2:29","type":"","value":"20"},{"name":"len","nativeSrc":"17097:3:29","nodeType":"YulIdentifier","src":"17097:3:29"}],"functionName":{"name":"sub","nativeSrc":"17089:3:29","nodeType":"YulIdentifier","src":"17089:3:29"},"nativeSrc":"17089:12:29","nodeType":"YulFunctionCall","src":"17089:12:29"}],"functionName":{"name":"shl","nativeSrc":"17082:3:29","nodeType":"YulIdentifier","src":"17082:3:29"},"nativeSrc":"17082:20:29","nodeType":"YulFunctionCall","src":"17082:20:29"},{"name":"_2","nativeSrc":"17104:2:29","nodeType":"YulIdentifier","src":"17104:2:29"}],"functionName":{"name":"shl","nativeSrc":"17078:3:29","nodeType":"YulIdentifier","src":"17078:3:29"},"nativeSrc":"17078:29:29","nodeType":"YulFunctionCall","src":"17078:29:29"}],"functionName":{"name":"and","nativeSrc":"17070:3:29","nodeType":"YulIdentifier","src":"17070:3:29"},"nativeSrc":"17070:38:29","nodeType":"YulFunctionCall","src":"17070:38:29"},{"name":"_2","nativeSrc":"17110:2:29","nodeType":"YulIdentifier","src":"17110:2:29"}],"functionName":{"name":"and","nativeSrc":"17066:3:29","nodeType":"YulIdentifier","src":"17066:3:29"},"nativeSrc":"17066:47:29","nodeType":"YulFunctionCall","src":"17066:47:29"},"variableNames":[{"name":"value","nativeSrc":"17057:5:29","nodeType":"YulIdentifier","src":"17057:5:29"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"17026:3:29","nodeType":"YulIdentifier","src":"17026:3:29"},{"kind":"number","nativeSrc":"17031:2:29","nodeType":"YulLiteral","src":"17031:2:29","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"17023:2:29","nodeType":"YulIdentifier","src":"17023:2:29"},"nativeSrc":"17023:11:29","nodeType":"YulFunctionCall","src":"17023:11:29"},"nativeSrc":"17020:103:29","nodeType":"YulIf","src":"17020:103:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"16792:337:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"16868:5:29","nodeType":"YulTypedName","src":"16868:5:29","type":""},{"name":"len","nativeSrc":"16875:3:29","nodeType":"YulTypedName","src":"16875:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16883:5:29","nodeType":"YulTypedName","src":"16883:5:29","type":""}],"src":"16792:337:29"},{"body":{"nativeSrc":"17263:145:29","nodeType":"YulBlock","src":"17263:145:29","statements":[{"nativeSrc":"17273:26:29","nodeType":"YulAssignment","src":"17273:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"17285:9:29","nodeType":"YulIdentifier","src":"17285:9:29"},{"kind":"number","nativeSrc":"17296:2:29","nodeType":"YulLiteral","src":"17296:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17281:3:29","nodeType":"YulIdentifier","src":"17281:3:29"},"nativeSrc":"17281:18:29","nodeType":"YulFunctionCall","src":"17281:18:29"},"variableNames":[{"name":"tail","nativeSrc":"17273:4:29","nodeType":"YulIdentifier","src":"17273:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17315:9:29","nodeType":"YulIdentifier","src":"17315:9:29"},{"arguments":[{"name":"value0","nativeSrc":"17330:6:29","nodeType":"YulIdentifier","src":"17330:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17346:3:29","nodeType":"YulLiteral","src":"17346:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"17351:1:29","nodeType":"YulLiteral","src":"17351:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"17342:3:29","nodeType":"YulIdentifier","src":"17342:3:29"},"nativeSrc":"17342:11:29","nodeType":"YulFunctionCall","src":"17342:11:29"},{"kind":"number","nativeSrc":"17355:1:29","nodeType":"YulLiteral","src":"17355:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"17338:3:29","nodeType":"YulIdentifier","src":"17338:3:29"},"nativeSrc":"17338:19:29","nodeType":"YulFunctionCall","src":"17338:19:29"}],"functionName":{"name":"and","nativeSrc":"17326:3:29","nodeType":"YulIdentifier","src":"17326:3:29"},"nativeSrc":"17326:32:29","nodeType":"YulFunctionCall","src":"17326:32:29"}],"functionName":{"name":"mstore","nativeSrc":"17308:6:29","nodeType":"YulIdentifier","src":"17308:6:29"},"nativeSrc":"17308:51:29","nodeType":"YulFunctionCall","src":"17308:51:29"},"nativeSrc":"17308:51:29","nodeType":"YulExpressionStatement","src":"17308:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17379:9:29","nodeType":"YulIdentifier","src":"17379:9:29"},{"kind":"number","nativeSrc":"17390:2:29","nodeType":"YulLiteral","src":"17390:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17375:3:29","nodeType":"YulIdentifier","src":"17375:3:29"},"nativeSrc":"17375:18:29","nodeType":"YulFunctionCall","src":"17375:18:29"},{"name":"value1","nativeSrc":"17395:6:29","nodeType":"YulIdentifier","src":"17395:6:29"}],"functionName":{"name":"mstore","nativeSrc":"17368:6:29","nodeType":"YulIdentifier","src":"17368:6:29"},"nativeSrc":"17368:34:29","nodeType":"YulFunctionCall","src":"17368:34:29"},"nativeSrc":"17368:34:29","nodeType":"YulExpressionStatement","src":"17368:34:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"17134:274:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17224:9:29","nodeType":"YulTypedName","src":"17224:9:29","type":""},{"name":"value1","nativeSrc":"17235:6:29","nodeType":"YulTypedName","src":"17235:6:29","type":""},{"name":"value0","nativeSrc":"17243:6:29","nodeType":"YulTypedName","src":"17243:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17254:4:29","nodeType":"YulTypedName","src":"17254:4:29","type":""}],"src":"17134:274:29"},{"body":{"nativeSrc":"17570:188:29","nodeType":"YulBlock","src":"17570:188:29","statements":[{"nativeSrc":"17580:26:29","nodeType":"YulAssignment","src":"17580:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"17592:9:29","nodeType":"YulIdentifier","src":"17592:9:29"},{"kind":"number","nativeSrc":"17603:2:29","nodeType":"YulLiteral","src":"17603:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17588:3:29","nodeType":"YulIdentifier","src":"17588:3:29"},"nativeSrc":"17588:18:29","nodeType":"YulFunctionCall","src":"17588:18:29"},"variableNames":[{"name":"tail","nativeSrc":"17580:4:29","nodeType":"YulIdentifier","src":"17580:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17622:9:29","nodeType":"YulIdentifier","src":"17622:9:29"},{"arguments":[{"name":"value0","nativeSrc":"17637:6:29","nodeType":"YulIdentifier","src":"17637:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17653:3:29","nodeType":"YulLiteral","src":"17653:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"17658:1:29","nodeType":"YulLiteral","src":"17658:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"17649:3:29","nodeType":"YulIdentifier","src":"17649:3:29"},"nativeSrc":"17649:11:29","nodeType":"YulFunctionCall","src":"17649:11:29"},{"kind":"number","nativeSrc":"17662:1:29","nodeType":"YulLiteral","src":"17662:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"17645:3:29","nodeType":"YulIdentifier","src":"17645:3:29"},"nativeSrc":"17645:19:29","nodeType":"YulFunctionCall","src":"17645:19:29"}],"functionName":{"name":"and","nativeSrc":"17633:3:29","nodeType":"YulIdentifier","src":"17633:3:29"},"nativeSrc":"17633:32:29","nodeType":"YulFunctionCall","src":"17633:32:29"}],"functionName":{"name":"mstore","nativeSrc":"17615:6:29","nodeType":"YulIdentifier","src":"17615:6:29"},"nativeSrc":"17615:51:29","nodeType":"YulFunctionCall","src":"17615:51:29"},"nativeSrc":"17615:51:29","nodeType":"YulExpressionStatement","src":"17615:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17686:9:29","nodeType":"YulIdentifier","src":"17686:9:29"},{"kind":"number","nativeSrc":"17697:2:29","nodeType":"YulLiteral","src":"17697:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17682:3:29","nodeType":"YulIdentifier","src":"17682:3:29"},"nativeSrc":"17682:18:29","nodeType":"YulFunctionCall","src":"17682:18:29"},{"name":"value1","nativeSrc":"17702:6:29","nodeType":"YulIdentifier","src":"17702:6:29"}],"functionName":{"name":"mstore","nativeSrc":"17675:6:29","nodeType":"YulIdentifier","src":"17675:6:29"},"nativeSrc":"17675:34:29","nodeType":"YulFunctionCall","src":"17675:34:29"},"nativeSrc":"17675:34:29","nodeType":"YulExpressionStatement","src":"17675:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17729:9:29","nodeType":"YulIdentifier","src":"17729:9:29"},{"kind":"number","nativeSrc":"17740:2:29","nodeType":"YulLiteral","src":"17740:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17725:3:29","nodeType":"YulIdentifier","src":"17725:3:29"},"nativeSrc":"17725:18:29","nodeType":"YulFunctionCall","src":"17725:18:29"},{"name":"value2","nativeSrc":"17745:6:29","nodeType":"YulIdentifier","src":"17745:6:29"}],"functionName":{"name":"mstore","nativeSrc":"17718:6:29","nodeType":"YulIdentifier","src":"17718:6:29"},"nativeSrc":"17718:34:29","nodeType":"YulFunctionCall","src":"17718:34:29"},"nativeSrc":"17718:34:29","nodeType":"YulExpressionStatement","src":"17718:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17413:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17523:9:29","nodeType":"YulTypedName","src":"17523:9:29","type":""},{"name":"value2","nativeSrc":"17534:6:29","nodeType":"YulTypedName","src":"17534:6:29","type":""},{"name":"value1","nativeSrc":"17542:6:29","nodeType":"YulTypedName","src":"17542:6:29","type":""},{"name":"value0","nativeSrc":"17550:6:29","nodeType":"YulTypedName","src":"17550:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17561:4:29","nodeType":"YulTypedName","src":"17561:4:29","type":""}],"src":"17413:345:29"},{"body":{"nativeSrc":"17811:77:29","nodeType":"YulBlock","src":"17811:77:29","statements":[{"nativeSrc":"17821:16:29","nodeType":"YulAssignment","src":"17821:16:29","value":{"arguments":[{"name":"x","nativeSrc":"17832:1:29","nodeType":"YulIdentifier","src":"17832:1:29"},{"name":"y","nativeSrc":"17835:1:29","nodeType":"YulIdentifier","src":"17835:1:29"}],"functionName":{"name":"add","nativeSrc":"17828:3:29","nodeType":"YulIdentifier","src":"17828:3:29"},"nativeSrc":"17828:9:29","nodeType":"YulFunctionCall","src":"17828:9:29"},"variableNames":[{"name":"sum","nativeSrc":"17821:3:29","nodeType":"YulIdentifier","src":"17821:3:29"}]},{"body":{"nativeSrc":"17860:22:29","nodeType":"YulBlock","src":"17860:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17862:16:29","nodeType":"YulIdentifier","src":"17862:16:29"},"nativeSrc":"17862:18:29","nodeType":"YulFunctionCall","src":"17862:18:29"},"nativeSrc":"17862:18:29","nodeType":"YulExpressionStatement","src":"17862:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"17852:1:29","nodeType":"YulIdentifier","src":"17852:1:29"},{"name":"sum","nativeSrc":"17855:3:29","nodeType":"YulIdentifier","src":"17855:3:29"}],"functionName":{"name":"gt","nativeSrc":"17849:2:29","nodeType":"YulIdentifier","src":"17849:2:29"},"nativeSrc":"17849:10:29","nodeType":"YulFunctionCall","src":"17849:10:29"},"nativeSrc":"17846:36:29","nodeType":"YulIf","src":"17846:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"17763:125:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17794:1:29","nodeType":"YulTypedName","src":"17794:1:29","type":""},{"name":"y","nativeSrc":"17797:1:29","nodeType":"YulTypedName","src":"17797:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"17803:3:29","nodeType":"YulTypedName","src":"17803:3:29","type":""}],"src":"17763:125:29"},{"body":{"nativeSrc":"17925:95:29","nodeType":"YulBlock","src":"17925:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17942:1:29","nodeType":"YulLiteral","src":"17942:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"17949:3:29","nodeType":"YulLiteral","src":"17949:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"17954:10:29","nodeType":"YulLiteral","src":"17954:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"17945:3:29","nodeType":"YulIdentifier","src":"17945:3:29"},"nativeSrc":"17945:20:29","nodeType":"YulFunctionCall","src":"17945:20:29"}],"functionName":{"name":"mstore","nativeSrc":"17935:6:29","nodeType":"YulIdentifier","src":"17935:6:29"},"nativeSrc":"17935:31:29","nodeType":"YulFunctionCall","src":"17935:31:29"},"nativeSrc":"17935:31:29","nodeType":"YulExpressionStatement","src":"17935:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17982:1:29","nodeType":"YulLiteral","src":"17982:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"17985:4:29","nodeType":"YulLiteral","src":"17985:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"17975:6:29","nodeType":"YulIdentifier","src":"17975:6:29"},"nativeSrc":"17975:15:29","nodeType":"YulFunctionCall","src":"17975:15:29"},"nativeSrc":"17975:15:29","nodeType":"YulExpressionStatement","src":"17975:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18006:1:29","nodeType":"YulLiteral","src":"18006:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"18009:4:29","nodeType":"YulLiteral","src":"18009:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17999:6:29","nodeType":"YulIdentifier","src":"17999:6:29"},"nativeSrc":"17999:15:29","nodeType":"YulFunctionCall","src":"17999:15:29"},"nativeSrc":"17999:15:29","nodeType":"YulExpressionStatement","src":"17999:15:29"}]},"name":"panic_error_0x32","nativeSrc":"17893:127:29","nodeType":"YulFunctionDefinition","src":"17893:127:29"},{"body":{"nativeSrc":"18057:95:29","nodeType":"YulBlock","src":"18057:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18074:1:29","nodeType":"YulLiteral","src":"18074:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"18081:3:29","nodeType":"YulLiteral","src":"18081:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"18086:10:29","nodeType":"YulLiteral","src":"18086:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"18077:3:29","nodeType":"YulIdentifier","src":"18077:3:29"},"nativeSrc":"18077:20:29","nodeType":"YulFunctionCall","src":"18077:20:29"}],"functionName":{"name":"mstore","nativeSrc":"18067:6:29","nodeType":"YulIdentifier","src":"18067:6:29"},"nativeSrc":"18067:31:29","nodeType":"YulFunctionCall","src":"18067:31:29"},"nativeSrc":"18067:31:29","nodeType":"YulExpressionStatement","src":"18067:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18114:1:29","nodeType":"YulLiteral","src":"18114:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"18117:4:29","nodeType":"YulLiteral","src":"18117:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"18107:6:29","nodeType":"YulIdentifier","src":"18107:6:29"},"nativeSrc":"18107:15:29","nodeType":"YulFunctionCall","src":"18107:15:29"},"nativeSrc":"18107:15:29","nodeType":"YulExpressionStatement","src":"18107:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18138:1:29","nodeType":"YulLiteral","src":"18138:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"18141:4:29","nodeType":"YulLiteral","src":"18141:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18131:6:29","nodeType":"YulIdentifier","src":"18131:6:29"},"nativeSrc":"18131:15:29","nodeType":"YulFunctionCall","src":"18131:15:29"},"nativeSrc":"18131:15:29","nodeType":"YulExpressionStatement","src":"18131:15:29"}]},"name":"panic_error_0x41","nativeSrc":"18025:127:29","nodeType":"YulFunctionDefinition","src":"18025:127:29"},{"body":{"nativeSrc":"18213:65:29","nodeType":"YulBlock","src":"18213:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18230:1:29","nodeType":"YulLiteral","src":"18230:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"18233:3:29","nodeType":"YulIdentifier","src":"18233:3:29"}],"functionName":{"name":"mstore","nativeSrc":"18223:6:29","nodeType":"YulIdentifier","src":"18223:6:29"},"nativeSrc":"18223:14:29","nodeType":"YulFunctionCall","src":"18223:14:29"},"nativeSrc":"18223:14:29","nodeType":"YulExpressionStatement","src":"18223:14:29"},{"nativeSrc":"18246:26:29","nodeType":"YulAssignment","src":"18246:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"18264:1:29","nodeType":"YulLiteral","src":"18264:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"18267:4:29","nodeType":"YulLiteral","src":"18267:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"18254:9:29","nodeType":"YulIdentifier","src":"18254:9:29"},"nativeSrc":"18254:18:29","nodeType":"YulFunctionCall","src":"18254:18:29"},"variableNames":[{"name":"data","nativeSrc":"18246:4:29","nodeType":"YulIdentifier","src":"18246:4:29"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"18157:121:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"18196:3:29","nodeType":"YulTypedName","src":"18196:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"18204:4:29","nodeType":"YulTypedName","src":"18204:4:29","type":""}],"src":"18157:121:29"},{"body":{"nativeSrc":"18364:462:29","nodeType":"YulBlock","src":"18364:462:29","statements":[{"body":{"nativeSrc":"18397:423:29","nodeType":"YulBlock","src":"18397:423:29","statements":[{"nativeSrc":"18411:11:29","nodeType":"YulVariableDeclaration","src":"18411:11:29","value":{"kind":"number","nativeSrc":"18421:1:29","nodeType":"YulLiteral","src":"18421:1:29","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"18415:2:29","nodeType":"YulTypedName","src":"18415:2:29","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18442:1:29","nodeType":"YulLiteral","src":"18442:1:29","type":"","value":"0"},{"name":"array","nativeSrc":"18445:5:29","nodeType":"YulIdentifier","src":"18445:5:29"}],"functionName":{"name":"mstore","nativeSrc":"18435:6:29","nodeType":"YulIdentifier","src":"18435:6:29"},"nativeSrc":"18435:16:29","nodeType":"YulFunctionCall","src":"18435:16:29"},"nativeSrc":"18435:16:29","nodeType":"YulExpressionStatement","src":"18435:16:29"},{"nativeSrc":"18464:30:29","nodeType":"YulVariableDeclaration","src":"18464:30:29","value":{"arguments":[{"kind":"number","nativeSrc":"18486:1:29","nodeType":"YulLiteral","src":"18486:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"18489:4:29","nodeType":"YulLiteral","src":"18489:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"18476:9:29","nodeType":"YulIdentifier","src":"18476:9:29"},"nativeSrc":"18476:18:29","nodeType":"YulFunctionCall","src":"18476:18:29"},"variables":[{"name":"data","nativeSrc":"18468:4:29","nodeType":"YulTypedName","src":"18468:4:29","type":""}]},{"nativeSrc":"18507:57:29","nodeType":"YulVariableDeclaration","src":"18507:57:29","value":{"arguments":[{"name":"data","nativeSrc":"18530:4:29","nodeType":"YulIdentifier","src":"18530:4:29"},{"arguments":[{"kind":"number","nativeSrc":"18540:1:29","nodeType":"YulLiteral","src":"18540:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"18547:10:29","nodeType":"YulIdentifier","src":"18547:10:29"},{"kind":"number","nativeSrc":"18559:2:29","nodeType":"YulLiteral","src":"18559:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"18543:3:29","nodeType":"YulIdentifier","src":"18543:3:29"},"nativeSrc":"18543:19:29","nodeType":"YulFunctionCall","src":"18543:19:29"}],"functionName":{"name":"shr","nativeSrc":"18536:3:29","nodeType":"YulIdentifier","src":"18536:3:29"},"nativeSrc":"18536:27:29","nodeType":"YulFunctionCall","src":"18536:27:29"}],"functionName":{"name":"add","nativeSrc":"18526:3:29","nodeType":"YulIdentifier","src":"18526:3:29"},"nativeSrc":"18526:38:29","nodeType":"YulFunctionCall","src":"18526:38:29"},"variables":[{"name":"deleteStart","nativeSrc":"18511:11:29","nodeType":"YulTypedName","src":"18511:11:29","type":""}]},{"body":{"nativeSrc":"18601:23:29","nodeType":"YulBlock","src":"18601:23:29","statements":[{"nativeSrc":"18603:19:29","nodeType":"YulAssignment","src":"18603:19:29","value":{"name":"data","nativeSrc":"18618:4:29","nodeType":"YulIdentifier","src":"18618:4:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"18603:11:29","nodeType":"YulIdentifier","src":"18603:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"18583:10:29","nodeType":"YulIdentifier","src":"18583:10:29"},{"kind":"number","nativeSrc":"18595:4:29","nodeType":"YulLiteral","src":"18595:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"18580:2:29","nodeType":"YulIdentifier","src":"18580:2:29"},"nativeSrc":"18580:20:29","nodeType":"YulFunctionCall","src":"18580:20:29"},"nativeSrc":"18577:47:29","nodeType":"YulIf","src":"18577:47:29"},{"nativeSrc":"18637:41:29","nodeType":"YulVariableDeclaration","src":"18637:41:29","value":{"arguments":[{"name":"data","nativeSrc":"18651:4:29","nodeType":"YulIdentifier","src":"18651:4:29"},{"arguments":[{"kind":"number","nativeSrc":"18661:1:29","nodeType":"YulLiteral","src":"18661:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"18668:3:29","nodeType":"YulIdentifier","src":"18668:3:29"},{"kind":"number","nativeSrc":"18673:2:29","nodeType":"YulLiteral","src":"18673:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"18664:3:29","nodeType":"YulIdentifier","src":"18664:3:29"},"nativeSrc":"18664:12:29","nodeType":"YulFunctionCall","src":"18664:12:29"}],"functionName":{"name":"shr","nativeSrc":"18657:3:29","nodeType":"YulIdentifier","src":"18657:3:29"},"nativeSrc":"18657:20:29","nodeType":"YulFunctionCall","src":"18657:20:29"}],"functionName":{"name":"add","nativeSrc":"18647:3:29","nodeType":"YulIdentifier","src":"18647:3:29"},"nativeSrc":"18647:31:29","nodeType":"YulFunctionCall","src":"18647:31:29"},"variables":[{"name":"_2","nativeSrc":"18641:2:29","nodeType":"YulTypedName","src":"18641:2:29","type":""}]},{"nativeSrc":"18691:24:29","nodeType":"YulVariableDeclaration","src":"18691:24:29","value":{"name":"deleteStart","nativeSrc":"18704:11:29","nodeType":"YulIdentifier","src":"18704:11:29"},"variables":[{"name":"start","nativeSrc":"18695:5:29","nodeType":"YulTypedName","src":"18695:5:29","type":""}]},{"body":{"nativeSrc":"18789:21:29","nodeType":"YulBlock","src":"18789:21:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"18798:5:29","nodeType":"YulIdentifier","src":"18798:5:29"},{"name":"_1","nativeSrc":"18805:2:29","nodeType":"YulIdentifier","src":"18805:2:29"}],"functionName":{"name":"sstore","nativeSrc":"18791:6:29","nodeType":"YulIdentifier","src":"18791:6:29"},"nativeSrc":"18791:17:29","nodeType":"YulFunctionCall","src":"18791:17:29"},"nativeSrc":"18791:17:29","nodeType":"YulExpressionStatement","src":"18791:17:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"18739:5:29","nodeType":"YulIdentifier","src":"18739:5:29"},{"name":"_2","nativeSrc":"18746:2:29","nodeType":"YulIdentifier","src":"18746:2:29"}],"functionName":{"name":"lt","nativeSrc":"18736:2:29","nodeType":"YulIdentifier","src":"18736:2:29"},"nativeSrc":"18736:13:29","nodeType":"YulFunctionCall","src":"18736:13:29"},"nativeSrc":"18728:82:29","nodeType":"YulForLoop","post":{"nativeSrc":"18750:26:29","nodeType":"YulBlock","src":"18750:26:29","statements":[{"nativeSrc":"18752:22:29","nodeType":"YulAssignment","src":"18752:22:29","value":{"arguments":[{"name":"start","nativeSrc":"18765:5:29","nodeType":"YulIdentifier","src":"18765:5:29"},{"kind":"number","nativeSrc":"18772:1:29","nodeType":"YulLiteral","src":"18772:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18761:3:29","nodeType":"YulIdentifier","src":"18761:3:29"},"nativeSrc":"18761:13:29","nodeType":"YulFunctionCall","src":"18761:13:29"},"variableNames":[{"name":"start","nativeSrc":"18752:5:29","nodeType":"YulIdentifier","src":"18752:5:29"}]}]},"pre":{"nativeSrc":"18732:3:29","nodeType":"YulBlock","src":"18732:3:29","statements":[]},"src":"18728:82:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"18380:3:29","nodeType":"YulIdentifier","src":"18380:3:29"},{"kind":"number","nativeSrc":"18385:2:29","nodeType":"YulLiteral","src":"18385:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"18377:2:29","nodeType":"YulIdentifier","src":"18377:2:29"},"nativeSrc":"18377:11:29","nodeType":"YulFunctionCall","src":"18377:11:29"},"nativeSrc":"18374:446:29","nodeType":"YulIf","src":"18374:446:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"18283:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"18336:5:29","nodeType":"YulTypedName","src":"18336:5:29","type":""},{"name":"len","nativeSrc":"18343:3:29","nodeType":"YulTypedName","src":"18343:3:29","type":""},{"name":"startIndex","nativeSrc":"18348:10:29","nodeType":"YulTypedName","src":"18348:10:29","type":""}],"src":"18283:543:29"},{"body":{"nativeSrc":"18916:81:29","nodeType":"YulBlock","src":"18916:81:29","statements":[{"nativeSrc":"18926:65:29","nodeType":"YulAssignment","src":"18926:65:29","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"18941:4:29","nodeType":"YulIdentifier","src":"18941:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18959:1:29","nodeType":"YulLiteral","src":"18959:1:29","type":"","value":"3"},{"name":"len","nativeSrc":"18962:3:29","nodeType":"YulIdentifier","src":"18962:3:29"}],"functionName":{"name":"shl","nativeSrc":"18955:3:29","nodeType":"YulIdentifier","src":"18955:3:29"},"nativeSrc":"18955:11:29","nodeType":"YulFunctionCall","src":"18955:11:29"},{"arguments":[{"kind":"number","nativeSrc":"18972:1:29","nodeType":"YulLiteral","src":"18972:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"18968:3:29","nodeType":"YulIdentifier","src":"18968:3:29"},"nativeSrc":"18968:6:29","nodeType":"YulFunctionCall","src":"18968:6:29"}],"functionName":{"name":"shr","nativeSrc":"18951:3:29","nodeType":"YulIdentifier","src":"18951:3:29"},"nativeSrc":"18951:24:29","nodeType":"YulFunctionCall","src":"18951:24:29"}],"functionName":{"name":"not","nativeSrc":"18947:3:29","nodeType":"YulIdentifier","src":"18947:3:29"},"nativeSrc":"18947:29:29","nodeType":"YulFunctionCall","src":"18947:29:29"}],"functionName":{"name":"and","nativeSrc":"18937:3:29","nodeType":"YulIdentifier","src":"18937:3:29"},"nativeSrc":"18937:40:29","nodeType":"YulFunctionCall","src":"18937:40:29"},{"arguments":[{"kind":"number","nativeSrc":"18983:1:29","nodeType":"YulLiteral","src":"18983:1:29","type":"","value":"1"},{"name":"len","nativeSrc":"18986:3:29","nodeType":"YulIdentifier","src":"18986:3:29"}],"functionName":{"name":"shl","nativeSrc":"18979:3:29","nodeType":"YulIdentifier","src":"18979:3:29"},"nativeSrc":"18979:11:29","nodeType":"YulFunctionCall","src":"18979:11:29"}],"functionName":{"name":"or","nativeSrc":"18934:2:29","nodeType":"YulIdentifier","src":"18934:2:29"},"nativeSrc":"18934:57:29","nodeType":"YulFunctionCall","src":"18934:57:29"},"variableNames":[{"name":"used","nativeSrc":"18926:4:29","nodeType":"YulIdentifier","src":"18926:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"18831:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"18893:4:29","nodeType":"YulTypedName","src":"18893:4:29","type":""},{"name":"len","nativeSrc":"18899:3:29","nodeType":"YulTypedName","src":"18899:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"18907:4:29","nodeType":"YulTypedName","src":"18907:4:29","type":""}],"src":"18831:166:29"},{"body":{"nativeSrc":"19098:1249:29","nodeType":"YulBlock","src":"19098:1249:29","statements":[{"nativeSrc":"19108:24:29","nodeType":"YulVariableDeclaration","src":"19108:24:29","value":{"arguments":[{"name":"src","nativeSrc":"19128:3:29","nodeType":"YulIdentifier","src":"19128:3:29"}],"functionName":{"name":"mload","nativeSrc":"19122:5:29","nodeType":"YulIdentifier","src":"19122:5:29"},"nativeSrc":"19122:10:29","nodeType":"YulFunctionCall","src":"19122:10:29"},"variables":[{"name":"newLen","nativeSrc":"19112:6:29","nodeType":"YulTypedName","src":"19112:6:29","type":""}]},{"body":{"nativeSrc":"19175:22:29","nodeType":"YulBlock","src":"19175:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"19177:16:29","nodeType":"YulIdentifier","src":"19177:16:29"},"nativeSrc":"19177:18:29","nodeType":"YulFunctionCall","src":"19177:18:29"},"nativeSrc":"19177:18:29","nodeType":"YulExpressionStatement","src":"19177:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"19147:6:29","nodeType":"YulIdentifier","src":"19147:6:29"},{"kind":"number","nativeSrc":"19155:18:29","nodeType":"YulLiteral","src":"19155:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19144:2:29","nodeType":"YulIdentifier","src":"19144:2:29"},"nativeSrc":"19144:30:29","nodeType":"YulFunctionCall","src":"19144:30:29"},"nativeSrc":"19141:56:29","nodeType":"YulIf","src":"19141:56:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19250:4:29","nodeType":"YulIdentifier","src":"19250:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19288:4:29","nodeType":"YulIdentifier","src":"19288:4:29"}],"functionName":{"name":"sload","nativeSrc":"19282:5:29","nodeType":"YulIdentifier","src":"19282:5:29"},"nativeSrc":"19282:11:29","nodeType":"YulFunctionCall","src":"19282:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"19256:25:29","nodeType":"YulIdentifier","src":"19256:25:29"},"nativeSrc":"19256:38:29","nodeType":"YulFunctionCall","src":"19256:38:29"},{"name":"newLen","nativeSrc":"19296:6:29","nodeType":"YulIdentifier","src":"19296:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"19206:43:29","nodeType":"YulIdentifier","src":"19206:43:29"},"nativeSrc":"19206:97:29","nodeType":"YulFunctionCall","src":"19206:97:29"},"nativeSrc":"19206:97:29","nodeType":"YulExpressionStatement","src":"19206:97:29"},{"nativeSrc":"19312:18:29","nodeType":"YulVariableDeclaration","src":"19312:18:29","value":{"kind":"number","nativeSrc":"19329:1:29","nodeType":"YulLiteral","src":"19329:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"19316:9:29","nodeType":"YulTypedName","src":"19316:9:29","type":""}]},{"nativeSrc":"19339:23:29","nodeType":"YulVariableDeclaration","src":"19339:23:29","value":{"kind":"number","nativeSrc":"19358:4:29","nodeType":"YulLiteral","src":"19358:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"19343:11:29","nodeType":"YulTypedName","src":"19343:11:29","type":""}]},{"nativeSrc":"19371:17:29","nodeType":"YulAssignment","src":"19371:17:29","value":{"kind":"number","nativeSrc":"19384:4:29","nodeType":"YulLiteral","src":"19384:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"19371:9:29","nodeType":"YulIdentifier","src":"19371:9:29"}]},{"cases":[{"body":{"nativeSrc":"19434:656:29","nodeType":"YulBlock","src":"19434:656:29","statements":[{"nativeSrc":"19448:35:29","nodeType":"YulVariableDeclaration","src":"19448:35:29","value":{"arguments":[{"name":"newLen","nativeSrc":"19467:6:29","nodeType":"YulIdentifier","src":"19467:6:29"},{"arguments":[{"kind":"number","nativeSrc":"19479:2:29","nodeType":"YulLiteral","src":"19479:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"19475:3:29","nodeType":"YulIdentifier","src":"19475:3:29"},"nativeSrc":"19475:7:29","nodeType":"YulFunctionCall","src":"19475:7:29"}],"functionName":{"name":"and","nativeSrc":"19463:3:29","nodeType":"YulIdentifier","src":"19463:3:29"},"nativeSrc":"19463:20:29","nodeType":"YulFunctionCall","src":"19463:20:29"},"variables":[{"name":"loopEnd","nativeSrc":"19452:7:29","nodeType":"YulTypedName","src":"19452:7:29","type":""}]},{"nativeSrc":"19496:49:29","nodeType":"YulVariableDeclaration","src":"19496:49:29","value":{"arguments":[{"name":"slot","nativeSrc":"19540:4:29","nodeType":"YulIdentifier","src":"19540:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"19510:29:29","nodeType":"YulIdentifier","src":"19510:29:29"},"nativeSrc":"19510:35:29","nodeType":"YulFunctionCall","src":"19510:35:29"},"variables":[{"name":"dstPtr","nativeSrc":"19500:6:29","nodeType":"YulTypedName","src":"19500:6:29","type":""}]},{"nativeSrc":"19558:10:29","nodeType":"YulVariableDeclaration","src":"19558:10:29","value":{"kind":"number","nativeSrc":"19567:1:29","nodeType":"YulLiteral","src":"19567:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"19562:1:29","nodeType":"YulTypedName","src":"19562:1:29","type":""}]},{"body":{"nativeSrc":"19645:172:29","nodeType":"YulBlock","src":"19645:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"19670:6:29","nodeType":"YulIdentifier","src":"19670:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"19688:3:29","nodeType":"YulIdentifier","src":"19688:3:29"},{"name":"srcOffset","nativeSrc":"19693:9:29","nodeType":"YulIdentifier","src":"19693:9:29"}],"functionName":{"name":"add","nativeSrc":"19684:3:29","nodeType":"YulIdentifier","src":"19684:3:29"},"nativeSrc":"19684:19:29","nodeType":"YulFunctionCall","src":"19684:19:29"}],"functionName":{"name":"mload","nativeSrc":"19678:5:29","nodeType":"YulIdentifier","src":"19678:5:29"},"nativeSrc":"19678:26:29","nodeType":"YulFunctionCall","src":"19678:26:29"}],"functionName":{"name":"sstore","nativeSrc":"19663:6:29","nodeType":"YulIdentifier","src":"19663:6:29"},"nativeSrc":"19663:42:29","nodeType":"YulFunctionCall","src":"19663:42:29"},"nativeSrc":"19663:42:29","nodeType":"YulExpressionStatement","src":"19663:42:29"},{"nativeSrc":"19722:24:29","nodeType":"YulAssignment","src":"19722:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"19736:6:29","nodeType":"YulIdentifier","src":"19736:6:29"},{"kind":"number","nativeSrc":"19744:1:29","nodeType":"YulLiteral","src":"19744:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19732:3:29","nodeType":"YulIdentifier","src":"19732:3:29"},"nativeSrc":"19732:14:29","nodeType":"YulFunctionCall","src":"19732:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"19722:6:29","nodeType":"YulIdentifier","src":"19722:6:29"}]},{"nativeSrc":"19763:40:29","nodeType":"YulAssignment","src":"19763:40:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"19780:9:29","nodeType":"YulIdentifier","src":"19780:9:29"},{"name":"srcOffset_1","nativeSrc":"19791:11:29","nodeType":"YulIdentifier","src":"19791:11:29"}],"functionName":{"name":"add","nativeSrc":"19776:3:29","nodeType":"YulIdentifier","src":"19776:3:29"},"nativeSrc":"19776:27:29","nodeType":"YulFunctionCall","src":"19776:27:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"19763:9:29","nodeType":"YulIdentifier","src":"19763:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"19592:1:29","nodeType":"YulIdentifier","src":"19592:1:29"},{"name":"loopEnd","nativeSrc":"19595:7:29","nodeType":"YulIdentifier","src":"19595:7:29"}],"functionName":{"name":"lt","nativeSrc":"19589:2:29","nodeType":"YulIdentifier","src":"19589:2:29"},"nativeSrc":"19589:14:29","nodeType":"YulFunctionCall","src":"19589:14:29"},"nativeSrc":"19581:236:29","nodeType":"YulForLoop","post":{"nativeSrc":"19604:28:29","nodeType":"YulBlock","src":"19604:28:29","statements":[{"nativeSrc":"19606:24:29","nodeType":"YulAssignment","src":"19606:24:29","value":{"arguments":[{"name":"i","nativeSrc":"19615:1:29","nodeType":"YulIdentifier","src":"19615:1:29"},{"name":"srcOffset_1","nativeSrc":"19618:11:29","nodeType":"YulIdentifier","src":"19618:11:29"}],"functionName":{"name":"add","nativeSrc":"19611:3:29","nodeType":"YulIdentifier","src":"19611:3:29"},"nativeSrc":"19611:19:29","nodeType":"YulFunctionCall","src":"19611:19:29"},"variableNames":[{"name":"i","nativeSrc":"19606:1:29","nodeType":"YulIdentifier","src":"19606:1:29"}]}]},"pre":{"nativeSrc":"19585:3:29","nodeType":"YulBlock","src":"19585:3:29","statements":[]},"src":"19581:236:29"},{"body":{"nativeSrc":"19865:166:29","nodeType":"YulBlock","src":"19865:166:29","statements":[{"nativeSrc":"19883:43:29","nodeType":"YulVariableDeclaration","src":"19883:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"19910:3:29","nodeType":"YulIdentifier","src":"19910:3:29"},{"name":"srcOffset","nativeSrc":"19915:9:29","nodeType":"YulIdentifier","src":"19915:9:29"}],"functionName":{"name":"add","nativeSrc":"19906:3:29","nodeType":"YulIdentifier","src":"19906:3:29"},"nativeSrc":"19906:19:29","nodeType":"YulFunctionCall","src":"19906:19:29"}],"functionName":{"name":"mload","nativeSrc":"19900:5:29","nodeType":"YulIdentifier","src":"19900:5:29"},"nativeSrc":"19900:26:29","nodeType":"YulFunctionCall","src":"19900:26:29"},"variables":[{"name":"lastValue","nativeSrc":"19887:9:29","nodeType":"YulTypedName","src":"19887:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"19950:6:29","nodeType":"YulIdentifier","src":"19950:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"19962:9:29","nodeType":"YulIdentifier","src":"19962:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19989:1:29","nodeType":"YulLiteral","src":"19989:1:29","type":"","value":"3"},{"name":"newLen","nativeSrc":"19992:6:29","nodeType":"YulIdentifier","src":"19992:6:29"}],"functionName":{"name":"shl","nativeSrc":"19985:3:29","nodeType":"YulIdentifier","src":"19985:3:29"},"nativeSrc":"19985:14:29","nodeType":"YulFunctionCall","src":"19985:14:29"},{"kind":"number","nativeSrc":"20001:3:29","nodeType":"YulLiteral","src":"20001:3:29","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"19981:3:29","nodeType":"YulIdentifier","src":"19981:3:29"},"nativeSrc":"19981:24:29","nodeType":"YulFunctionCall","src":"19981:24:29"},{"arguments":[{"kind":"number","nativeSrc":"20011:1:29","nodeType":"YulLiteral","src":"20011:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20007:3:29","nodeType":"YulIdentifier","src":"20007:3:29"},"nativeSrc":"20007:6:29","nodeType":"YulFunctionCall","src":"20007:6:29"}],"functionName":{"name":"shr","nativeSrc":"19977:3:29","nodeType":"YulIdentifier","src":"19977:3:29"},"nativeSrc":"19977:37:29","nodeType":"YulFunctionCall","src":"19977:37:29"}],"functionName":{"name":"not","nativeSrc":"19973:3:29","nodeType":"YulIdentifier","src":"19973:3:29"},"nativeSrc":"19973:42:29","nodeType":"YulFunctionCall","src":"19973:42:29"}],"functionName":{"name":"and","nativeSrc":"19958:3:29","nodeType":"YulIdentifier","src":"19958:3:29"},"nativeSrc":"19958:58:29","nodeType":"YulFunctionCall","src":"19958:58:29"}],"functionName":{"name":"sstore","nativeSrc":"19943:6:29","nodeType":"YulIdentifier","src":"19943:6:29"},"nativeSrc":"19943:74:29","nodeType":"YulFunctionCall","src":"19943:74:29"},"nativeSrc":"19943:74:29","nodeType":"YulExpressionStatement","src":"19943:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"19836:7:29","nodeType":"YulIdentifier","src":"19836:7:29"},{"name":"newLen","nativeSrc":"19845:6:29","nodeType":"YulIdentifier","src":"19845:6:29"}],"functionName":{"name":"lt","nativeSrc":"19833:2:29","nodeType":"YulIdentifier","src":"19833:2:29"},"nativeSrc":"19833:19:29","nodeType":"YulFunctionCall","src":"19833:19:29"},"nativeSrc":"19830:201:29","nodeType":"YulIf","src":"19830:201:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20051:4:29","nodeType":"YulIdentifier","src":"20051:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20065:1:29","nodeType":"YulLiteral","src":"20065:1:29","type":"","value":"1"},{"name":"newLen","nativeSrc":"20068:6:29","nodeType":"YulIdentifier","src":"20068:6:29"}],"functionName":{"name":"shl","nativeSrc":"20061:3:29","nodeType":"YulIdentifier","src":"20061:3:29"},"nativeSrc":"20061:14:29","nodeType":"YulFunctionCall","src":"20061:14:29"},{"kind":"number","nativeSrc":"20077:1:29","nodeType":"YulLiteral","src":"20077:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20057:3:29","nodeType":"YulIdentifier","src":"20057:3:29"},"nativeSrc":"20057:22:29","nodeType":"YulFunctionCall","src":"20057:22:29"}],"functionName":{"name":"sstore","nativeSrc":"20044:6:29","nodeType":"YulIdentifier","src":"20044:6:29"},"nativeSrc":"20044:36:29","nodeType":"YulFunctionCall","src":"20044:36:29"},"nativeSrc":"20044:36:29","nodeType":"YulExpressionStatement","src":"20044:36:29"}]},"nativeSrc":"19427:663:29","nodeType":"YulCase","src":"19427:663:29","value":{"kind":"number","nativeSrc":"19432:1:29","nodeType":"YulLiteral","src":"19432:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"20107:234:29","nodeType":"YulBlock","src":"20107:234:29","statements":[{"nativeSrc":"20121:14:29","nodeType":"YulVariableDeclaration","src":"20121:14:29","value":{"kind":"number","nativeSrc":"20134:1:29","nodeType":"YulLiteral","src":"20134:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"20125:5:29","nodeType":"YulTypedName","src":"20125:5:29","type":""}]},{"body":{"nativeSrc":"20170:67:29","nodeType":"YulBlock","src":"20170:67:29","statements":[{"nativeSrc":"20188:35:29","nodeType":"YulAssignment","src":"20188:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20207:3:29","nodeType":"YulIdentifier","src":"20207:3:29"},{"name":"srcOffset","nativeSrc":"20212:9:29","nodeType":"YulIdentifier","src":"20212:9:29"}],"functionName":{"name":"add","nativeSrc":"20203:3:29","nodeType":"YulIdentifier","src":"20203:3:29"},"nativeSrc":"20203:19:29","nodeType":"YulFunctionCall","src":"20203:19:29"}],"functionName":{"name":"mload","nativeSrc":"20197:5:29","nodeType":"YulIdentifier","src":"20197:5:29"},"nativeSrc":"20197:26:29","nodeType":"YulFunctionCall","src":"20197:26:29"},"variableNames":[{"name":"value","nativeSrc":"20188:5:29","nodeType":"YulIdentifier","src":"20188:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"20151:6:29","nodeType":"YulIdentifier","src":"20151:6:29"},"nativeSrc":"20148:89:29","nodeType":"YulIf","src":"20148:89:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20257:4:29","nodeType":"YulIdentifier","src":"20257:4:29"},{"arguments":[{"name":"value","nativeSrc":"20316:5:29","nodeType":"YulIdentifier","src":"20316:5:29"},{"name":"newLen","nativeSrc":"20323:6:29","nodeType":"YulIdentifier","src":"20323:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20263:52:29","nodeType":"YulIdentifier","src":"20263:52:29"},"nativeSrc":"20263:67:29","nodeType":"YulFunctionCall","src":"20263:67:29"}],"functionName":{"name":"sstore","nativeSrc":"20250:6:29","nodeType":"YulIdentifier","src":"20250:6:29"},"nativeSrc":"20250:81:29","nodeType":"YulFunctionCall","src":"20250:81:29"},"nativeSrc":"20250:81:29","nodeType":"YulExpressionStatement","src":"20250:81:29"}]},"nativeSrc":"20099:242:29","nodeType":"YulCase","src":"20099:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"19407:6:29","nodeType":"YulIdentifier","src":"19407:6:29"},{"kind":"number","nativeSrc":"19415:2:29","nodeType":"YulLiteral","src":"19415:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"19404:2:29","nodeType":"YulIdentifier","src":"19404:2:29"},"nativeSrc":"19404:14:29","nodeType":"YulFunctionCall","src":"19404:14:29"},"nativeSrc":"19397:944:29","nodeType":"YulSwitch","src":"19397:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"19002:1345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19083:4:29","nodeType":"YulTypedName","src":"19083:4:29","type":""},{"name":"src","nativeSrc":"19089:3:29","nodeType":"YulTypedName","src":"19089:3:29","type":""}],"src":"19002:1345:29"},{"body":{"nativeSrc":"20384:95:29","nodeType":"YulBlock","src":"20384:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20401:1:29","nodeType":"YulLiteral","src":"20401:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"20408:3:29","nodeType":"YulLiteral","src":"20408:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"20413:10:29","nodeType":"YulLiteral","src":"20413:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"20404:3:29","nodeType":"YulIdentifier","src":"20404:3:29"},"nativeSrc":"20404:20:29","nodeType":"YulFunctionCall","src":"20404:20:29"}],"functionName":{"name":"mstore","nativeSrc":"20394:6:29","nodeType":"YulIdentifier","src":"20394:6:29"},"nativeSrc":"20394:31:29","nodeType":"YulFunctionCall","src":"20394:31:29"},"nativeSrc":"20394:31:29","nodeType":"YulExpressionStatement","src":"20394:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20441:1:29","nodeType":"YulLiteral","src":"20441:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"20444:4:29","nodeType":"YulLiteral","src":"20444:4:29","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"20434:6:29","nodeType":"YulIdentifier","src":"20434:6:29"},"nativeSrc":"20434:15:29","nodeType":"YulFunctionCall","src":"20434:15:29"},"nativeSrc":"20434:15:29","nodeType":"YulExpressionStatement","src":"20434:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20465:1:29","nodeType":"YulLiteral","src":"20465:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"20468:4:29","nodeType":"YulLiteral","src":"20468:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20458:6:29","nodeType":"YulIdentifier","src":"20458:6:29"},"nativeSrc":"20458:15:29","nodeType":"YulFunctionCall","src":"20458:15:29"},"nativeSrc":"20458:15:29","nodeType":"YulExpressionStatement","src":"20458:15:29"}]},"name":"panic_error_0x31","nativeSrc":"20352:127:29","nodeType":"YulFunctionDefinition","src":"20352:127:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f968dab381b01065bcd659c7b7ca684b6125a9262124b87757c3ce4b4a61b4e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not whitelisted sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e00ac7e1279f916115359abdeb64bbee0973e9d1fae1ea63f9db0c4b52ed0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot remove treasury\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9c04771ce8b365808d82fcedcff16ad41bc76cd3603245cc6cac98a7ae6a1852__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Sender Address Removed From Whit\")\n        mstore(add(headStart, 96), \"elist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_888da2894a44edbf1c03e9128c6e70054075a69831971d4c9689ad0c53419709__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Not whitelisted receiver\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e61780c94bfda6c255ee69289c8bdaa3616ce54a5740fe437854d788bcd4833__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Receiver Address Removed From Wh\")\n        mstore(add(headStart, 96), \"itelist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Account is frozen\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60025fe8a16034c344f99fb27745f11571f566c0ad6bead632c46a6fe7ab4e06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid sender or receiver\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_783d59426230f00e811d19f70cbc216f514e1135bf5f8434dcb11831c50409e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already burn vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83db599dc1885d338eaf0f66e0e5c2cd7c2529b829cb69eac7d07ee0dc3e7980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Burnable Address Updated\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1606976bca4abf9103ed084b42233e8a5473021f32df1896688702b884a8ec56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not a treasury address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5c4f849172add0ee9051b6c29f3e21501e3cdfa77d3efc19078e185b7b30d750__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7eded41d906ad8da9da4aaa2cae68f4bc27e405921f0ba877c84d9c54d24fd39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"New Minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d835f9bafafc594c77658738155ae0e7f00fb1f12a6421deb992433937d83b74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not nominated\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f150a6193dc925490f18a478495ba2387b38e614c5c2039387a5d1078f56c5db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No pending nomination\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_960f4b71dd6f99169c4f83e15f5d7adab2efe25ef7286f80dfb2c3a92a31387a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"New Admin Added\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bba98c6c5eee4392be61cce76bb892247efee416ed42d1b480f24b0cffd19739__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already treasury\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_da006dccca84de075e8b762eb82e1d510d59108929718795864fa8511aab6614__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"New Sender Address Whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_06fe93bd62b86952d7d45d3607a1af05329ef3f1a265455c47e7e923d4c6c91f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"New Treasury Address Added\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_127ab9926eb405b5f4fe18fc4b7135a1e67c1158c5db81537d6d96ea16f7c145__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Already whitelisted receiver\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0732a6164fc5ad94ef671b27945f3ee929ac0f99b1a7db6a8b65db08506dfe5a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"New Receiver Address Whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98412e28c30dd0c81883dad8f533a5fc3f6afc2c2ff2ed45e97513d9402cb97d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Cannot nominate self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08de87ca866785396b4db24ad7cd371b3cd35b0ee04781a9ea47f5023c81fb31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"New Admin Nominated, Now new adm\")\n        mstore(add(headStart, 96), \"in need to accept the role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dfeff081a89c199601855fa7df8d8cfe88bd1fd5c5c86ef0392d1d0cbe760b2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Already whitelisted sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ae4e56f1941b3343db2824c2bb1fc5e38f2909bfbd08017fa6f02a1833e710d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not treasury\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df5b65dd6872d85bb7648f9de88a45e204ec3bdd2f26b6ce2065e7755eae0811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Treasury Address Removed\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xE691D03B EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xE8AC6533 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xF26C159F EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0xCD5AD4C5 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xD11A57EC EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xD403C878 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xD4179E8D EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xA8422C2F EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xBAE5EC04 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xC80EEEC2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35F14F14 GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x572B6C05 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x76B88024 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x788649EA EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x860838A5 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x8C3D7301 EQ PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35F14F14 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x3A594A1D EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x4EB03F6E EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x175BADCB GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x175BADCB EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xEE3153F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x14EEB828 EQ PUSH2 0x2E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x297 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x289D JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x291E JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F2 JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x63E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B7 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x2FE PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6B5 JUMPI POP PUSH2 0x6B5 DUP3 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6FA SWAP1 PUSH2 0x29F3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x726 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x773 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x748 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x773 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x756 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x789 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x796 DUP2 DUP6 DUP6 PUSH2 0x1E93 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AB DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA103BB434BA32B634B9BA32B21039B2B73232B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F742072656D6F7665207472656173757279 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x8AB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE178BF7CC940ED3C4D14C1206DB670AB5B94749D88646DC197F874A32372EA5 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x53656E64657220416464726573732052656D6F7665642046726F6D2057686974 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x195B1A5CDD PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742077686974656C69737465642072656365697665720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x9DF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAAF02BA1BCB5B6C4B56E5B51C64FFB18BD8ED3760523F4D845A3C0CC0A859244 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x526563656976657220416464726573732052656D6F7665642046726F6D205768 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1A5D195B1A5CDD PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST DUP8 DUP8 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B73737BA103A3930B739B332B9103A379039B2B633 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xB90 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH2 0xBAE JUMPI POP PUSH2 0xBAE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572206F72207265636569766572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xC05 DUP11 DUP11 DUP11 PUSH2 0x1EF9 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC3E DUP3 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xC51 DUP4 DUP4 PUSH2 0x1F27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E48189D5C9B881D985D5B1D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD28 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0xD42 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH2 0x1F27 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27CB0B1F15CF273268C02C4AC770F2121077509FD09F76000F26FEF2107C8E39 PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4275726E61626C65204164647265737320557064617465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xDC2 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP3 DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE1A DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420612074726561737572792061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xECB DUP6 DUP6 PUSH2 0x1F63 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBFA21AA5D5F9A1F0120A95E7C0749F389863CBDBFFF531AA7339077A5BC919DE DUP6 PUSH1 0x40 MLOAD PUSH2 0xF06 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF20 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF60 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C9036B4B73A32B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFE4 JUMPI PUSH2 0xFE2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0xFFC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH2 0x1F27 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6DE4157337B92BECADB23AC8C53BDCABA13D56EAA4E2350EFF3E65C4D1D84C7C PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x2732BB9026B4B73A32B9 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xF915CD9FE234DE6E8D3AFE7BF2388D35B2B6D48E8C629A24602019BDE79C213A SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER DUP1 PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD081B9BDB5A5B985D1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x118A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737903832B73234B733903737B6B4B730BA34B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 DUP2 DUP1 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B2 PUSH1 0x0 DUP3 PUSH2 0x1EB4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x11BF PUSH1 0x0 CALLER PUSH2 0x1F27 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x33357BB61B6CE4D9E2A54FD3D9EC5807E7DF4BBD6BA3FA1B0860C0A1A39E700A SWAP1 PUSH2 0x1224 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x13995DC810591B5A5B881059191959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x1257 SWAP1 DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6FA SWAP1 PUSH2 0x29F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12EE DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1342 DUP6 DUP6 PUSH2 0x1FA9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1374 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SUB PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2A2D JUMP JUMPDEST CALLER DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 SWAP1 SUB PUSH2 0x1487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x21B0B73737BA103A3930B739B332B9103A379039B2B633 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x149F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH2 0x14BD JUMPI POP PUSH2 0x14BD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572206F72207265636569766572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1513 DUP10 DUP10 PUSH2 0x1FEC JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152B DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416C7265616479207472656173757279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x15C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x15DC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x166B JUMPI PUSH2 0x15F8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA148F9AF0F634918FBAF23B2BE442EE99C628242FB2805BF87C08E4BE7A1AFAC PUSH1 0x40 MLOAD PUSH2 0x1662 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772053656E64657220416464726573732057686974656C69737465640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD93A23CFA249287D5DD4D056066C79B1A45BC8608890EA92B4DAFA6E874B3FD0 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772054726561737572792041646472657373204164646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DE PUSH2 0x2004 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1706 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1723 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1731 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1779 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x17BD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x3925A3A2A7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x3925A3A2A7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x202D JUMP JUMPDEST PUSH2 0x17C5 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x17CD PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x17D8 PUSH1 0x0 DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x17F1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DC8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x180A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E28 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1835 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1859 DUP7 PUSH2 0x1846 PUSH1 0x8 PUSH1 0xA PUSH2 0x2B52 JUMP JUMPDEST PUSH2 0x1854 SWAP1 PUSH4 0x17D78400 PUSH2 0x2B61 JUMP JUMPDEST PUSH2 0x1F63 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x189F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B2 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18F2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792077686974656C697374656420726563656976657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1957 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFE6D2D6F86F1B4F5F6D5833A27D9EB52BBA0F8AAD51EB089023C6A4DCFD21A8F PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4E657720526563656976657220416464726573732057686974656C6973746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x1374 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F0 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x1A67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B73737BA103737B6B4B730BA329039B2B633 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9C1D417FDB88C493DBAB369BD79C043AA4C6C9522A681D9334BA091EDE58CD9 SWAP1 PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772041646D696E204E6F6D696E617465642C204E6F77206E65772061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x696E206E65656420746F206163636570742074686520726F6C65000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B57 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792077686974656C69737465642073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1BBC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1F27 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA148F9AF0F634918FBAF23B2BE442EE99C628242FB2805BF87C08E4BE7A1AFAC PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E65772053656E64657220416464726573732057686974656C69737465640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C71 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1CAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F74207472656173757279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1CC4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E08 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x1EB4 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x238BE719BECF7DE7673229DA18D51189916A74316CCD29739E8BF3FA30288D87 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x547265617375727920416464726573732052656D6F7665640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D37 DUP3 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0xC51 DUP4 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP2 PUSH2 0x1EA0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E5EC59F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x4F2A367E694E71282F29AB5EAA04C4C0BE45AC5BF2CA74FB67068B98BDC2887D SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x1EB1 DUP2 PUSH2 0x1EAC PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x21A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1ED0 DUP6 DUP6 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF0 SWAP1 DUP6 PUSH2 0x2283 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F04 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F11 DUP6 DUP3 DUP6 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x1F1C DUP6 DUP6 DUP6 PUSH2 0x22F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1F43 DUP6 DUP6 PUSH2 0x2358 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF0 SWAP1 DUP6 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1F99 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 DUP4 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1F99 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FF7 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH2 0x796 DUP2 DUP6 DUP6 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2035 PUSH2 0x25CD JUMP JUMPDEST PUSH2 0x1F99 DUP3 DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH2 0x2047 PUSH2 0x25CD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2051 PUSH2 0x25CD JUMP JUMPDEST PUSH2 0x2047 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B5 DUP3 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD CALLDATASIZE SWAP1 PUSH1 0x14 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2087 JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x20B7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH2 0x2099 DUP4 DUP6 PUSH2 0x2B78 JUMP JUMPDEST PUSH2 0x20A4 SWAP3 DUP3 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH2 0x20AD SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1342 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP3 DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x1F99 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x21FA DUP5 DUP5 PUSH2 0x125F JUMP JUMPDEST ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x222F PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A4 DUP5 DUP5 PUSH2 0x1D4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xC51 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x22EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xC51 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82C JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2373 DUP5 DUP5 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x2279 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x23AA PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x275A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2445 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x243A SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24B7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2498 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24D5 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2539 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x255E JUMPI PUSH2 0x255E PUSH2 0x2BFD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x25C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x25AD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x2047 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25FA PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2634 DUP5 DUP3 PUSH2 0x2C71 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0xC51 DUP4 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH2 0x264B PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 PUSH2 0x2695 PUSH1 0x1 DUP4 PUSH2 0x2B78 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x26A9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x270E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26C9 JUMPI PUSH2 0x26C9 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x26EC JUMPI PUSH2 0x26EC PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x271F JUMPI PUSH2 0x271F PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x27A1 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B3 PUSH2 0x2004 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x281B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x27FF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2874 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1374 DUP3 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28BB DUP5 PUSH2 0x283C JUMP JUMPDEST SWAP3 POP PUSH2 0x28C9 PUSH1 0x20 DUP6 ADD PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2915 PUSH1 0x20 DUP5 ADD PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2981 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x295C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29A9 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 PUSH1 0x20 DUP5 ADD PUSH2 0x283C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29D3 DUP4 PUSH2 0x283C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x29E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A07 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B1B1B7BAB73A1034B990333937BD32B7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2AA9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2A8F JUMPI PUSH2 0x2A8F PUSH2 0x2A58 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2A9C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2A73 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AC0 JUMPI POP PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST DUP2 PUSH2 0x2ACD JUMPI POP PUSH1 0x0 PUSH2 0x6B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2AE3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2AED JUMPI PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2AFE PUSH2 0x2A58 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2B2C JUMPI POP DUP2 DUP2 EXP PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2B36 DUP4 DUP4 PUSH2 0x2A6E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2B4A JUMPI PUSH2 0x2B4A PUSH2 0x2A58 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1374 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2AB1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2B9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2BA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x2BE2 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2C52 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C5E JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C8B JUMPI PUSH2 0x2C8B PUSH2 0x2C13 JUMP JUMPDEST PUSH2 0x2C9F DUP2 PUSH2 0x2C99 DUP5 SLOAD PUSH2 0x29F3 JUMP JUMPDEST DUP5 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2CD4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2CBC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x189F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D03 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2CE4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2D21 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC1 0xF6 INVALID 0x24 PUSH3 0x1CE81E 0xC5 DUP3 PUSH29 0xAF0253CADB74709B061630E6B55E82371705932000D22ED3A112884BD9 REVERT PUSH1 0x3 0xB7 SAR MUL 0xC2 0xA6 PUSH18 0xCF1DDCC8740E9A0A8E3AB3973E344F52C632 SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00DA4D20B686 0xF7 BLOCKHASH BLOCKHASH COINBASE 0xD4 LOG4 SIGNEXTEND 0xC9 0x22 POP DUP8 CALLVALUE CREATE2 SWAP8 SWAP6 0xE8 0xA7 CODECOPY 0x4E 0x24 PUSH7 0x2EB8EC5B77B9F 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP 0xE1 0xDC 0xBD 0xB9 SAR CALLCODE PUSH19 0x12A29BC27177C840CF2F819ECF2187432E1FAC DUP7 0xC2 0xDD 0x5D 0xFC 0xA9 0xCB 0x4C ISZERO PUSH1 0xF0 0xAC PUSH25 0x3AF04187BDA6C71D491DEE6A63E28B3AD8457B60790F38EEBA LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLVALUE 0xE0 CHAINID JUMPI SWAP8 0x2D 0xA5 PUSH23 0x9E85E3639CF6947222A4DF6DFC41AAA3C0820F52355D81 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"467:12032:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:212:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:29;;463:22;445:41;;433:2;418:18;1695:212:1;;;;;;;;2697:144:3;;;:::i;:::-;;;;;;;:::i;5191:186::-;;;;;;:::i;:::-;;:::i;10042:487:27:-;;;;;;:::i;:::-;;:::i;:::-;;851:82;;-1:-1:-1;;;;;;;;;;;851:82:27;;;;;1824:25:29;;;1812:2;1797:18;851:82:27;1678:177:29;11039:426:27;;;;;;:::i;:::-;;:::i;3877:152:3:-;4008:14;;3877:152;;4672:320:27;;;;;;:::i;:::-;;:::i;4759:191:0:-;;;;;;:::i;:::-;;:::i;5246:136::-;;;;;;:::i;:::-;;:::i;3147:82:27:-;;;3221:1;2961:36:29;;2949:2;2934:18;3147:82:27;2819:184:29;7830:589:27;;;;;;:::i;:::-;;:::i;6348:245:0:-;;;;;;:::i;:::-;;:::i;703:70:27:-;;-1:-1:-1;;;;;;;;;;;703:70:27;;5060:294;;;;;;:::i;:::-;;:::i;7249:521::-;;;;;;:::i;:::-;;:::i;11677:148::-;;;;;;:::i;:::-;-1:-1:-1;;;;;11791:27:27;11768:4;11791:27;;;:16;:27;;;;;;;;;11677:148;4087:171:3;;;;;;:::i;:::-;-1:-1:-1;;;;;4231:20:3;4152:7;4231:20;;;-1:-1:-1;;;;;;;;;;;4231:20:3;;;;;;;4087:171;1191:48:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5928:217;;;;;;:::i;:::-;;:::i;1139:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6595:598;;;:::i;2492:233:1:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3425:32:29;;;3407:51;;3395:2;3380:18;2492:233:1;3261:203:29;3732:207:0;;;;;;:::i;:::-;;:::i;2954:148:3:-;;;:::i;5420:190:27:-;;;;;;:::i;:::-;;:::i;2317:49:0:-;;2362:4;2317:49;;3658:227:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;939:86:27:-;;-1:-1:-1;;;;;;;;;;;939:86:27;;4263:308;;;;;;:::i;:::-;;:::i;8474:639::-;;;;;;:::i;:::-;;:::i;2643:498::-;;;;;;:::i;:::-;;:::i;10586:393::-;;;;;;:::i;:::-;;:::i;2893:222:1:-;;;;;;:::i;:::-;;:::i;6200:343:27:-;;;;;;:::i;:::-;;:::i;779:66::-;;-1:-1:-1;;;;;;;;;;;779:66:27;;9603:381;;;;;;:::i;:::-;;:::i;9171:377::-;;;;;;:::i;:::-;;:::i;635:62::-;;-1:-1:-1;;;;;;;;;;;635:62:27;;5662:138:0;;;;;;:::i;:::-;;:::i;4689:195:3:-;;;;;;:::i;:::-;;:::i;11473:198:27:-;;;;;;:::i;:::-;;:::i;1104:29::-;;;;;-1:-1:-1;;;;;1104:29:27;;;5662:212;;;;;;:::i;:::-;;:::i;1031:66::-;;1071:26;1031:66;;1695:212:1;1780:4;-1:-1:-1;;;;;;1803:57:1;;-1:-1:-1;;;1803:57:1;;:97;;;1864:36;1888:11;1864:23;:36::i;:::-;1796:104;1695:212;-1:-1:-1;;1695:212:1:o;2697:144:3:-;2827:7;2820:14;;2742:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;2820:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5191:186::-;5264:4;5280:13;5296:12;:10;:12::i;:::-;5280:28;;5318:31;5327:5;5334:7;5343:5;5318:8;:31::i;:::-;-1:-1:-1;5366:4:3;;5191:186;-1:-1:-1;;;5191:186:3:o;10042:487:27:-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;10171:13:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;10208:45:::2;-1:-1:-1::0;;;;;;;;;;;10239:13:27::2;10208:7;:45::i;:::-;10200:80;;;::::0;-1:-1:-1;;;10200:80:27;;5336:2:29;10200:80:27::2;::::0;::::2;5318:21:29::0;5375:2;5355:18;;;5348:30;-1:-1:-1;;;5394:18:29;;;5387:52;5456:18;;10200:80:27::2;;;;;;;;;10299:37;-1:-1:-1::0;;;;;;;;;;;10322:13:27::2;10299:7;:37::i;:::-;10298:38;10290:73;;;::::0;-1:-1:-1;;;10290:73:27;;5687:2:29;10290:73:27::2;::::0;::::2;5669:21:29::0;5726:2;5706:18;;;5699:30;-1:-1:-1;;;5745:18:29;;;5738:52;5807:18;;10290:73:27::2;5485:346:29::0;10290:73:27::2;10382:49;-1:-1:-1::0;;;;;;;;;;;10417:13:27::2;10382:11;:49::i;:::-;;10508:13;-1:-1:-1::0;;;;;10446:76:27::2;;;;;;6038:2:29::0;6020:21;;;6077:2;6057:18;;;6050:30;6116:34;6111:2;6096:18;;6089:62;-1:-1:-1;;;6182:2:29;6167:18;;6160:35;6227:3;6212:19;;5836:401;10446:76:27::2;;;;;;;;3217:1:0::1;10042:487:27::0;;:::o;11039:426::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;11172:15:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;11211:49:::2;-1:-1:-1::0;;;;;;;;;;;11244:15:27::2;11211:7;:49::i;:::-;11203:86;;;::::0;-1:-1:-1;;;11203:86:27;;6444:2:29;11203:86:27::2;::::0;::::2;6426:21:29::0;6483:2;6463:18;;;6456:30;6522:26;6502:18;;;6495:54;6566:18;;11203:86:27::2;6242:348:29::0;11203:86:27::2;11308:53;-1:-1:-1::0;;;;;;;;;;;11345:15:27::2;11308:11;:53::i;:::-;;11442:15;-1:-1:-1::0;;;;;11376:82:27::2;;;;;;6797:2:29::0;6779:21;;;6836:2;6816:18;;;6809:30;6875:34;6870:2;6855:18;;6848:62;-1:-1:-1;;;6941:2:29;6926:18;;6919:37;6988:3;6973:19;;6595:403;4672:320:27;4922:4;4788:6;3355;3365:1;3355:11;3351:39;;3375:15;;-1:-1:-1;;;3375:15:27;;;;;;;;;;;3351:39;4817:2;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;-1:-1:-1::0;;;;;3732:23:27;::::2;;::::0;;;:14:::2;:23;::::0;;;;;4839:4;;3732:23:::2;;3731:24;3723:54;;;;-1:-1:-1::0;;;3723:54:27::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3732:23:27;::::3;;::::0;;;:14:::3;:23;::::0;;;;;4863:2;;3732:23:::3;;3731:24;3723:54;;;;-1:-1:-1::0;;;3723:54:27::3;;;;;;;:::i;:::-;4895:4:::4;4901:2;3943:4;-1:-1:-1::0;;;;;3937:10:27::4;:2;-1:-1:-1::0;;;;;3937:10:27::4;::::0;3929:46:::4;;;::::0;-1:-1:-1;;;3929:46:27;;7551:2:29;3929:46:27::4;::::0;::::4;7533:21:29::0;7590:2;7570:18;;;7563:30;-1:-1:-1;;;7609:18:29;;;7602:53;7672:18;;3929:46:27::4;7349:347:29::0;3929:46:27::4;4006:36;-1:-1:-1::0;;;;;;;;;;;4037:4:27::4;4006:7;:36::i;:::-;:90;;;;4060:36;-1:-1:-1::0;;;;;;;;;;;4093:2:27::4;4060:7;:36::i;:::-;3985:163;;;::::0;-1:-1:-1;;;3985:163:27;;7903:2:29;3985:163:27::4;::::0;::::4;7885:21:29::0;7942:2;7922:18;;;7915:30;7981:28;7961:18;;;7954:56;8027:18;;3985:163:27::4;7701:350:29::0;3985:163:27::4;4949:36:::5;4968:4;4974:2;4978:6;4949:18;:36::i;:::-;4942:43:::0;4672:320;-1:-1:-1;;;;;;;;;;4672:320:27:o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;7830:589:27:-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;7952:12:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;7989:38:::2;-1:-1:-1::0;;;;;;;;;;;8014:12:27::2;7989:7;:38::i;:::-;7988:39;7980:70;;;::::0;-1:-1:-1;;;7980:70:27;;8258:2:29;7980:70:27::2;::::0;::::2;8240:21:29::0;8297:2;8277:18;;;8270:30;-1:-1:-1;;;8316:18:29;;;8309:48;8374:18;;7980:70:27::2;8056:342:29::0;7980:70:27::2;8115:20;8138:33;-1:-1:-1::0;;;;;;;;;;;8169:1:27::2;8138:13;:33::i;:::-;8115:56:::0;-1:-1:-1;;;;;;8185:26:27;::::2;::::0;8181:99:::2;;8227:42;-1:-1:-1::0;;;;;;;;;;;8256:12:27::2;8227:11;:42::i;:::-;;8181:99;8298:41;-1:-1:-1::0;;;;;;;;;;;8326:12:27::2;8298:10;:41::i;:::-;;8399:12;-1:-1:-1::0;;;;;8354:58:27::2;;;;;;8605:2:29::0;8587:21;;;8644:2;8624:18;;;8617:30;8683:26;8678:2;8663:18;;8656:54;8742:2;8727:18;;8403:348;8354:58:27::2;;;;;;;;7970:449;3217:1:0::1;7830:589:27::0;;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6441:34:0;:18;-1:-1:-1;;;;;6441:34:0;;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;5060:294:27:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5169:6:27::1;3355;3365:1;3355:11:::0;3351:39:::1;;3375:15;;-1:-1:-1::0;;;3375:15:27::1;;;;;;;;;;;3351:39;5198:2:::0;-1:-1:-1;;;;;3534:18:27;::::2;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::2;;;;;;;;;;;3530:48;5224:26:::3;-1:-1:-1::0;;;;;;;;;;;5247:2:27::3;5224:7;:26::i;:::-;5216:61;;;::::0;-1:-1:-1;;;5216:61:27;;8958:2:29;5216:61:27::3;::::0;::::3;8940:21:29::0;8997:2;8977:18;;;8970:30;-1:-1:-1;;;9016:18:29;;;9009:52;9078:18;;5216:61:27::3;8756:346:29::0;5216:61:27::3;5287:17;5293:2;5297:6;5287:5;:17::i;:::-;5336:2;-1:-1:-1::0;;;;;5319:28:27::3;;5340:6;5319:28;;;;1824:25:29::0;;1812:2;1797:18;;1678:177;5319:28:27::3;;;;;;;;3400:1:::2;3217::0::1;5060:294:27::0;;;:::o;7249:521::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;7365:9:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;7399:31:::2;-1:-1:-1::0;;;;;;;;;;;7420:9:27::2;7399:7;:31::i;:::-;7398:32;7390:59;;;::::0;-1:-1:-1;;;7390:59:27;;9309:2:29;7390:59:27::2;::::0;::::2;9291:21:29::0;9348:2;9328:18;;;9321:30;-1:-1:-1;;;9367:18:29;;;9360:44;9421:18;;7390:59:27::2;9107:338:29::0;7390:59:27::2;7510:17;7530:29;-1:-1:-1::0;;;;;;;;;;;7557:1:27::2;7530:13;:29::i;:::-;7510:49:::0;-1:-1:-1;;;;;;7573:23:27;::::2;::::0;7569:89:::2;;7612:35;-1:-1:-1::0;;;;;;;;;;;7637:9:27::2;7612:11;:35::i;:::-;;7569:89;7676:34;-1:-1:-1::0;;;;;;;;;;;7700:9:27::2;7676:10;:34::i;:::-;;7753:9;-1:-1:-1::0;;;;;7725:38:27::2;;;;;;9652:2:29::0;9634:21;;;9691:2;9671:18;;;9664:30;-1:-1:-1;;;9725:2:29;9710:18;;9703:40;9775:2;9760:18;;9450:334;5928:217:27;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;6045:7:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;-1:-1:-1::0;;;;;6068:23:27;::::2;6094:5;6068:23:::0;;;:14:::2;:23;::::0;;;;;:31;;-1:-1:-1;;6068:31:27::2;::::0;;6114:24;::::2;::::0;6094:5;6114:24:::2;3217:1:0::1;5928:217:27::0;;:::o;6595:598::-;6660:10;;3530:48;;3561:17;;-1:-1:-1;;;3561:17:27;;;;;;;;;;;3530:48;6694:14:::1;::::0;-1:-1:-1;;;;;6694:14:27::1;6712:10;6694:28;6686:54;;;::::0;-1:-1:-1;;;6686:54:27;;9991:2:29;6686:54:27::1;::::0;::::1;9973:21:29::0;10030:2;10010:18;;;10003:30;-1:-1:-1;;;10049:18:29;;;10042:43;10102:18;;6686:54:27::1;9789:337:29::0;6686:54:27::1;6784:1;6758:14:::0;-1:-1:-1;;;;;6758:14:27::1;6750:62;;;::::0;-1:-1:-1;;;6750:62:27;;10333:2:29;6750:62:27::1;::::0;::::1;10315:21:29::0;10372:2;10352:18;;;10345:30;-1:-1:-1;;;10391:18:29;;;10384:51;10452:18;;6750:62:27::1;10131:345:29::0;6750:62:27::1;6872:16;6891:36;6872:16:::0;;6891:13:::1;:36::i;:::-;6872:55:::0;-1:-1:-1;;;;;;6941:22:27;::::1;::::0;6937:94:::1;;6979:41;2362:4:0;7011:8:27::0;6979:11:::1;:41::i;:::-;;6937:94;7049:42;2362:4:0;7080:10:27;7049;:42::i;:::-;-1:-1:-1::0;7126:1:27::1;7101:27:::0;;-1:-1:-1;;;;;;7101:27:27::1;::::0;;7143:43:::1;::::0;7175:10:::1;::::0;7143:43:::1;::::0;::::1;::::0;10683:2:29;10665:21;;;10722:2;10702:18;;;10695:30;-1:-1:-1;;;10756:2:29;10741:18;;10734:45;10811:2;10796:18;;10481:339;7143:43:27::1;;;;;;;;6676:517;6595:598:::0;:::o;2492:233:1:-;2573:7;2688:20;;;-1:-1:-1;;;;;;;;;;;2688:20:1;;;;;;;:30;;2712:5;2688:23;:30::i;:::-;2681:37;2492:233;-1:-1:-1;;;;2492:233:1:o;3732:207:0:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;2954:148:3:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;3079:16;;;:::i;5420:190:27:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5535:6:27::1;3355;3365:1;3355:11:::0;3351:39:::1;;3375:15;;-1:-1:-1::0;;;3375:15:27::1;;;;;;;;;;;3351:39;5564:4:::0;-1:-1:-1;;;;;3534:18:27;::::2;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::2;;;;;;;;;;;3530:48;5584:19:::3;5590:4;5596:6;5584:5;:19::i;:::-;3400:1:::2;3217::0::1;5420:190:27::0;;;:::o;3658:227:1:-;3753:40;3849:20;;;-1:-1:-1;;;;;;;;;;;3849:20:1;;;;;;;;3725:16;;1403:38;3849:29;;:27;:29::i;:::-;3842:36;3658:227;-1:-1:-1;;;3658:227:1:o;4263:308:27:-;4510:4;4364:6;3355;3365:1;3355:11;3351:39;;3375:15;;-1:-1:-1;;;3375:15:27;;;;;;;;;;;3351:39;4393:2;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;4415:10:::2;3732:23;::::0;;;:14:::2;:23;::::0;;;;;::::2;;3731:24;3723:54;;;;-1:-1:-1::0;;;3723:54:27::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3732:23:27;::::3;;::::0;;;:14:::3;:23;::::0;;;;;4445:2;;3732:23:::3;;3731:24;3723:54;;;;-1:-1:-1::0;;;3723:54:27::3;;;;;;;:::i;:::-;4477:10:::4;4489:2:::0;-1:-1:-1;;;;;3937:10:27;::::4;::::0;;;3929:46:::4;;;::::0;-1:-1:-1;;;3929:46:27;;7551:2:29;3929:46:27::4;::::0;::::4;7533:21:29::0;7590:2;7570:18;;;7563:30;-1:-1:-1;;;7609:18:29;;;7602:53;7672:18;;3929:46:27::4;7349:347:29::0;3929:46:27::4;4006:36;-1:-1:-1::0;;;;;;;;;;;4037:4:27::4;4006:7;:36::i;:::-;:90;;;;4060:36;-1:-1:-1::0;;;;;;;;;;;4093:2:27::4;4060:7;:36::i;:::-;3985:163;;;::::0;-1:-1:-1;;;3985:163:27;;7903:2:29;3985:163:27::4;::::0;::::4;7885:21:29::0;7942:2;7922:18;;;7915:30;7981:28;7961:18;;;7954:56;8027:18;;3985:163:27::4;7701:350:29::0;3985:163:27::4;4538:26:::5;4553:2;4557:6;4538:14;:26::i;:::-;4531:33:::0;4263:308;-1:-1:-1;;;;;;;;;4263:308:27:o;8474:639::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;8597:10:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;8632:34:::2;-1:-1:-1::0;;;;;;;;;;;8655:10:27::2;8632:7;:34::i;:::-;8631:35;8623:64;;;::::0;-1:-1:-1;;;8623:64:27;;11027:2:29;8623:64:27::2;::::0;::::2;11009:21:29::0;11066:2;11046:18;;;11039:30;-1:-1:-1;;;11085:18:29;;;11078:46;11141:18;;8623:64:27::2;10825:340:29::0;8623:64:27::2;8706:37;-1:-1:-1::0;;;;;;;;;;;8732:10:27::2;8706;:37::i;:::-;;8824:42;-1:-1:-1::0;;;;;;;;;;;8855:10:27::2;8824:7;:42::i;:::-;8819:202;;8882:45;-1:-1:-1::0;;;;;;;;;;;8916:10:27::2;8882;:45::i;:::-;;8999:10;-1:-1:-1::0;;;;;8946:64:27::2;;;;;;11372:2:29::0;11354:21;;;11411:2;11391:18;;;11384:30;11450:32;11445:2;11430:18;;11423:60;11515:2;11500:18;;11170:354;8946:64:27::2;;;;;;;;8819:202;9095:10;-1:-1:-1::0;;;;;9044:62:27::2;;;;;;11731:2:29::0;11713:21;;;11770:2;11750:18;;;11743:30;11809:28;11804:2;11789:18;;11782:56;11870:2;11855:18;;11529:350;2643:498:27;4158:30:2;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:2;-1:-1:-1;;;4302:15:2;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:2;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:2;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:2;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:2;-1:-1:-1;;;5011:22:2;;;4977:67;2714:30:27::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2714:30:27::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2714:30:27::1;;::::0;:12:::1;:30::i;:::-;2754:32;:30;:32::i;:::-;2796:24;:22;:24::i;:::-;2831:44;2362:4:0;2862:12:27::0;2831:10:::1;:44::i;:::-;;2885:37;-1:-1:-1::0;;;;;;;;;;;2909:12:27::1;2885:10;:37::i;:::-;;2932:41;-1:-1:-1::0;;;;;;;;;;;2960:12:27::1;2932:10;:41::i;:::-;;2983:39;1071:26;3009:12;2983:10;:39::i;:::-;-1:-1:-1::0;3085:49:27::1;3091:12:::0;3119:14:::1;3221:1:::0;3119:2:::1;:14;:::i;:::-;3105:28;::::0;:11:::1;:28;:::i;:::-;3085:5;:49::i;:::-;5068:14:2::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:2;;;5140:14;;-1:-1:-1;13719:50:29;;5140:14:2;;13707:2:29;13692:18;5140:14:2;;;;;;;5064:101;4092:1079;;;;;2643:498:27;:::o;10586:393::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;10711:10:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;10746:44:::2;-1:-1:-1::0;;;;;;;;;;;10779:10:27::2;10746:7;:44::i;:::-;10745:45;10737:86;;;::::0;-1:-1:-1;;;10737:86:27;;13982:2:29;10737:86:27::2;::::0;::::2;13964:21:29::0;14021:2;14001:18;;;13994:30;14060;14040:18;;;14033:58;14108:18;;10737:86:27::2;13780:352:29::0;10737:86:27::2;10842:47;-1:-1:-1::0;;;;;;;;;;;10878:10:27::2;10842;:47::i;:::-;;10961:10;-1:-1:-1::0;;;;;10904:68:27::2;;;;;;14339:2:29::0;14321:21;;;14358:18;;;14351:30;14417:34;14412:2;14397:18;;14390:62;14484:2;14469:18;;14137:356;2893:222:1;2964:7;3079:20;;;-1:-1:-1;;;;;;;;;;;3079:20:1;;;;;;;:29;;:27;:29::i;6200:343:27:-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;6316:8:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;6360:10:::2;-1:-1:-1::0;;;;;6348:22:27;::::2;::::0;6340:55:::2;;;::::0;-1:-1:-1;;;6340:55:27;;14700:2:29;6340:55:27::2;::::0;::::2;14682:21:29::0;14739:2;14719:18;;;14712:30;-1:-1:-1;;;14758:18:29;;;14751:50;14818:18;;6340:55:27::2;14498:344:29::0;6340:55:27::2;6405:14;:25:::0;;-1:-1:-1;;;;;6405:25:27;::::2;-1:-1:-1::0;;;;;;6405:25:27;;::::2;::::0;::::2;::::0;;;6445:91:::2;::::0;::::2;::::0;::::2;::::0;15049:2:29;15031:21;;;15088:2;15068:18;;;15061:30;15127:34;15122:2;15107:18;;15100:62;15198:28;15193:2;15178:18;;15171:56;15259:3;15244:19;;14847:422;9603:381:27;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;9726:10:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;9761:42:::2;-1:-1:-1::0;;;;;;;;;;;9792:10:27::2;9761:7;:42::i;:::-;9760:43;9752:82;;;::::0;-1:-1:-1;;;9752:82:27;;15476:2:29;9752:82:27::2;::::0;::::2;15458:21:29::0;15515:2;15495:18;;;15488:30;15554:28;15534:18;;;15527:56;15600:18;;9752:82:27::2;15274:350:29::0;9752:82:27::2;9853:45;-1:-1:-1::0;;;;;;;;;;;9887:10:27::2;9853;:45::i;:::-;;9966:10;-1:-1:-1::0;;;;;9913:64:27::2;;;;;;11372:2:29::0;11354:21;;;11411:2;11391:18;;;11384:30;11450:32;11445:2;11430:18;;11423:60;11515:2;11500:18;;11170:354;9171:377:27;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;9302:15:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;9341:39:::2;-1:-1:-1::0;;;;;;;;;;;9364:15:27::2;9341:7;:39::i;:::-;9333:64;;;::::0;-1:-1:-1;;;9333:64:27;;15831:2:29;9333:64:27::2;::::0;::::2;15813:21:29::0;15870:2;15850:18;;;15843:30;-1:-1:-1;;;15889:18:29;;;15882:42;15941:18;;9333:64:27::2;15629:336:29::0;9333:64:27::2;9416:43;-1:-1:-1::0;;;;;;;;;;;9443:15:27::2;9416:11;:43::i;:::-;;9525:15;-1:-1:-1::0;;;;;9474:67:27::2;;;;;;16172:2:29::0;16154:21;;;16211:2;16191:18;;;16184:30;16250:26;16245:2;16230:18;;16223:54;16309:2;16294:18;;15970:348;5662:138:0;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4689:195:3:-:0;-1:-1:-1;;;;;4848:20:3;;;4769:7;4848:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4689:195::o;11473:198:27:-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;;11616:35:27;;;::::1;;::::0;;;:16:::1;:35;::::0;;;;:48;;-1:-1:-1;;11616:48:27::1;::::0;::::1;;::::0;;;::::1;::::0;;11473:198::o;5662:212::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;5777:7:27;-1:-1:-1;;;;;3534:18:27;::::1;3530:48;;3561:17;;-1:-1:-1::0;;;3561:17:27::1;;;;;;;;;;;3530:48;-1:-1:-1::0;;;;;5800:23:27;::::2;;::::0;;;5826:4:::2;5800:23;::::0;;;;;;;:30;;-1:-1:-1;;5800:30:27::2;::::0;;::::2;::::0;;;5845:22;::::2;::::0;5800:23;5845:22:::2;3217:1:0::1;5662:212:27::0;;:::o;3443:202:0:-;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1134:40:6;;;3602:36:0;1035:146:6;11831:215:27;11964:14;12001:38;:36;:38::i;:::-;11994:45;;11831:215;:::o;9982:128:3:-;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;4148:103:0:-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;4438:353:1:-;4525:4;-1:-1:-1;;;;;;;;;;;4525:4:1;4645:32;4663:4;4669:7;4645:17;:32::i;:::-;4630:47;;4691:7;4687:74;;;4714:14;:20;;;;;;;;;;:36;;4742:7;4714:27;:36::i;:::-;;4777:7;4438:353;-1:-1:-1;;;;4438:353:1:o;5969:244:3:-;6056:4;6072:15;6090:12;:10;:12::i;:::-;6072:30;;6112:37;6128:4;6134:7;6143:5;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;-1:-1:-1;6202:4:3;;5969:244;-1:-1:-1;;;;5969:244:3:o;3987:348:1:-;4073:4;-1:-1:-1;;;;;;;;;;;4073:4:1;4193:31;4210:4;4216:7;4193:16;:31::i;:::-;4178:46;;4238:7;4234:71;;;4261:14;:20;;;;;;;;;;:33;;4286:7;4261:24;:33::i;8714:208:3:-;-1:-1:-1;;;;;8784:21:3;;8780:91;;8828:32;;-1:-1:-1;;;8828:32:3;;8857:1;8828:32;;;3407:51:29;3380:18;;8828:32:3;3261:203:29;8780:91:3;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;:::-;8714:208;;:::o;10987:156:25:-;11061:7;11111:22;11115:3;11127:5;11111:3;:22::i;9240:206:3:-;-1:-1:-1;;;;;9310:21:3;;9306:89;;9354:30;;-1:-1:-1;;;9354:30:3;;9381:1;9354:30;;;3407:51:29;3380:18;;9354:30:3;3261:203:29;9306:89:3;9404:35;9412:7;9429:1;9433:5;9404:7;:35::i;11683:273:25:-;11746:16;11774:22;11799:19;11807:3;11799:7;:19::i;4453:178:3:-;4522:4;4538:13;4554:12;:10;:12::i;:::-;4538:28;;4576:27;4586:5;4593:2;4597:5;4576:9;:27::i;9071:205:2:-;9129:30;;3147:66;9186:27;8819:122;2263:147:3;6929:20:2;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;1463:75:1:-:0;6929:20:2;:18;:20::i;:::-;1463:75:1:o;2684:111:5:-;6929:20:2;:18;:20::i;:::-;2754:34:5::1;:32;:34::i;10530:115:25:-:0;10593:7;10619:19;10627:3;5202:18;;5120:107;640:517:26;869:10;702:7;11791:27:27;;;:16;:27;;;;;;746:8:26;;2127:2;;11791:27:27;;850:83:26;;;;;914:19;896:14;:37;;850:83;833:318;;;1018:8;;1027:36;1044:19;1027:14;:36;:::i;:::-;1018:47;;;;;:::i;:::-;1010:56;;;:::i;:::-;981:103;;958:126;;;;640:517;:::o;833:318::-;966:10:4;1115:25:26;;;;640:517;:::o;10957:487:3:-;-1:-1:-1;;;;;;;;;;;;;;;;11122:19:3;;11118:89;;11164:32;;-1:-1:-1;;;11164:32:3;;11193:1;11164:32;;;3407:51:29;3380:18;;11164:32:3;3261:203:29;11118:89:3;-1:-1:-1;;;;;11220:21:3;;11216:90;;11264:31;;-1:-1:-1;;;11264:31:3;;11292:1;11264:31;;;3407:51:29;3380:18;;11264:31:3;3261:203:29;11216:90:3;-1:-1:-1;;;;;11315:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11362:76;;;;11412:7;-1:-1:-1;;;;;11396:31:3;11405:5;-1:-1:-1;;;;;11396:31:3;;11421:5;11396:31;;;;1824:25:29;;1812:2;1797:18;;1678:177;11396:31:3;;;;;;;;11055:389;10957:487;;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;17326:32:29;;4514:47:0;;;17308:51:29;17375:18;;;17368:34;;;17281:18;;4514:47:0;17134:274:29;7894:388:0;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:0;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:0;;;;;;;;;:39;;-1:-1:-1;;8099:39:0;;;8184:12;:10;:12::i;:::-;-1:-1:-1;;;;;8157:40:0;8175:7;-1:-1:-1;;;;;8157:40:0;8169:4;8157:40;;;;;;;;;;8218:4;8211:11;;;;;8057:219;8260:5;8253:12;;;;;9650:156:25;9723:4;9746:53;9754:3;-1:-1:-1;;;;;9774:23:25;;9746:7;:53::i;11726:476:3:-;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;-1:-1:-1;;11891:16:3;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;11998:60;;-1:-1:-1;;;11998:60:3;;-1:-1:-1;;;;;17633:32:29;;11998:60:3;;;17615:51:29;17682:18;;;17675:34;;;17725:18;;;17718:34;;;17588:18;;11998:60:3;17413:345:29;11943:130:3;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;6586:300::-;-1:-1:-1;;;;;6669:18:3;;6665:86;;6710:30;;-1:-1:-1;;;6710:30:3;;6737:1;6710:30;;;3407:51:29;3380:18;;6710:30:3;3261:203:29;6665:86:3;-1:-1:-1;;;;;6764:16:3;;6760:86;;6803:32;;-1:-1:-1;;;6803:32:3;;6832:1;6803:32;;;3407:51:29;3380:18;;6803:32:3;3261:203:29;6760:86:3;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;7270:387:0:-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;:10;:12::i;:::-;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;9332:150:25;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:25;;9425:4;:50::i;7201:1170:3:-;-1:-1:-1;;;;;;;;;;;;;;;;7343:18:3;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7339:546:3;;-1:-1:-1;7339:546:3;;-1:-1:-1;;;;;7555:17:3;;7533:19;7555:17;;;;;;;;;;;7590:19;;;7586:115;;;7636:50;;-1:-1:-1;;;7636:50:3;;-1:-1:-1;;;;;17633:32:29;;7636:50:3;;;17615:51:29;17682:18;;;17675:34;;;17725:18;;;17718:34;;;17588:18;;7636:50:3;17413:345:29;7586:115:3;-1:-1:-1;;;;;7821:17:3;;:11;:17;;;;;;;;;;7841:19;;;;7821:39;;7339:546;-1:-1:-1;;;;;7899:16:3;;7895:429;;8062:14;;;:23;;;;;;;7895:429;;;-1:-1:-1;;;;;8275:15:3;;:11;:15;;;;;;;;;;:24;;;;;;7895:429;8354:2;-1:-1:-1;;;;;8339:25:3;8348:4;-1:-1:-1;;;;;8339:25:3;;8358:5;8339:25;;;;1824::29;;1812:2;1797:18;;1678:177;8339:25:3;;;;;;;;7276:1095;7201:1170;;;:::o;5569:118:25:-;5636:7;5662:3;:11;;5674:5;5662:18;;;;;;;;:::i;:::-;;;;;;;;;5655:25;;5569:118;;;;:::o;6227:109::-;6283:16;6318:3;:11;;6311:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6227:109;;;:::o;7082:141:2:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:2;;;;;;;;;;;2416:216:3;6929:20:2;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:3;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:3::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;2801:183:5:-:0;6929:20:2;:18;:20::i;:::-;1949:1:5::1;2532:30:::0;2954:23;2801:183::o;2910:1368:25:-;2976:4;3105:21;;;:14;;;:21;;;;;;3141:13;;3137:1135;;3508:18;3529:12;3540:1;3529:8;:12;:::i;:::-;3575:18;;3508:33;;-1:-1:-1;3555:17:25;;3575:22;;3596:1;;3575:22;:::i;:::-;3555:42;;3630:9;3616:10;:23;3612:378;;3659:17;3679:3;:11;;3691:9;3679:22;;;;;;;;:::i;:::-;;;;;;;;;3659:42;;3826:9;3800:3;:11;;3812:10;3800:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;3939:25;;;:14;;;:25;;;;;:36;;;3612:378;4068:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4171:3;:14;;:21;4186:5;4171:21;;;;;;;;;;;4164:28;;;4214:4;4207:11;;;;;;;2336:406;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:25;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;2415:321;-1:-1:-1;2720:5:25;2713:12;;8485:120:2;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:2;;;;;;-1:-1:-1;8485:120:2:o;14:286:29:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:29;;209:43;;199:71;;266:1;263;256:12;497:548;609:4;638:2;667;656:9;649:21;699:6;693:13;742:6;737:2;726:9;722:18;715:34;767:1;777:140;791:6;788:1;785:13;777:140;;;886:14;;;882:23;;876:30;852:17;;;871:2;848:26;841:66;806:10;;777:140;;;781:3;966:1;961:2;952:6;941:9;937:22;933:31;926:42;1036:2;1029;1025:7;1020:2;1012:6;1008:15;1004:29;993:9;989:45;985:54;977:62;;;;497:548;;;;:::o;1050:173::-;1118:20;;-1:-1:-1;;;;;1167:31:29;;1157:42;;1147:70;;1213:1;1210;1203:12;1147:70;1050:173;;;:::o;1228:254::-;1296:6;1304;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1396:29;1415:9;1396:29;:::i;:::-;1386:39;1472:2;1457:18;;;;1444:32;;-1:-1:-1;;;1228:254:29:o;1487:186::-;1546:6;1599:2;1587:9;1578:7;1574:23;1570:32;1567:52;;;1615:1;1612;1605:12;1567:52;1638:29;1657:9;1638:29;:::i;2042:328::-;2119:6;2127;2135;2188:2;2176:9;2167:7;2163:23;2159:32;2156:52;;;2204:1;2201;2194:12;2156:52;2227:29;2246:9;2227:29;:::i;:::-;2217:39;;2275:38;2309:2;2298:9;2294:18;2275:38;:::i;:::-;2265:48;;2360:2;2349:9;2345:18;2332:32;2322:42;;2042:328;;;;;:::o;2375:180::-;2434:6;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;-1:-1:-1;2526:23:29;;2375:180;-1:-1:-1;2375:180:29:o;2560:254::-;2628:6;2636;2689:2;2677:9;2668:7;2664:23;2660:32;2657:52;;;2705:1;2702;2695:12;2657:52;2741:9;2728:23;2718:33;;2770:38;2804:2;2793:9;2789:18;2770:38;:::i;:::-;2760:48;;2560:254;;;;;:::o;3008:248::-;3076:6;3084;3137:2;3125:9;3116:7;3112:23;3108:32;3105:52;;;3153:1;3150;3143:12;3105:52;-1:-1:-1;;3176:23:29;;;3246:2;3231:18;;;3218:32;;-1:-1:-1;3008:248:29:o;3469:658::-;3640:2;3692:21;;;3762:13;;3665:18;;;3784:22;;;3611:4;;3640:2;3863:15;;;;3837:2;3822:18;;;3611:4;3906:195;3920:6;3917:1;3914:13;3906:195;;;3985:13;;-1:-1:-1;;;;;3981:39:29;3969:52;;4076:15;;;;4041:12;;;;4017:1;3935:9;3906:195;;;-1:-1:-1;4118:3:29;;3469:658;-1:-1:-1;;;;;;3469:658:29:o;4132:260::-;4200:6;4208;4261:2;4249:9;4240:7;4236:23;4232:32;4229:52;;;4277:1;4274;4267:12;4229:52;4300:29;4319:9;4300:29;:::i;:::-;4290:39;;4348:38;4382:2;4371:9;4367:18;4348:38;:::i;4397:347::-;4462:6;4470;4523:2;4511:9;4502:7;4498:23;4494:32;4491:52;;;4539:1;4536;4529:12;4491:52;4562:29;4581:9;4562:29;:::i;:::-;4552:39;;4641:2;4630:9;4626:18;4613:32;4688:5;4681:13;4674:21;4667:5;4664:32;4654:60;;4710:1;4707;4700:12;4654:60;4733:5;4723:15;;;4397:347;;;;;:::o;4749:380::-;4828:1;4824:12;;;;4871;;;4892:61;;4946:4;4938:6;4934:17;4924:27;;4892:61;4999:2;4991:6;4988:14;4968:18;4965:38;4962:161;;5045:10;5040:3;5036:20;5033:1;5026:31;5080:4;5077:1;5070:15;5108:4;5105:1;5098:15;4962:161;;4749:380;;;:::o;7003:341::-;7205:2;7187:21;;;7244:2;7224:18;;;7217:30;-1:-1:-1;;;7278:2:29;7263:18;;7256:47;7335:2;7320:18;;7003:341::o;11884:127::-;11945:10;11940:3;11936:20;11933:1;11926:31;11976:4;11973:1;11966:15;12000:4;11997:1;11990:15;12016:416;12105:1;12142:5;12105:1;12156:270;12177:7;12167:8;12164:21;12156:270;;;12236:4;12232:1;12228:6;12224:17;12218:4;12215:27;12212:53;;;12245:18;;:::i;:::-;12295:7;12285:8;12281:22;12278:55;;;12315:16;;;;12278:55;12394:22;;;;12354:15;;;;12156:270;;;12160:3;12016:416;;;;;:::o;12437:806::-;12486:5;12516:8;12506:80;;-1:-1:-1;12557:1:29;12571:5;;12506:80;12605:4;12595:76;;-1:-1:-1;12642:1:29;12656:5;;12595:76;12687:4;12705:1;12700:59;;;;12773:1;12768:130;;;;12680:218;;12700:59;12730:1;12721:10;;12744:5;;;12768:130;12805:3;12795:8;12792:17;12789:43;;;12812:18;;:::i;:::-;-1:-1:-1;;12868:1:29;12854:16;;12883:5;;12680:218;;12982:2;12972:8;12969:16;12963:3;12957:4;12954:13;12950:36;12944:2;12934:8;12931:16;12926:2;12920:4;12917:12;12913:35;12910:77;12907:159;;;-1:-1:-1;13019:19:29;;;13051:5;;12907:159;13098:34;13123:8;13117:4;13098:34;:::i;:::-;13168:6;13164:1;13160:6;13156:19;13147:7;13144:32;13141:58;;;13179:18;;:::i;:::-;13217:20;;12437:806;-1:-1:-1;;;12437:806:29:o;13248:140::-;13306:5;13335:47;13376:4;13366:8;13362:19;13356:4;13335:47;:::i;13393:168::-;13466:9;;;13497;;13514:15;;;13508:22;;13494:37;13484:71;;13535:18;;:::i;16323:128::-;16390:9;;;16411:11;;;16408:37;;;16425:18;;:::i;16456:331::-;16561:9;16572;16614:8;16602:10;16599:24;16596:44;;;16636:1;16633;16626:12;16596:44;16665:6;16655:8;16652:20;16649:40;;;16685:1;16682;16675:12;16649:40;-1:-1:-1;;16711:23:29;;;16756:25;;;;;-1:-1:-1;16456:331:29:o;16792:337::-;-1:-1:-1;;16913:19:29;;17000:11;;;;17031:2;17023:11;;17020:103;;;17110:2;17104;17097:3;17093:2;17089:12;17086:1;17082:20;17078:29;17074:2;17070:38;17066:47;17057:56;;17020:103;;;16792:337;;;;:::o;17763:125::-;17828:9;;;17849:10;;;17846:36;;;17862:18;;:::i;17893:127::-;17954:10;17949:3;17945:20;17942:1;17935:31;17985:4;17982:1;17975:15;18009:4;18006:1;17999:15;18025:127;18086:10;18081:3;18077:20;18074:1;18067:31;18117:4;18114:1;18107:15;18141:4;18138:1;18131:15;18283:543;18385:2;18380:3;18377:11;18374:446;;;18421:1;18445:5;18442:1;18435:16;18489:4;18486:1;18476:18;18559:2;18547:10;18543:19;18540:1;18536:27;18530:4;18526:38;18595:4;18583:10;18580:20;18577:47;;;-1:-1:-1;18618:4:29;18577:47;18673:2;18668:3;18664:12;18661:1;18657:20;18651:4;18647:31;18637:41;;18728:82;18746:2;18739:5;18736:13;18728:82;;;18791:17;;;18772:1;18761:13;18728:82;;19002:1345;19128:3;19122:10;19155:18;19147:6;19144:30;19141:56;;;19177:18;;:::i;:::-;19206:97;19296:6;19256:38;19288:4;19282:11;19256:38;:::i;:::-;19250:4;19206:97;:::i;:::-;19358:4;;19415:2;19404:14;;19432:1;19427:663;;;;20134:1;20151:6;20148:89;;;-1:-1:-1;20203:19:29;;;20197:26;20148:89;-1:-1:-1;;18959:1:29;18955:11;;;18951:24;18947:29;18937:40;18983:1;18979:11;;;18934:57;20250:81;;19397:944;;19427:663;18230:1;18223:14;;;18267:4;18254:18;;-1:-1:-1;;19463:20:29;;;19581:236;19595:7;19592:1;19589:14;19581:236;;;19684:19;;;19678:26;19663:42;;19776:27;;;;19744:1;19732:14;;;;19611:19;;19581:236;;;19585:3;19845:6;19836:7;19833:19;19830:201;;;19906:19;;;19900:26;-1:-1:-1;;19989:1:29;19985:14;;;20001:3;19981:24;19977:37;19973:42;19958:58;19943:74;;19830:201;-1:-1:-1;;;;;20077:1:29;20061:14;;;20057:22;20044:36;;-1:-1:-1;19002:1345:29:o;20352:127::-;20413:10;20408:3;20404:20;20401:1;20394:31;20444:4;20441:1;20434:15;20468:4;20465:1;20458:15"},"methodIdentifiers":{"BURN_VAULT_ROLE()":"3a594a1d","DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","TREASURY_ROLE()":"d11a57ec","UPGRADER_ROLE()":"f72c0d8b","WHITELIST_RECEIVER_ROLE()":"a8422c2f","WHITELIST_SENDER_ROLE()":"14eeb828","acceptAdminRole()":"8c3d7301","addTreasuryAddress(address)":"bae5ec04","addWhitelistReceiver(address)":"c80eeec2","addWhitelistSender(address)":"d403c878","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","freezeAccount(address)":"f26c159f","frozenAccounts(address)":"860838a5","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address)":"c4d66de8","isTrustedForwarder(address)":"572b6c05","mint(address,uint256)":"40c10f19","name()":"06fdde03","nominateAdmin(address)":"cd5ad4c5","nominatedAdmin()":"e8ac6533","removeTreasuryAddress(address)":"d4179e8d","removeWhitelistReceiver(address)":"175badcb","removeWhitelistSender(address)":"0ee3153f","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setTrustedForwarder(address,bool)":"e691d03b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trustedForwarder(address)":"76b88024","unfreezeAccount(address)":"788649ea","updateBurnVault(address)":"35f14f14","updateMinter(address)":"4eb03f6e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDeleteTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReceiverOrSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBurnVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"}],\"name\":\"AddedReceiverAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"}],\"name\":\"AddedSenderAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"}],\"name\":\"AddedTreasuryAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominatedAdmin\",\"type\":\"address\"}],\"name\":\"NominatedAdminEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"}],\"name\":\"RemovedReceiverAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"}],\"name\":\"RemovedSenderAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"}],\"name\":\"RemovedTreasuryAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAdmin\",\"type\":\"address\"}],\"name\":\"UpdatedAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedAddress\",\"type\":\"address\"}],\"name\":\"UpdatedBurnVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedUser\",\"type\":\"address\"}],\"name\":\"UpdatedMinter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_VAULT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_RECEIVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_SENDER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"addTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"addWhitelistReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"addWhitelistSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"nominateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"removeTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"}],\"name\":\"removeWhitelistReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"}],\"name\":\"removeWhitelistSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTrusted\",\"type\":\"bool\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBurnVault\",\"type\":\"address\"}],\"name\":\"updateBurnVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"updateMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"acceptAdminRole()\":{\"details\":\"Accept admin role\"},\"addTreasuryAddress(address)\":{\"details\":\"Add treasury address\"},\"addWhitelistReceiver(address)\":{\"details\":\"Add whitelist receiver\"},\"addWhitelistSender(address)\":{\"details\":\"Add whitelist sender\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burn tokens from the burn vault\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"freezeAccount(address)\":{\"details\":\"Freeze an account\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Mint tokens to a treasury address\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nominateAdmin(address)\":{\"details\":\"Nominate a new admin\"},\"removeTreasuryAddress(address)\":{\"details\":\"Remove treasury address\"},\"removeWhitelistReceiver(address)\":{\"details\":\"Remove whitelist receiver\"},\"removeWhitelistSender(address)\":{\"details\":\"Remove whitelist sender\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Override transfer function to implement whitelist restrictions\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override transferFrom function to implement whitelist restrictions\"},\"unfreezeAccount(address)\":{\"details\":\"Unfreeze an account\"},\"updateBurnVault(address)\":{\"details\":\"Update burn vault address\"},\"updateMinter(address)\":{\"details\":\"Update minter address\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rKGEN.sol\":\"rKGEN\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xaec38804089a16494f7d45ebbbeab78fe05e5dc4bc2eae1d2af458fe999fb43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04796408e2c4a1051afb23319e9505edb595a3d9c663ff5d6fcfb8e185ab1d93\",\"dweb:/ipfs/Qma8ZTi4kGyqg45SyNibbJSqMF7broiQnJPHhEGLcZyF9U\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/ERC2771ContextUpgradeable/ERC2771ContextUpgradable.sol\":{\"keccak256\":\"0x67087028d9a5222732ee1d3cfbfb754970fb21beeab57b65d4e098f4a750f646\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830e89b2c29e0196d34cfab524bb040222ec9825e3af14adb66527f4a91cc650\",\"dweb:/ipfs/QmTm8HGyvwgcsFdxj9r7wKWdw6MCfD2vkZfoNLweActX5p\"]},\"contracts/rKGEN.sol\":{\"keccak256\":\"0xa98f94ebadef59b059a8bd57a59c88f6a0cb207413b84ab14659efe1c6fc39a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3a830369321d2e71543d5bb8bd354b52356167e527cc67d52fc2d21d2fa95d8\",\"dweb:/ipfs/QmSiQ4pCL5dSfXiVPKJEstd41udf6XcQQc7zoV2Ub5xK25\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9560,"contract":"contracts/rKGEN.sol:rKGEN","label":"nominatedAdmin","offset":0,"slot":"0","type":"t_address"},{"astId":9564,"contract":"contracts/rKGEN.sol:rKGEN","label":"frozenAccounts","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":9568,"contract":"contracts/rKGEN.sol:rKGEN","label":"trustedForwarder","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}}}},"contracts/rkgen_airdrop.sol":{"RKGENAirdrop":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AlreadyExists","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"InvalidAdmin","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[],"name":"NoNominatedAdmin","type":"error"},{"inputs":[],"name":"NotAdmin","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"nominatedAdmin","type":"address"}],"name":"AdminNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bool","name":"result","type":"bool"}],"name":"SignatureVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"SignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNominatedAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRewardSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"uint256","name":"_chainId","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"nominateAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nominatedAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newSigner","type":"address"}],"name":"updateSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3020":{"entryPoint":null,"id":3020,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060016000556111fd806100256000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638c3d7301116100b8578063a7ecd37e1161007c578063a7ecd37e146102a1578063b58ad07f146102b4578063cd5ad4c5146102c5578063d547741f146102d8578063d828435d146102eb578063e8ac65331461032457600080fd5b80638c3d73011461024a57806391d14854146102525780639333fbda146102655780639a8a059214610290578063a217fddf1461029957600080fd5b80632f2ff15d1161010a5780632f2ff15d146101cb578063323f24ab146101de5780633408e4701461020957806336568abe14610211578063442058991461022457806375b238fc1461023557600080fd5b806301ffc9a71461014757806306b091f91461016f5780631794bb3c14610184578063248a9ca3146101975780632ada8a32146101b8575b600080fd5b61015a610155366004610f25565b610337565b60405190151581526020015b60405180910390f35b61018261017d366004610f72565b61036e565b005b610182610192366004610f9c565b61043d565b6101aa6101a5366004610fd8565b61057f565b604051908152602001610166565b6101826101c6366004610ff1565b6105a1565b6101826101d9366004611085565b61084b565b6001546101f1906001600160a01b031681565b6040516001600160a01b039091168152602001610166565b6002546101aa565b61018261021f366004611085565b61086d565b6001546001600160a01b03166101f1565b6101aa6000805160206111a883398151915281565b6101826108a5565b61015a610260366004611085565b61095b565b6101aa6102733660046110b1565b600460209081526000928352604080842090915290825290205481565b6101aa60025481565b6101aa600081565b6101826102af3660046110db565b610993565b6003546001600160a01b03166101f1565b6101826102d33660046110db565b610a4b565b6101826102e6366004611085565b610afe565b6101aa6102f93660046110b1565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6003546101f1906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061036857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000805160206111a883398151915261038681610b1a565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0384169063a9059cbb906044016020604051808303816000875af11580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f791906110f6565b506040518281526001600160a01b0384169033907f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a49060200160405180910390a3505050565b6000610447610b27565b805490915060ff600160401b820416159067ffffffffffffffff1660008115801561046f5750825b905060008267ffffffffffffffff16600114801561048c5750303b155b90508115801561049a575080155b156104b85760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104e257845460ff60401b1916600160401b1785555b6104ea610b50565b6104f5600089610b5a565b5061050e6000805160206111a883398151915289610b5a565b50600180546001600160a01b0319166001600160a01b0389161790556002869055831561057557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6000908152600080516020611188833981519152602052604090206001015490565b6105a9610bff565b3360009081526004602090815260408083206001600160a01b038916845290915290205483146105ec57604051633ab3447f60e11b815260040160405180910390fd5b6000336002546040516bffffffffffffffffffffffff19606093841b811660208301529289901b90921660348301526048820187905260688201869052608882015260a8016040516020818303038152906040528051906020012090506000610682827f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b905060006106c68286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c2992505050565b6001546040519192506001600160a01b03808416911614907f913cfe5a6bb4486c7cca917d162d4d03f1b72efe6d62d10003d8dcebfe5db92c9061070f90889088908590611118565b60405180910390a18061073557604051638baa579f60e01b815260040160405180910390fd5b3360009081526004602090815260408083206001600160a01b038d1684529091528120805460019290610769908490611150565b90915550506001600160a01b03891663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018b90526044016020604051808303816000875af11580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef91906110f6565b5060408051898152602081018990526001600160a01b038b169133917f2f6639d24651730c7bf57c95ddbf96d66d11477e4ec626876f92c22e5f365e68910160405180910390a3505050506108446001600055565b5050505050565b6108548261057f565b61085d81610b1a565b6108678383610b5a565b50505050565b6001600160a01b03811633146108965760405163334bd91960e11b815260040160405180910390fd5b6108a08282610c53565b505050565b6003546001600160a01b03166108ce57604051632091660760e21b815260040160405180910390fd5b6003546001600160a01b031633146108f957604051630b5eba9f60e41b815260040160405180910390fd5b610904600033610b5a565b5061091d6000805160206111a883398151915233610b5a565b50600380546001600160a01b031916905560405133907f54e4612788f90384e6843298d7854436f3a585b2c3831ab66abf1de63bfa6c2d90600090a2565b6000918252600080516020611188833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000805160206111a88339815191526109ab81610b1a565b6001600160a01b0382166109d257604051632057875960e21b815260040160405180910390fd5b6001546001600160a01b03808416911603610a005760405163119b4fd360e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a25050565b6000805160206111a8833981519152610a6381610b1a565b6001600160a01b038216610a8a57604051630b5eba9f60e41b815260040160405180910390fd5b336001600160a01b03831603610ab35760405163119b4fd360e11b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0384169081179091556040517f0cc480c920b59003be60d60bb7b685b220d313037231045fbea988d33938d86790600090a25050565b610b078261057f565b610b1081610b1a565b6108678383610c53565b610b248133610ccf565b50565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610368565b610b58610d11565b565b6000600080516020611188833981519152610b75848461095b565b610bf5576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610bab3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610368565b6000915050610368565b600260005403610c2257604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600080600080610c398686610d36565b925092509250610c498282610d83565b5090949350505050565b6000600080516020611188833981519152610c6e848461095b565b15610bf5576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610368565b610cd9828261095b565b610d0d5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044015b60405180910390fd5b5050565b610d19610e3c565b610b5857604051631afcd79f60e31b815260040160405180910390fd5b60008060008351604103610d705760208401516040850151606086015160001a610d6288828585610e56565b955095509550505050610d7c565b50508151600091506002905b9250925092565b6000826003811115610d9757610d97611171565b03610da0575050565b6001826003811115610db457610db4611171565b03610dd25760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610de657610de6611171565b03610e075760405163fce698f760e01b815260048101829052602401610d04565b6003826003811115610e1b57610e1b611171565b03610d0d576040516335e2f38360e21b815260048101829052602401610d04565b6000610e46610b27565b54600160401b900460ff16919050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610e915750600091506003905082610f1b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ee5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f1157506000925060019150829050610f1b565b9250600091508190505b9450945094915050565b600060208284031215610f3757600080fd5b81356001600160e01b031981168114610f4f57600080fd5b9392505050565b80356001600160a01b0381168114610f6d57600080fd5b919050565b60008060408385031215610f8557600080fd5b610f8e83610f56565b946020939093013593505050565b600080600060608486031215610fb157600080fd5b610fba84610f56565b9250610fc860208501610f56565b9150604084013590509250925092565b600060208284031215610fea57600080fd5b5035919050565b60008060008060006080868803121561100957600080fd5b61101286610f56565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561103d57600080fd5b818801915088601f83011261105157600080fd5b81358181111561106057600080fd5b89602082850101111561107257600080fd5b9699959850939650602001949392505050565b6000806040838503121561109857600080fd5b823591506110a860208401610f56565b90509250929050565b600080604083850312156110c457600080fd5b6110cd83610f56565b91506110a860208401610f56565b6000602082840312156110ed57600080fd5b610f4f82610f56565b60006020828403121561110857600080fd5b81518015158114610f4f57600080fd5b6040815282604082015282846060830137600060608483018101919091529115156020820152601f909201601f191690910101919050565b8082018082111561036857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212203ab1f63ae2bce39f712823ca250b078faeee878fb7c292cf9928019c6f55fa4964736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x11FD DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3D7301 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA7ECD37E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xB58AD07F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xCD5AD4C5 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xD828435D EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8AC6533 EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C3D7301 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x9333FBDA EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x323F24AB EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3408E470 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x44205899 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x182 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x368 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x386 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x6337ED398C0E8467698C581374FDCE4DB14922DF487B5A39483079F5F59B60A4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447 PUSH2 0xB27 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x48C JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x4E2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x4EA PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x4F5 PUSH1 0x0 DUP10 PUSH2 0xB5A JUMP JUMPDEST POP PUSH2 0x50E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0xB5A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x2 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x575 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0xBFF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP10 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x48 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x68 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0xA8 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x682 DUP3 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C6 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xC29 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND EQ SWAP1 PUSH32 0x913CFE5A6BB4486C7CCA917D162D4D03F1B72EFE6D62D10003D8DCEBFE5DB92C SWAP1 PUSH2 0x70F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x769 SWAP1 DUP5 SWAP1 PUSH2 0x1150 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0x2F6639D24651730C7BF57C95DDBF96D66D11477E4EC626876F92C22E5F365E68 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x844 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x854 DUP3 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x867 DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A0 DUP3 DUP3 PUSH2 0xC53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x20916607 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB5EBA9F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x904 PUSH1 0x0 CALLER PUSH2 0xB5A JUMP JUMPDEST POP PUSH2 0x91D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xB5A JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x54E4612788F90384E6843298D7854436F3A585B2C3831AB66ABF1DE63BFA6C2D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9AB DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND SUB PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5553331329228FBD4123164423717A4A7539F6DFA1C3279A923B98FD681A6C73 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA63 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB5EBA9F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCC480C920B59003BE60D60BB7B685B220D313037231045FBEA988D33938D867 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xB07 DUP3 PUSH2 0x57F JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x867 DUP4 DUP4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xB24 DUP2 CALLER PUSH2 0xCCF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x368 JUMP JUMPDEST PUSH2 0xB58 PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB75 DUP5 DUP5 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBAB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xC39 DUP7 DUP7 PUSH2 0xD36 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xC49 DUP3 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC6E DUP5 DUP5 PUSH2 0x95B JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH2 0xCD9 DUP3 DUP3 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD19 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xD70 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xD62 DUP9 DUP3 DUP6 DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD7C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD97 JUMPI PUSH2 0xD97 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xDA0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB4 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDE6 JUMPI PUSH2 0xDE6 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1B PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 PUSH2 0xB27 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF11 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8E DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP5 PUSH2 0xF56 JUMP JUMPDEST SWAP3 POP PUSH2 0xFC8 PUSH1 0x20 DUP6 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1012 DUP7 PUSH2 0xF56 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x10A8 PUSH1 0x20 DUP5 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10CD DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A8 PUSH1 0x20 DUP5 ADD PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4F DUP3 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x368 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212203AB1F63AE2BCE39F712823CA 0x25 SIGNEXTEND SMOD DUP16 0xAE 0xEE DUP8 DUP16 0xB7 0xC2 SWAP3 0xCF SWAP10 0x28 ADD SWAP13 PUSH16 0x55FA4964736F6C634300081600330000 ","sourceMap":"471:4534:28:-:0;;;;;;;;;;;;-1:-1:-1;1857:1:15;2061:7;:21;471:4534:28;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_10494":{"entryPoint":null,"id":10494,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":null,"id":28,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_63":{"entryPoint":2896,"id":63,"parameterSlots":0,"returnSlots":0},"@_checkInitializing_762":{"entryPoint":3345,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":2842,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":3279,"id":150,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_46":{"entryPoint":null,"id":46,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_853":{"entryPoint":2855,"id":853,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":2906,"id":315,"parameterSlots":2,"returnSlots":1},"@_initializableStorageSlot_839":{"entryPoint":null,"id":839,"parameterSlots":0,"returnSlots":1},"@_isInitializing_830":{"entryPoint":3644,"id":830,"parameterSlots":0,"returnSlots":1},"@_msgSender_1499":{"entryPoint":null,"id":1499,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_3055":{"entryPoint":null,"id":3055,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_3047":{"entryPoint":3071,"id":3047,"parameterSlots":0,"returnSlots":0},"@_revokeRole_361":{"entryPoint":3155,"id":361,"parameterSlots":2,"returnSlots":1},"@_throwError_5070":{"entryPoint":3459,"id":5070,"parameterSlots":2,"returnSlots":0},"@acceptAdminRole_10715":{"entryPoint":2213,"id":10715,"parameterSlots":0,"returnSlots":0},"@chainId_10498":{"entryPoint":null,"id":10498,"parameterSlots":0,"returnSlots":0},"@claim_10856":{"entryPoint":1441,"id":10856,"parameterSlots":5,"returnSlots":0},"@getChainId_10880":{"entryPoint":null,"id":10880,"parameterSlots":0,"returnSlots":1},"@getNominatedAdmin_10864":{"entryPoint":null,"id":10864,"parameterSlots":0,"returnSlots":1},"@getNonce_10758":{"entryPoint":null,"id":10758,"parameterSlots":2,"returnSlots":1},"@getRewardSigner_10872":{"entryPoint":null,"id":10872,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":1407,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":2123,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":2395,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_10600":{"entryPoint":1085,"id":10600,"parameterSlots":3,"returnSlots":0},"@nominateAdmin_10669":{"entryPoint":2635,"id":10669,"parameterSlots":1,"returnSlots":0},"@nominatedAdmin_10500":{"entryPoint":null,"id":10500,"parameterSlots":0,"returnSlots":0},"@nonces_10506":{"entryPoint":null,"id":10506,"parameterSlots":0,"returnSlots":0},"@recover_4827":{"entryPoint":3113,"id":4827,"parameterSlots":2,"returnSlots":1},"@renounceRole_232":{"entryPoint":2157,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":2814,"id":209,"parameterSlots":2,"returnSlots":0},"@rewardSigner_10496":{"entryPoint":null,"id":10496,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1685":{"entryPoint":null,"id":1685,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":823,"id":91,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_5086":{"entryPoint":null,"id":5086,"parameterSlots":1,"returnSlots":1},"@tryRecover_4797":{"entryPoint":3382,"id":4797,"parameterSlots":2,"returnSlots":3},"@tryRecover_4985":{"entryPoint":3670,"id":4985,"parameterSlots":4,"returnSlots":3},"@updateSigner_10634":{"entryPoint":2451,"id":10634,"parameterSlots":1,"returnSlots":0},"@withdrawTokens_10742":{"entryPoint":878,"id":10742,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":3926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4273,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3954,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":4081,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":4229,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3877,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":4376,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4432,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":4465,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6623:29","nodeType":"YulBlock","src":"0:6623:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"83:217:29","nodeType":"YulBlock","src":"83:217:29","statements":[{"body":{"nativeSrc":"129:16:29","nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:29","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:29","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:29","nodeType":"YulIdentifier","src":"131:6:29"},"nativeSrc":"131:12:29","nodeType":"YulFunctionCall","src":"131:12:29"},"nativeSrc":"131:12:29","nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:29","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nativeSrc":"113:9:29","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nativeSrc":"100:3:29","nodeType":"YulIdentifier","src":"100:3:29"},"nativeSrc":"100:23:29","nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nativeSrc":"125:2:29","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:29","nodeType":"YulIdentifier","src":"96:3:29"},"nativeSrc":"96:32:29","nodeType":"YulFunctionCall","src":"96:32:29"},"nativeSrc":"93:52:29","nodeType":"YulIf","src":"93:52:29"},{"nativeSrc":"154:36:29","nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:29","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:29","nodeType":"YulIdentifier","src":"167:12:29"},"nativeSrc":"167:23:29","nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nativeSrc":"158:5:29","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nativeSrc":"254:16:29","nodeType":"YulBlock","src":"254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:29","nodeType":"YulLiteral","src":"263:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:29","nodeType":"YulLiteral","src":"266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:29","nodeType":"YulIdentifier","src":"256:6:29"},"nativeSrc":"256:12:29","nodeType":"YulFunctionCall","src":"256:12:29"},"nativeSrc":"256:12:29","nodeType":"YulExpressionStatement","src":"256:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:29","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nativeSrc":"223:5:29","nodeType":"YulIdentifier","src":"223:5:29"},{"arguments":[{"kind":"number","nativeSrc":"234:3:29","nodeType":"YulLiteral","src":"234:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:29","nodeType":"YulLiteral","src":"239:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:29","nodeType":"YulIdentifier","src":"230:3:29"},"nativeSrc":"230:20:29","nodeType":"YulFunctionCall","src":"230:20:29"}],"functionName":{"name":"and","nativeSrc":"219:3:29","nodeType":"YulIdentifier","src":"219:3:29"},"nativeSrc":"219:32:29","nodeType":"YulFunctionCall","src":"219:32:29"}],"functionName":{"name":"eq","nativeSrc":"209:2:29","nodeType":"YulIdentifier","src":"209:2:29"},"nativeSrc":"209:43:29","nodeType":"YulFunctionCall","src":"209:43:29"}],"functionName":{"name":"iszero","nativeSrc":"202:6:29","nodeType":"YulIdentifier","src":"202:6:29"},"nativeSrc":"202:51:29","nodeType":"YulFunctionCall","src":"202:51:29"},"nativeSrc":"199:71:29","nodeType":"YulIf","src":"199:71:29"},{"nativeSrc":"279:15:29","nodeType":"YulAssignment","src":"279:15:29","value":{"name":"value","nativeSrc":"289:5:29","nodeType":"YulIdentifier","src":"289:5:29"},"variableNames":[{"name":"value0","nativeSrc":"279:6:29","nodeType":"YulIdentifier","src":"279:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:29","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nativeSrc":"60:7:29","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:29","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:286:29"},{"body":{"nativeSrc":"400:92:29","nodeType":"YulBlock","src":"400:92:29","statements":[{"nativeSrc":"410:26:29","nodeType":"YulAssignment","src":"410:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:29","nodeType":"YulIdentifier","src":"422:9:29"},{"kind":"number","nativeSrc":"433:2:29","nodeType":"YulLiteral","src":"433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:29","nodeType":"YulIdentifier","src":"418:3:29"},"nativeSrc":"418:18:29","nodeType":"YulFunctionCall","src":"418:18:29"},"variableNames":[{"name":"tail","nativeSrc":"410:4:29","nodeType":"YulIdentifier","src":"410:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:29","nodeType":"YulIdentifier","src":"452:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:29","nodeType":"YulIdentifier","src":"477:6:29"}],"functionName":{"name":"iszero","nativeSrc":"470:6:29","nodeType":"YulIdentifier","src":"470:6:29"},"nativeSrc":"470:14:29","nodeType":"YulFunctionCall","src":"470:14:29"}],"functionName":{"name":"iszero","nativeSrc":"463:6:29","nodeType":"YulIdentifier","src":"463:6:29"},"nativeSrc":"463:22:29","nodeType":"YulFunctionCall","src":"463:22:29"}],"functionName":{"name":"mstore","nativeSrc":"445:6:29","nodeType":"YulIdentifier","src":"445:6:29"},"nativeSrc":"445:41:29","nodeType":"YulFunctionCall","src":"445:41:29"},"nativeSrc":"445:41:29","nodeType":"YulExpressionStatement","src":"445:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:29","nodeType":"YulTypedName","src":"369:9:29","type":""},{"name":"value0","nativeSrc":"380:6:29","nodeType":"YulTypedName","src":"380:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:29","nodeType":"YulTypedName","src":"391:4:29","type":""}],"src":"305:187:29"},{"body":{"nativeSrc":"546:124:29","nodeType":"YulBlock","src":"546:124:29","statements":[{"nativeSrc":"556:29:29","nodeType":"YulAssignment","src":"556:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"578:6:29","nodeType":"YulIdentifier","src":"578:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"565:12:29","nodeType":"YulIdentifier","src":"565:12:29"},"nativeSrc":"565:20:29","nodeType":"YulFunctionCall","src":"565:20:29"},"variableNames":[{"name":"value","nativeSrc":"556:5:29","nodeType":"YulIdentifier","src":"556:5:29"}]},{"body":{"nativeSrc":"648:16:29","nodeType":"YulBlock","src":"648:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"657:1:29","nodeType":"YulLiteral","src":"657:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"660:1:29","nodeType":"YulLiteral","src":"660:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"650:6:29","nodeType":"YulIdentifier","src":"650:6:29"},"nativeSrc":"650:12:29","nodeType":"YulFunctionCall","src":"650:12:29"},"nativeSrc":"650:12:29","nodeType":"YulExpressionStatement","src":"650:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"607:5:29","nodeType":"YulIdentifier","src":"607:5:29"},{"arguments":[{"name":"value","nativeSrc":"618:5:29","nodeType":"YulIdentifier","src":"618:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"633:3:29","nodeType":"YulLiteral","src":"633:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"638:1:29","nodeType":"YulLiteral","src":"638:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"629:3:29","nodeType":"YulIdentifier","src":"629:3:29"},"nativeSrc":"629:11:29","nodeType":"YulFunctionCall","src":"629:11:29"},{"kind":"number","nativeSrc":"642:1:29","nodeType":"YulLiteral","src":"642:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"625:3:29","nodeType":"YulIdentifier","src":"625:3:29"},"nativeSrc":"625:19:29","nodeType":"YulFunctionCall","src":"625:19:29"}],"functionName":{"name":"and","nativeSrc":"614:3:29","nodeType":"YulIdentifier","src":"614:3:29"},"nativeSrc":"614:31:29","nodeType":"YulFunctionCall","src":"614:31:29"}],"functionName":{"name":"eq","nativeSrc":"604:2:29","nodeType":"YulIdentifier","src":"604:2:29"},"nativeSrc":"604:42:29","nodeType":"YulFunctionCall","src":"604:42:29"}],"functionName":{"name":"iszero","nativeSrc":"597:6:29","nodeType":"YulIdentifier","src":"597:6:29"},"nativeSrc":"597:50:29","nodeType":"YulFunctionCall","src":"597:50:29"},"nativeSrc":"594:70:29","nodeType":"YulIf","src":"594:70:29"}]},"name":"abi_decode_address","nativeSrc":"497:173:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"525:6:29","nodeType":"YulTypedName","src":"525:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"536:5:29","nodeType":"YulTypedName","src":"536:5:29","type":""}],"src":"497:173:29"},{"body":{"nativeSrc":"762:167:29","nodeType":"YulBlock","src":"762:167:29","statements":[{"body":{"nativeSrc":"808:16:29","nodeType":"YulBlock","src":"808:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"817:1:29","nodeType":"YulLiteral","src":"817:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"820:1:29","nodeType":"YulLiteral","src":"820:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"810:6:29","nodeType":"YulIdentifier","src":"810:6:29"},"nativeSrc":"810:12:29","nodeType":"YulFunctionCall","src":"810:12:29"},"nativeSrc":"810:12:29","nodeType":"YulExpressionStatement","src":"810:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"783:7:29","nodeType":"YulIdentifier","src":"783:7:29"},{"name":"headStart","nativeSrc":"792:9:29","nodeType":"YulIdentifier","src":"792:9:29"}],"functionName":{"name":"sub","nativeSrc":"779:3:29","nodeType":"YulIdentifier","src":"779:3:29"},"nativeSrc":"779:23:29","nodeType":"YulFunctionCall","src":"779:23:29"},{"kind":"number","nativeSrc":"804:2:29","nodeType":"YulLiteral","src":"804:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"775:3:29","nodeType":"YulIdentifier","src":"775:3:29"},"nativeSrc":"775:32:29","nodeType":"YulFunctionCall","src":"775:32:29"},"nativeSrc":"772:52:29","nodeType":"YulIf","src":"772:52:29"},{"nativeSrc":"833:39:29","nodeType":"YulAssignment","src":"833:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"862:9:29","nodeType":"YulIdentifier","src":"862:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"843:18:29","nodeType":"YulIdentifier","src":"843:18:29"},"nativeSrc":"843:29:29","nodeType":"YulFunctionCall","src":"843:29:29"},"variableNames":[{"name":"value0","nativeSrc":"833:6:29","nodeType":"YulIdentifier","src":"833:6:29"}]},{"nativeSrc":"881:42:29","nodeType":"YulAssignment","src":"881:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"908:9:29","nodeType":"YulIdentifier","src":"908:9:29"},{"kind":"number","nativeSrc":"919:2:29","nodeType":"YulLiteral","src":"919:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"904:3:29","nodeType":"YulIdentifier","src":"904:3:29"},"nativeSrc":"904:18:29","nodeType":"YulFunctionCall","src":"904:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"891:12:29","nodeType":"YulIdentifier","src":"891:12:29"},"nativeSrc":"891:32:29","nodeType":"YulFunctionCall","src":"891:32:29"},"variableNames":[{"name":"value1","nativeSrc":"881:6:29","nodeType":"YulIdentifier","src":"881:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"675:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"720:9:29","nodeType":"YulTypedName","src":"720:9:29","type":""},{"name":"dataEnd","nativeSrc":"731:7:29","nodeType":"YulTypedName","src":"731:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"743:6:29","nodeType":"YulTypedName","src":"743:6:29","type":""},{"name":"value1","nativeSrc":"751:6:29","nodeType":"YulTypedName","src":"751:6:29","type":""}],"src":"675:254:29"},{"body":{"nativeSrc":"1038:224:29","nodeType":"YulBlock","src":"1038:224:29","statements":[{"body":{"nativeSrc":"1084:16:29","nodeType":"YulBlock","src":"1084:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:29","nodeType":"YulLiteral","src":"1093:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:1:29","nodeType":"YulLiteral","src":"1096:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1086:6:29","nodeType":"YulIdentifier","src":"1086:6:29"},"nativeSrc":"1086:12:29","nodeType":"YulFunctionCall","src":"1086:12:29"},"nativeSrc":"1086:12:29","nodeType":"YulExpressionStatement","src":"1086:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1059:7:29","nodeType":"YulIdentifier","src":"1059:7:29"},{"name":"headStart","nativeSrc":"1068:9:29","nodeType":"YulIdentifier","src":"1068:9:29"}],"functionName":{"name":"sub","nativeSrc":"1055:3:29","nodeType":"YulIdentifier","src":"1055:3:29"},"nativeSrc":"1055:23:29","nodeType":"YulFunctionCall","src":"1055:23:29"},{"kind":"number","nativeSrc":"1080:2:29","nodeType":"YulLiteral","src":"1080:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1051:3:29","nodeType":"YulIdentifier","src":"1051:3:29"},"nativeSrc":"1051:32:29","nodeType":"YulFunctionCall","src":"1051:32:29"},"nativeSrc":"1048:52:29","nodeType":"YulIf","src":"1048:52:29"},{"nativeSrc":"1109:39:29","nodeType":"YulAssignment","src":"1109:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1138:9:29","nodeType":"YulIdentifier","src":"1138:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1119:18:29","nodeType":"YulIdentifier","src":"1119:18:29"},"nativeSrc":"1119:29:29","nodeType":"YulFunctionCall","src":"1119:29:29"},"variableNames":[{"name":"value0","nativeSrc":"1109:6:29","nodeType":"YulIdentifier","src":"1109:6:29"}]},{"nativeSrc":"1157:48:29","nodeType":"YulAssignment","src":"1157:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1190:9:29","nodeType":"YulIdentifier","src":"1190:9:29"},{"kind":"number","nativeSrc":"1201:2:29","nodeType":"YulLiteral","src":"1201:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1186:3:29","nodeType":"YulIdentifier","src":"1186:3:29"},"nativeSrc":"1186:18:29","nodeType":"YulFunctionCall","src":"1186:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1167:18:29","nodeType":"YulIdentifier","src":"1167:18:29"},"nativeSrc":"1167:38:29","nodeType":"YulFunctionCall","src":"1167:38:29"},"variableNames":[{"name":"value1","nativeSrc":"1157:6:29","nodeType":"YulIdentifier","src":"1157:6:29"}]},{"nativeSrc":"1214:42:29","nodeType":"YulAssignment","src":"1214:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1241:9:29","nodeType":"YulIdentifier","src":"1241:9:29"},{"kind":"number","nativeSrc":"1252:2:29","nodeType":"YulLiteral","src":"1252:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1237:3:29","nodeType":"YulIdentifier","src":"1237:3:29"},"nativeSrc":"1237:18:29","nodeType":"YulFunctionCall","src":"1237:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1224:12:29","nodeType":"YulIdentifier","src":"1224:12:29"},"nativeSrc":"1224:32:29","nodeType":"YulFunctionCall","src":"1224:32:29"},"variableNames":[{"name":"value2","nativeSrc":"1214:6:29","nodeType":"YulIdentifier","src":"1214:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"934:328:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"988:9:29","nodeType":"YulTypedName","src":"988:9:29","type":""},{"name":"dataEnd","nativeSrc":"999:7:29","nodeType":"YulTypedName","src":"999:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1011:6:29","nodeType":"YulTypedName","src":"1011:6:29","type":""},{"name":"value1","nativeSrc":"1019:6:29","nodeType":"YulTypedName","src":"1019:6:29","type":""},{"name":"value2","nativeSrc":"1027:6:29","nodeType":"YulTypedName","src":"1027:6:29","type":""}],"src":"934:328:29"},{"body":{"nativeSrc":"1337:110:29","nodeType":"YulBlock","src":"1337:110:29","statements":[{"body":{"nativeSrc":"1383:16:29","nodeType":"YulBlock","src":"1383:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1392:1:29","nodeType":"YulLiteral","src":"1392:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1395:1:29","nodeType":"YulLiteral","src":"1395:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1385:6:29","nodeType":"YulIdentifier","src":"1385:6:29"},"nativeSrc":"1385:12:29","nodeType":"YulFunctionCall","src":"1385:12:29"},"nativeSrc":"1385:12:29","nodeType":"YulExpressionStatement","src":"1385:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1358:7:29","nodeType":"YulIdentifier","src":"1358:7:29"},{"name":"headStart","nativeSrc":"1367:9:29","nodeType":"YulIdentifier","src":"1367:9:29"}],"functionName":{"name":"sub","nativeSrc":"1354:3:29","nodeType":"YulIdentifier","src":"1354:3:29"},"nativeSrc":"1354:23:29","nodeType":"YulFunctionCall","src":"1354:23:29"},{"kind":"number","nativeSrc":"1379:2:29","nodeType":"YulLiteral","src":"1379:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1350:3:29","nodeType":"YulIdentifier","src":"1350:3:29"},"nativeSrc":"1350:32:29","nodeType":"YulFunctionCall","src":"1350:32:29"},"nativeSrc":"1347:52:29","nodeType":"YulIf","src":"1347:52:29"},{"nativeSrc":"1408:33:29","nodeType":"YulAssignment","src":"1408:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1431:9:29","nodeType":"YulIdentifier","src":"1431:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"1418:12:29","nodeType":"YulIdentifier","src":"1418:12:29"},"nativeSrc":"1418:23:29","nodeType":"YulFunctionCall","src":"1418:23:29"},"variableNames":[{"name":"value0","nativeSrc":"1408:6:29","nodeType":"YulIdentifier","src":"1408:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"1267:180:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1303:9:29","nodeType":"YulTypedName","src":"1303:9:29","type":""},{"name":"dataEnd","nativeSrc":"1314:7:29","nodeType":"YulTypedName","src":"1314:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1326:6:29","nodeType":"YulTypedName","src":"1326:6:29","type":""}],"src":"1267:180:29"},{"body":{"nativeSrc":"1553:76:29","nodeType":"YulBlock","src":"1553:76:29","statements":[{"nativeSrc":"1563:26:29","nodeType":"YulAssignment","src":"1563:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1575:9:29","nodeType":"YulIdentifier","src":"1575:9:29"},{"kind":"number","nativeSrc":"1586:2:29","nodeType":"YulLiteral","src":"1586:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1571:3:29","nodeType":"YulIdentifier","src":"1571:3:29"},"nativeSrc":"1571:18:29","nodeType":"YulFunctionCall","src":"1571:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1563:4:29","nodeType":"YulIdentifier","src":"1563:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1605:9:29","nodeType":"YulIdentifier","src":"1605:9:29"},{"name":"value0","nativeSrc":"1616:6:29","nodeType":"YulIdentifier","src":"1616:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:29","nodeType":"YulIdentifier","src":"1598:6:29"},"nativeSrc":"1598:25:29","nodeType":"YulFunctionCall","src":"1598:25:29"},"nativeSrc":"1598:25:29","nodeType":"YulExpressionStatement","src":"1598:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1452:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1522:9:29","nodeType":"YulTypedName","src":"1522:9:29","type":""},{"name":"value0","nativeSrc":"1533:6:29","nodeType":"YulTypedName","src":"1533:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1544:4:29","nodeType":"YulTypedName","src":"1544:4:29","type":""}],"src":"1452:177:29"},{"body":{"nativeSrc":"1774:662:29","nodeType":"YulBlock","src":"1774:662:29","statements":[{"body":{"nativeSrc":"1821:16:29","nodeType":"YulBlock","src":"1821:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1830:1:29","nodeType":"YulLiteral","src":"1830:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1833:1:29","nodeType":"YulLiteral","src":"1833:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1823:6:29","nodeType":"YulIdentifier","src":"1823:6:29"},"nativeSrc":"1823:12:29","nodeType":"YulFunctionCall","src":"1823:12:29"},"nativeSrc":"1823:12:29","nodeType":"YulExpressionStatement","src":"1823:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1795:7:29","nodeType":"YulIdentifier","src":"1795:7:29"},{"name":"headStart","nativeSrc":"1804:9:29","nodeType":"YulIdentifier","src":"1804:9:29"}],"functionName":{"name":"sub","nativeSrc":"1791:3:29","nodeType":"YulIdentifier","src":"1791:3:29"},"nativeSrc":"1791:23:29","nodeType":"YulFunctionCall","src":"1791:23:29"},{"kind":"number","nativeSrc":"1816:3:29","nodeType":"YulLiteral","src":"1816:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1787:3:29","nodeType":"YulIdentifier","src":"1787:3:29"},"nativeSrc":"1787:33:29","nodeType":"YulFunctionCall","src":"1787:33:29"},"nativeSrc":"1784:53:29","nodeType":"YulIf","src":"1784:53:29"},{"nativeSrc":"1846:39:29","nodeType":"YulAssignment","src":"1846:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1875:9:29","nodeType":"YulIdentifier","src":"1875:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1856:18:29","nodeType":"YulIdentifier","src":"1856:18:29"},"nativeSrc":"1856:29:29","nodeType":"YulFunctionCall","src":"1856:29:29"},"variableNames":[{"name":"value0","nativeSrc":"1846:6:29","nodeType":"YulIdentifier","src":"1846:6:29"}]},{"nativeSrc":"1894:42:29","nodeType":"YulAssignment","src":"1894:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1921:9:29","nodeType":"YulIdentifier","src":"1921:9:29"},{"kind":"number","nativeSrc":"1932:2:29","nodeType":"YulLiteral","src":"1932:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:29","nodeType":"YulIdentifier","src":"1917:3:29"},"nativeSrc":"1917:18:29","nodeType":"YulFunctionCall","src":"1917:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1904:12:29","nodeType":"YulIdentifier","src":"1904:12:29"},"nativeSrc":"1904:32:29","nodeType":"YulFunctionCall","src":"1904:32:29"},"variableNames":[{"name":"value1","nativeSrc":"1894:6:29","nodeType":"YulIdentifier","src":"1894:6:29"}]},{"nativeSrc":"1945:42:29","nodeType":"YulAssignment","src":"1945:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1972:9:29","nodeType":"YulIdentifier","src":"1972:9:29"},{"kind":"number","nativeSrc":"1983:2:29","nodeType":"YulLiteral","src":"1983:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1968:3:29","nodeType":"YulIdentifier","src":"1968:3:29"},"nativeSrc":"1968:18:29","nodeType":"YulFunctionCall","src":"1968:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1955:12:29","nodeType":"YulIdentifier","src":"1955:12:29"},"nativeSrc":"1955:32:29","nodeType":"YulFunctionCall","src":"1955:32:29"},"variableNames":[{"name":"value2","nativeSrc":"1945:6:29","nodeType":"YulIdentifier","src":"1945:6:29"}]},{"nativeSrc":"1996:46:29","nodeType":"YulVariableDeclaration","src":"1996:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2027:9:29","nodeType":"YulIdentifier","src":"2027:9:29"},{"kind":"number","nativeSrc":"2038:2:29","nodeType":"YulLiteral","src":"2038:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2023:3:29","nodeType":"YulIdentifier","src":"2023:3:29"},"nativeSrc":"2023:18:29","nodeType":"YulFunctionCall","src":"2023:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"2010:12:29","nodeType":"YulIdentifier","src":"2010:12:29"},"nativeSrc":"2010:32:29","nodeType":"YulFunctionCall","src":"2010:32:29"},"variables":[{"name":"offset","nativeSrc":"2000:6:29","nodeType":"YulTypedName","src":"2000:6:29","type":""}]},{"nativeSrc":"2051:28:29","nodeType":"YulVariableDeclaration","src":"2051:28:29","value":{"kind":"number","nativeSrc":"2061:18:29","nodeType":"YulLiteral","src":"2061:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2055:2:29","nodeType":"YulTypedName","src":"2055:2:29","type":""}]},{"body":{"nativeSrc":"2106:16:29","nodeType":"YulBlock","src":"2106:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2115:1:29","nodeType":"YulLiteral","src":"2115:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2118:1:29","nodeType":"YulLiteral","src":"2118:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2108:6:29","nodeType":"YulIdentifier","src":"2108:6:29"},"nativeSrc":"2108:12:29","nodeType":"YulFunctionCall","src":"2108:12:29"},"nativeSrc":"2108:12:29","nodeType":"YulExpressionStatement","src":"2108:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2094:6:29","nodeType":"YulIdentifier","src":"2094:6:29"},{"name":"_1","nativeSrc":"2102:2:29","nodeType":"YulIdentifier","src":"2102:2:29"}],"functionName":{"name":"gt","nativeSrc":"2091:2:29","nodeType":"YulIdentifier","src":"2091:2:29"},"nativeSrc":"2091:14:29","nodeType":"YulFunctionCall","src":"2091:14:29"},"nativeSrc":"2088:34:29","nodeType":"YulIf","src":"2088:34:29"},{"nativeSrc":"2131:32:29","nodeType":"YulVariableDeclaration","src":"2131:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2145:9:29","nodeType":"YulIdentifier","src":"2145:9:29"},{"name":"offset","nativeSrc":"2156:6:29","nodeType":"YulIdentifier","src":"2156:6:29"}],"functionName":{"name":"add","nativeSrc":"2141:3:29","nodeType":"YulIdentifier","src":"2141:3:29"},"nativeSrc":"2141:22:29","nodeType":"YulFunctionCall","src":"2141:22:29"},"variables":[{"name":"_2","nativeSrc":"2135:2:29","nodeType":"YulTypedName","src":"2135:2:29","type":""}]},{"body":{"nativeSrc":"2211:16:29","nodeType":"YulBlock","src":"2211:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2220:1:29","nodeType":"YulLiteral","src":"2220:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2223:1:29","nodeType":"YulLiteral","src":"2223:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2213:6:29","nodeType":"YulIdentifier","src":"2213:6:29"},"nativeSrc":"2213:12:29","nodeType":"YulFunctionCall","src":"2213:12:29"},"nativeSrc":"2213:12:29","nodeType":"YulExpressionStatement","src":"2213:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2190:2:29","nodeType":"YulIdentifier","src":"2190:2:29"},{"kind":"number","nativeSrc":"2194:4:29","nodeType":"YulLiteral","src":"2194:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2186:3:29","nodeType":"YulIdentifier","src":"2186:3:29"},"nativeSrc":"2186:13:29","nodeType":"YulFunctionCall","src":"2186:13:29"},{"name":"dataEnd","nativeSrc":"2201:7:29","nodeType":"YulIdentifier","src":"2201:7:29"}],"functionName":{"name":"slt","nativeSrc":"2182:3:29","nodeType":"YulIdentifier","src":"2182:3:29"},"nativeSrc":"2182:27:29","nodeType":"YulFunctionCall","src":"2182:27:29"}],"functionName":{"name":"iszero","nativeSrc":"2175:6:29","nodeType":"YulIdentifier","src":"2175:6:29"},"nativeSrc":"2175:35:29","nodeType":"YulFunctionCall","src":"2175:35:29"},"nativeSrc":"2172:55:29","nodeType":"YulIf","src":"2172:55:29"},{"nativeSrc":"2236:30:29","nodeType":"YulVariableDeclaration","src":"2236:30:29","value":{"arguments":[{"name":"_2","nativeSrc":"2263:2:29","nodeType":"YulIdentifier","src":"2263:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"2250:12:29","nodeType":"YulIdentifier","src":"2250:12:29"},"nativeSrc":"2250:16:29","nodeType":"YulFunctionCall","src":"2250:16:29"},"variables":[{"name":"length","nativeSrc":"2240:6:29","nodeType":"YulTypedName","src":"2240:6:29","type":""}]},{"body":{"nativeSrc":"2293:16:29","nodeType":"YulBlock","src":"2293:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2302:1:29","nodeType":"YulLiteral","src":"2302:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2305:1:29","nodeType":"YulLiteral","src":"2305:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2295:6:29","nodeType":"YulIdentifier","src":"2295:6:29"},"nativeSrc":"2295:12:29","nodeType":"YulFunctionCall","src":"2295:12:29"},"nativeSrc":"2295:12:29","nodeType":"YulExpressionStatement","src":"2295:12:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2281:6:29","nodeType":"YulIdentifier","src":"2281:6:29"},{"name":"_1","nativeSrc":"2289:2:29","nodeType":"YulIdentifier","src":"2289:2:29"}],"functionName":{"name":"gt","nativeSrc":"2278:2:29","nodeType":"YulIdentifier","src":"2278:2:29"},"nativeSrc":"2278:14:29","nodeType":"YulFunctionCall","src":"2278:14:29"},"nativeSrc":"2275:34:29","nodeType":"YulIf","src":"2275:34:29"},{"body":{"nativeSrc":"2359:16:29","nodeType":"YulBlock","src":"2359:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2368:1:29","nodeType":"YulLiteral","src":"2368:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2371:1:29","nodeType":"YulLiteral","src":"2371:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2361:6:29","nodeType":"YulIdentifier","src":"2361:6:29"},"nativeSrc":"2361:12:29","nodeType":"YulFunctionCall","src":"2361:12:29"},"nativeSrc":"2361:12:29","nodeType":"YulExpressionStatement","src":"2361:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2332:2:29","nodeType":"YulIdentifier","src":"2332:2:29"},{"name":"length","nativeSrc":"2336:6:29","nodeType":"YulIdentifier","src":"2336:6:29"}],"functionName":{"name":"add","nativeSrc":"2328:3:29","nodeType":"YulIdentifier","src":"2328:3:29"},"nativeSrc":"2328:15:29","nodeType":"YulFunctionCall","src":"2328:15:29"},{"kind":"number","nativeSrc":"2345:2:29","nodeType":"YulLiteral","src":"2345:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2324:3:29","nodeType":"YulIdentifier","src":"2324:3:29"},"nativeSrc":"2324:24:29","nodeType":"YulFunctionCall","src":"2324:24:29"},{"name":"dataEnd","nativeSrc":"2350:7:29","nodeType":"YulIdentifier","src":"2350:7:29"}],"functionName":{"name":"gt","nativeSrc":"2321:2:29","nodeType":"YulIdentifier","src":"2321:2:29"},"nativeSrc":"2321:37:29","nodeType":"YulFunctionCall","src":"2321:37:29"},"nativeSrc":"2318:57:29","nodeType":"YulIf","src":"2318:57:29"},{"nativeSrc":"2384:21:29","nodeType":"YulAssignment","src":"2384:21:29","value":{"arguments":[{"name":"_2","nativeSrc":"2398:2:29","nodeType":"YulIdentifier","src":"2398:2:29"},{"kind":"number","nativeSrc":"2402:2:29","nodeType":"YulLiteral","src":"2402:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2394:3:29","nodeType":"YulIdentifier","src":"2394:3:29"},"nativeSrc":"2394:11:29","nodeType":"YulFunctionCall","src":"2394:11:29"},"variableNames":[{"name":"value3","nativeSrc":"2384:6:29","nodeType":"YulIdentifier","src":"2384:6:29"}]},{"nativeSrc":"2414:16:29","nodeType":"YulAssignment","src":"2414:16:29","value":{"name":"length","nativeSrc":"2424:6:29","nodeType":"YulIdentifier","src":"2424:6:29"},"variableNames":[{"name":"value4","nativeSrc":"2414:6:29","nodeType":"YulIdentifier","src":"2414:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_calldata_ptr","nativeSrc":"1634:802:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1708:9:29","nodeType":"YulTypedName","src":"1708:9:29","type":""},{"name":"dataEnd","nativeSrc":"1719:7:29","nodeType":"YulTypedName","src":"1719:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1731:6:29","nodeType":"YulTypedName","src":"1731:6:29","type":""},{"name":"value1","nativeSrc":"1739:6:29","nodeType":"YulTypedName","src":"1739:6:29","type":""},{"name":"value2","nativeSrc":"1747:6:29","nodeType":"YulTypedName","src":"1747:6:29","type":""},{"name":"value3","nativeSrc":"1755:6:29","nodeType":"YulTypedName","src":"1755:6:29","type":""},{"name":"value4","nativeSrc":"1763:6:29","nodeType":"YulTypedName","src":"1763:6:29","type":""}],"src":"1634:802:29"},{"body":{"nativeSrc":"2528:167:29","nodeType":"YulBlock","src":"2528:167:29","statements":[{"body":{"nativeSrc":"2574:16:29","nodeType":"YulBlock","src":"2574:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2583:1:29","nodeType":"YulLiteral","src":"2583:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2586:1:29","nodeType":"YulLiteral","src":"2586:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2576:6:29","nodeType":"YulIdentifier","src":"2576:6:29"},"nativeSrc":"2576:12:29","nodeType":"YulFunctionCall","src":"2576:12:29"},"nativeSrc":"2576:12:29","nodeType":"YulExpressionStatement","src":"2576:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2549:7:29","nodeType":"YulIdentifier","src":"2549:7:29"},{"name":"headStart","nativeSrc":"2558:9:29","nodeType":"YulIdentifier","src":"2558:9:29"}],"functionName":{"name":"sub","nativeSrc":"2545:3:29","nodeType":"YulIdentifier","src":"2545:3:29"},"nativeSrc":"2545:23:29","nodeType":"YulFunctionCall","src":"2545:23:29"},{"kind":"number","nativeSrc":"2570:2:29","nodeType":"YulLiteral","src":"2570:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2541:3:29","nodeType":"YulIdentifier","src":"2541:3:29"},"nativeSrc":"2541:32:29","nodeType":"YulFunctionCall","src":"2541:32:29"},"nativeSrc":"2538:52:29","nodeType":"YulIf","src":"2538:52:29"},{"nativeSrc":"2599:33:29","nodeType":"YulAssignment","src":"2599:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2622:9:29","nodeType":"YulIdentifier","src":"2622:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2609:12:29","nodeType":"YulIdentifier","src":"2609:12:29"},"nativeSrc":"2609:23:29","nodeType":"YulFunctionCall","src":"2609:23:29"},"variableNames":[{"name":"value0","nativeSrc":"2599:6:29","nodeType":"YulIdentifier","src":"2599:6:29"}]},{"nativeSrc":"2641:48:29","nodeType":"YulAssignment","src":"2641:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2674:9:29","nodeType":"YulIdentifier","src":"2674:9:29"},{"kind":"number","nativeSrc":"2685:2:29","nodeType":"YulLiteral","src":"2685:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2670:3:29","nodeType":"YulIdentifier","src":"2670:3:29"},"nativeSrc":"2670:18:29","nodeType":"YulFunctionCall","src":"2670:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2651:18:29","nodeType":"YulIdentifier","src":"2651:18:29"},"nativeSrc":"2651:38:29","nodeType":"YulFunctionCall","src":"2651:38:29"},"variableNames":[{"name":"value1","nativeSrc":"2641:6:29","nodeType":"YulIdentifier","src":"2641:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2441:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2486:9:29","nodeType":"YulTypedName","src":"2486:9:29","type":""},{"name":"dataEnd","nativeSrc":"2497:7:29","nodeType":"YulTypedName","src":"2497:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2509:6:29","nodeType":"YulTypedName","src":"2509:6:29","type":""},{"name":"value1","nativeSrc":"2517:6:29","nodeType":"YulTypedName","src":"2517:6:29","type":""}],"src":"2441:254:29"},{"body":{"nativeSrc":"2801:102:29","nodeType":"YulBlock","src":"2801:102:29","statements":[{"nativeSrc":"2811:26:29","nodeType":"YulAssignment","src":"2811:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2823:9:29","nodeType":"YulIdentifier","src":"2823:9:29"},{"kind":"number","nativeSrc":"2834:2:29","nodeType":"YulLiteral","src":"2834:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2819:3:29","nodeType":"YulIdentifier","src":"2819:3:29"},"nativeSrc":"2819:18:29","nodeType":"YulFunctionCall","src":"2819:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2811:4:29","nodeType":"YulIdentifier","src":"2811:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2853:9:29","nodeType":"YulIdentifier","src":"2853:9:29"},{"arguments":[{"name":"value0","nativeSrc":"2868:6:29","nodeType":"YulIdentifier","src":"2868:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2884:3:29","nodeType":"YulLiteral","src":"2884:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"2889:1:29","nodeType":"YulLiteral","src":"2889:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2880:3:29","nodeType":"YulIdentifier","src":"2880:3:29"},"nativeSrc":"2880:11:29","nodeType":"YulFunctionCall","src":"2880:11:29"},{"kind":"number","nativeSrc":"2893:1:29","nodeType":"YulLiteral","src":"2893:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2876:3:29","nodeType":"YulIdentifier","src":"2876:3:29"},"nativeSrc":"2876:19:29","nodeType":"YulFunctionCall","src":"2876:19:29"}],"functionName":{"name":"and","nativeSrc":"2864:3:29","nodeType":"YulIdentifier","src":"2864:3:29"},"nativeSrc":"2864:32:29","nodeType":"YulFunctionCall","src":"2864:32:29"}],"functionName":{"name":"mstore","nativeSrc":"2846:6:29","nodeType":"YulIdentifier","src":"2846:6:29"},"nativeSrc":"2846:51:29","nodeType":"YulFunctionCall","src":"2846:51:29"},"nativeSrc":"2846:51:29","nodeType":"YulExpressionStatement","src":"2846:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2700:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2770:9:29","nodeType":"YulTypedName","src":"2770:9:29","type":""},{"name":"value0","nativeSrc":"2781:6:29","nodeType":"YulTypedName","src":"2781:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2792:4:29","nodeType":"YulTypedName","src":"2792:4:29","type":""}],"src":"2700:203:29"},{"body":{"nativeSrc":"3009:76:29","nodeType":"YulBlock","src":"3009:76:29","statements":[{"nativeSrc":"3019:26:29","nodeType":"YulAssignment","src":"3019:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3031:9:29","nodeType":"YulIdentifier","src":"3031:9:29"},{"kind":"number","nativeSrc":"3042:2:29","nodeType":"YulLiteral","src":"3042:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3027:3:29","nodeType":"YulIdentifier","src":"3027:3:29"},"nativeSrc":"3027:18:29","nodeType":"YulFunctionCall","src":"3027:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3019:4:29","nodeType":"YulIdentifier","src":"3019:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3061:9:29","nodeType":"YulIdentifier","src":"3061:9:29"},{"name":"value0","nativeSrc":"3072:6:29","nodeType":"YulIdentifier","src":"3072:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3054:6:29","nodeType":"YulIdentifier","src":"3054:6:29"},"nativeSrc":"3054:25:29","nodeType":"YulFunctionCall","src":"3054:25:29"},"nativeSrc":"3054:25:29","nodeType":"YulExpressionStatement","src":"3054:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2908:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2978:9:29","nodeType":"YulTypedName","src":"2978:9:29","type":""},{"name":"value0","nativeSrc":"2989:6:29","nodeType":"YulTypedName","src":"2989:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3000:4:29","nodeType":"YulTypedName","src":"3000:4:29","type":""}],"src":"2908:177:29"},{"body":{"nativeSrc":"3177:173:29","nodeType":"YulBlock","src":"3177:173:29","statements":[{"body":{"nativeSrc":"3223:16:29","nodeType":"YulBlock","src":"3223:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3232:1:29","nodeType":"YulLiteral","src":"3232:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3235:1:29","nodeType":"YulLiteral","src":"3235:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3225:6:29","nodeType":"YulIdentifier","src":"3225:6:29"},"nativeSrc":"3225:12:29","nodeType":"YulFunctionCall","src":"3225:12:29"},"nativeSrc":"3225:12:29","nodeType":"YulExpressionStatement","src":"3225:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3198:7:29","nodeType":"YulIdentifier","src":"3198:7:29"},{"name":"headStart","nativeSrc":"3207:9:29","nodeType":"YulIdentifier","src":"3207:9:29"}],"functionName":{"name":"sub","nativeSrc":"3194:3:29","nodeType":"YulIdentifier","src":"3194:3:29"},"nativeSrc":"3194:23:29","nodeType":"YulFunctionCall","src":"3194:23:29"},{"kind":"number","nativeSrc":"3219:2:29","nodeType":"YulLiteral","src":"3219:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3190:3:29","nodeType":"YulIdentifier","src":"3190:3:29"},"nativeSrc":"3190:32:29","nodeType":"YulFunctionCall","src":"3190:32:29"},"nativeSrc":"3187:52:29","nodeType":"YulIf","src":"3187:52:29"},{"nativeSrc":"3248:39:29","nodeType":"YulAssignment","src":"3248:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3277:9:29","nodeType":"YulIdentifier","src":"3277:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3258:18:29","nodeType":"YulIdentifier","src":"3258:18:29"},"nativeSrc":"3258:29:29","nodeType":"YulFunctionCall","src":"3258:29:29"},"variableNames":[{"name":"value0","nativeSrc":"3248:6:29","nodeType":"YulIdentifier","src":"3248:6:29"}]},{"nativeSrc":"3296:48:29","nodeType":"YulAssignment","src":"3296:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3329:9:29","nodeType":"YulIdentifier","src":"3329:9:29"},{"kind":"number","nativeSrc":"3340:2:29","nodeType":"YulLiteral","src":"3340:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3325:3:29","nodeType":"YulIdentifier","src":"3325:3:29"},"nativeSrc":"3325:18:29","nodeType":"YulFunctionCall","src":"3325:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3306:18:29","nodeType":"YulIdentifier","src":"3306:18:29"},"nativeSrc":"3306:38:29","nodeType":"YulFunctionCall","src":"3306:38:29"},"variableNames":[{"name":"value1","nativeSrc":"3296:6:29","nodeType":"YulIdentifier","src":"3296:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"3090:260:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3135:9:29","nodeType":"YulTypedName","src":"3135:9:29","type":""},{"name":"dataEnd","nativeSrc":"3146:7:29","nodeType":"YulTypedName","src":"3146:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3158:6:29","nodeType":"YulTypedName","src":"3158:6:29","type":""},{"name":"value1","nativeSrc":"3166:6:29","nodeType":"YulTypedName","src":"3166:6:29","type":""}],"src":"3090:260:29"},{"body":{"nativeSrc":"3425:116:29","nodeType":"YulBlock","src":"3425:116:29","statements":[{"body":{"nativeSrc":"3471:16:29","nodeType":"YulBlock","src":"3471:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3480:1:29","nodeType":"YulLiteral","src":"3480:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3483:1:29","nodeType":"YulLiteral","src":"3483:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3473:6:29","nodeType":"YulIdentifier","src":"3473:6:29"},"nativeSrc":"3473:12:29","nodeType":"YulFunctionCall","src":"3473:12:29"},"nativeSrc":"3473:12:29","nodeType":"YulExpressionStatement","src":"3473:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3446:7:29","nodeType":"YulIdentifier","src":"3446:7:29"},{"name":"headStart","nativeSrc":"3455:9:29","nodeType":"YulIdentifier","src":"3455:9:29"}],"functionName":{"name":"sub","nativeSrc":"3442:3:29","nodeType":"YulIdentifier","src":"3442:3:29"},"nativeSrc":"3442:23:29","nodeType":"YulFunctionCall","src":"3442:23:29"},{"kind":"number","nativeSrc":"3467:2:29","nodeType":"YulLiteral","src":"3467:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3438:3:29","nodeType":"YulIdentifier","src":"3438:3:29"},"nativeSrc":"3438:32:29","nodeType":"YulFunctionCall","src":"3438:32:29"},"nativeSrc":"3435:52:29","nodeType":"YulIf","src":"3435:52:29"},{"nativeSrc":"3496:39:29","nodeType":"YulAssignment","src":"3496:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3525:9:29","nodeType":"YulIdentifier","src":"3525:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3506:18:29","nodeType":"YulIdentifier","src":"3506:18:29"},"nativeSrc":"3506:29:29","nodeType":"YulFunctionCall","src":"3506:29:29"},"variableNames":[{"name":"value0","nativeSrc":"3496:6:29","nodeType":"YulIdentifier","src":"3496:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3355:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3391:9:29","nodeType":"YulTypedName","src":"3391:9:29","type":""},{"name":"dataEnd","nativeSrc":"3402:7:29","nodeType":"YulTypedName","src":"3402:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3414:6:29","nodeType":"YulTypedName","src":"3414:6:29","type":""}],"src":"3355:186:29"},{"body":{"nativeSrc":"3675:145:29","nodeType":"YulBlock","src":"3675:145:29","statements":[{"nativeSrc":"3685:26:29","nodeType":"YulAssignment","src":"3685:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3697:9:29","nodeType":"YulIdentifier","src":"3697:9:29"},{"kind":"number","nativeSrc":"3708:2:29","nodeType":"YulLiteral","src":"3708:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3693:3:29","nodeType":"YulIdentifier","src":"3693:3:29"},"nativeSrc":"3693:18:29","nodeType":"YulFunctionCall","src":"3693:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3685:4:29","nodeType":"YulIdentifier","src":"3685:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3727:9:29","nodeType":"YulIdentifier","src":"3727:9:29"},{"arguments":[{"name":"value0","nativeSrc":"3742:6:29","nodeType":"YulIdentifier","src":"3742:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3758:3:29","nodeType":"YulLiteral","src":"3758:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"3763:1:29","nodeType":"YulLiteral","src":"3763:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3754:3:29","nodeType":"YulIdentifier","src":"3754:3:29"},"nativeSrc":"3754:11:29","nodeType":"YulFunctionCall","src":"3754:11:29"},{"kind":"number","nativeSrc":"3767:1:29","nodeType":"YulLiteral","src":"3767:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3750:3:29","nodeType":"YulIdentifier","src":"3750:3:29"},"nativeSrc":"3750:19:29","nodeType":"YulFunctionCall","src":"3750:19:29"}],"functionName":{"name":"and","nativeSrc":"3738:3:29","nodeType":"YulIdentifier","src":"3738:3:29"},"nativeSrc":"3738:32:29","nodeType":"YulFunctionCall","src":"3738:32:29"}],"functionName":{"name":"mstore","nativeSrc":"3720:6:29","nodeType":"YulIdentifier","src":"3720:6:29"},"nativeSrc":"3720:51:29","nodeType":"YulFunctionCall","src":"3720:51:29"},"nativeSrc":"3720:51:29","nodeType":"YulExpressionStatement","src":"3720:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3791:9:29","nodeType":"YulIdentifier","src":"3791:9:29"},{"kind":"number","nativeSrc":"3802:2:29","nodeType":"YulLiteral","src":"3802:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3787:3:29","nodeType":"YulIdentifier","src":"3787:3:29"},"nativeSrc":"3787:18:29","nodeType":"YulFunctionCall","src":"3787:18:29"},{"name":"value1","nativeSrc":"3807:6:29","nodeType":"YulIdentifier","src":"3807:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3780:6:29","nodeType":"YulIdentifier","src":"3780:6:29"},"nativeSrc":"3780:34:29","nodeType":"YulFunctionCall","src":"3780:34:29"},"nativeSrc":"3780:34:29","nodeType":"YulExpressionStatement","src":"3780:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"3546:274:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3636:9:29","nodeType":"YulTypedName","src":"3636:9:29","type":""},{"name":"value1","nativeSrc":"3647:6:29","nodeType":"YulTypedName","src":"3647:6:29","type":""},{"name":"value0","nativeSrc":"3655:6:29","nodeType":"YulTypedName","src":"3655:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3666:4:29","nodeType":"YulTypedName","src":"3666:4:29","type":""}],"src":"3546:274:29"},{"body":{"nativeSrc":"3903:199:29","nodeType":"YulBlock","src":"3903:199:29","statements":[{"body":{"nativeSrc":"3949:16:29","nodeType":"YulBlock","src":"3949:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3958:1:29","nodeType":"YulLiteral","src":"3958:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3961:1:29","nodeType":"YulLiteral","src":"3961:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3951:6:29","nodeType":"YulIdentifier","src":"3951:6:29"},"nativeSrc":"3951:12:29","nodeType":"YulFunctionCall","src":"3951:12:29"},"nativeSrc":"3951:12:29","nodeType":"YulExpressionStatement","src":"3951:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3924:7:29","nodeType":"YulIdentifier","src":"3924:7:29"},{"name":"headStart","nativeSrc":"3933:9:29","nodeType":"YulIdentifier","src":"3933:9:29"}],"functionName":{"name":"sub","nativeSrc":"3920:3:29","nodeType":"YulIdentifier","src":"3920:3:29"},"nativeSrc":"3920:23:29","nodeType":"YulFunctionCall","src":"3920:23:29"},{"kind":"number","nativeSrc":"3945:2:29","nodeType":"YulLiteral","src":"3945:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3916:3:29","nodeType":"YulIdentifier","src":"3916:3:29"},"nativeSrc":"3916:32:29","nodeType":"YulFunctionCall","src":"3916:32:29"},"nativeSrc":"3913:52:29","nodeType":"YulIf","src":"3913:52:29"},{"nativeSrc":"3974:29:29","nodeType":"YulVariableDeclaration","src":"3974:29:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3993:9:29","nodeType":"YulIdentifier","src":"3993:9:29"}],"functionName":{"name":"mload","nativeSrc":"3987:5:29","nodeType":"YulIdentifier","src":"3987:5:29"},"nativeSrc":"3987:16:29","nodeType":"YulFunctionCall","src":"3987:16:29"},"variables":[{"name":"value","nativeSrc":"3978:5:29","nodeType":"YulTypedName","src":"3978:5:29","type":""}]},{"body":{"nativeSrc":"4056:16:29","nodeType":"YulBlock","src":"4056:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4065:1:29","nodeType":"YulLiteral","src":"4065:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4068:1:29","nodeType":"YulLiteral","src":"4068:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4058:6:29","nodeType":"YulIdentifier","src":"4058:6:29"},"nativeSrc":"4058:12:29","nodeType":"YulFunctionCall","src":"4058:12:29"},"nativeSrc":"4058:12:29","nodeType":"YulExpressionStatement","src":"4058:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4025:5:29","nodeType":"YulIdentifier","src":"4025:5:29"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4046:5:29","nodeType":"YulIdentifier","src":"4046:5:29"}],"functionName":{"name":"iszero","nativeSrc":"4039:6:29","nodeType":"YulIdentifier","src":"4039:6:29"},"nativeSrc":"4039:13:29","nodeType":"YulFunctionCall","src":"4039:13:29"}],"functionName":{"name":"iszero","nativeSrc":"4032:6:29","nodeType":"YulIdentifier","src":"4032:6:29"},"nativeSrc":"4032:21:29","nodeType":"YulFunctionCall","src":"4032:21:29"}],"functionName":{"name":"eq","nativeSrc":"4022:2:29","nodeType":"YulIdentifier","src":"4022:2:29"},"nativeSrc":"4022:32:29","nodeType":"YulFunctionCall","src":"4022:32:29"}],"functionName":{"name":"iszero","nativeSrc":"4015:6:29","nodeType":"YulIdentifier","src":"4015:6:29"},"nativeSrc":"4015:40:29","nodeType":"YulFunctionCall","src":"4015:40:29"},"nativeSrc":"4012:60:29","nodeType":"YulIf","src":"4012:60:29"},{"nativeSrc":"4081:15:29","nodeType":"YulAssignment","src":"4081:15:29","value":{"name":"value","nativeSrc":"4091:5:29","nodeType":"YulIdentifier","src":"4091:5:29"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:29","nodeType":"YulIdentifier","src":"4081:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3825:277:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3869:9:29","nodeType":"YulTypedName","src":"3869:9:29","type":""},{"name":"dataEnd","nativeSrc":"3880:7:29","nodeType":"YulTypedName","src":"3880:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3892:6:29","nodeType":"YulTypedName","src":"3892:6:29","type":""}],"src":"3825:277:29"},{"body":{"nativeSrc":"4215:101:29","nodeType":"YulBlock","src":"4215:101:29","statements":[{"nativeSrc":"4225:26:29","nodeType":"YulAssignment","src":"4225:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4237:9:29","nodeType":"YulIdentifier","src":"4237:9:29"},{"kind":"number","nativeSrc":"4248:2:29","nodeType":"YulLiteral","src":"4248:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4233:3:29","nodeType":"YulIdentifier","src":"4233:3:29"},"nativeSrc":"4233:18:29","nodeType":"YulFunctionCall","src":"4233:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4225:4:29","nodeType":"YulIdentifier","src":"4225:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4267:9:29","nodeType":"YulIdentifier","src":"4267:9:29"},{"arguments":[{"name":"value0","nativeSrc":"4282:6:29","nodeType":"YulIdentifier","src":"4282:6:29"},{"kind":"number","nativeSrc":"4290:18:29","nodeType":"YulLiteral","src":"4290:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4278:3:29","nodeType":"YulIdentifier","src":"4278:3:29"},"nativeSrc":"4278:31:29","nodeType":"YulFunctionCall","src":"4278:31:29"}],"functionName":{"name":"mstore","nativeSrc":"4260:6:29","nodeType":"YulIdentifier","src":"4260:6:29"},"nativeSrc":"4260:50:29","nodeType":"YulFunctionCall","src":"4260:50:29"},"nativeSrc":"4260:50:29","nodeType":"YulExpressionStatement","src":"4260:50:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"4107:209:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4184:9:29","nodeType":"YulTypedName","src":"4184:9:29","type":""},{"name":"value0","nativeSrc":"4195:6:29","nodeType":"YulTypedName","src":"4195:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4206:4:29","nodeType":"YulTypedName","src":"4206:4:29","type":""}],"src":"4107:209:29"},{"body":{"nativeSrc":"4552:299:29","nodeType":"YulBlock","src":"4552:299:29","statements":[{"nativeSrc":"4562:41:29","nodeType":"YulVariableDeclaration","src":"4562:41:29","value":{"arguments":[{"kind":"number","nativeSrc":"4576:26:29","nodeType":"YulLiteral","src":"4576:26:29","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"4572:3:29","nodeType":"YulIdentifier","src":"4572:3:29"},"nativeSrc":"4572:31:29","nodeType":"YulFunctionCall","src":"4572:31:29"},"variables":[{"name":"_1","nativeSrc":"4566:2:29","nodeType":"YulTypedName","src":"4566:2:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4619:3:29","nodeType":"YulIdentifier","src":"4619:3:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4632:2:29","nodeType":"YulLiteral","src":"4632:2:29","type":"","value":"96"},{"name":"value0","nativeSrc":"4636:6:29","nodeType":"YulIdentifier","src":"4636:6:29"}],"functionName":{"name":"shl","nativeSrc":"4628:3:29","nodeType":"YulIdentifier","src":"4628:3:29"},"nativeSrc":"4628:15:29","nodeType":"YulFunctionCall","src":"4628:15:29"},{"name":"_1","nativeSrc":"4645:2:29","nodeType":"YulIdentifier","src":"4645:2:29"}],"functionName":{"name":"and","nativeSrc":"4624:3:29","nodeType":"YulIdentifier","src":"4624:3:29"},"nativeSrc":"4624:24:29","nodeType":"YulFunctionCall","src":"4624:24:29"}],"functionName":{"name":"mstore","nativeSrc":"4612:6:29","nodeType":"YulIdentifier","src":"4612:6:29"},"nativeSrc":"4612:37:29","nodeType":"YulFunctionCall","src":"4612:37:29"},"nativeSrc":"4612:37:29","nodeType":"YulExpressionStatement","src":"4612:37:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4669:3:29","nodeType":"YulIdentifier","src":"4669:3:29"},{"kind":"number","nativeSrc":"4674:2:29","nodeType":"YulLiteral","src":"4674:2:29","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"4665:3:29","nodeType":"YulIdentifier","src":"4665:3:29"},"nativeSrc":"4665:12:29","nodeType":"YulFunctionCall","src":"4665:12:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4687:2:29","nodeType":"YulLiteral","src":"4687:2:29","type":"","value":"96"},{"name":"value1","nativeSrc":"4691:6:29","nodeType":"YulIdentifier","src":"4691:6:29"}],"functionName":{"name":"shl","nativeSrc":"4683:3:29","nodeType":"YulIdentifier","src":"4683:3:29"},"nativeSrc":"4683:15:29","nodeType":"YulFunctionCall","src":"4683:15:29"},{"name":"_1","nativeSrc":"4700:2:29","nodeType":"YulIdentifier","src":"4700:2:29"}],"functionName":{"name":"and","nativeSrc":"4679:3:29","nodeType":"YulIdentifier","src":"4679:3:29"},"nativeSrc":"4679:24:29","nodeType":"YulFunctionCall","src":"4679:24:29"}],"functionName":{"name":"mstore","nativeSrc":"4658:6:29","nodeType":"YulIdentifier","src":"4658:6:29"},"nativeSrc":"4658:46:29","nodeType":"YulFunctionCall","src":"4658:46:29"},"nativeSrc":"4658:46:29","nodeType":"YulExpressionStatement","src":"4658:46:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4724:3:29","nodeType":"YulIdentifier","src":"4724:3:29"},{"kind":"number","nativeSrc":"4729:2:29","nodeType":"YulLiteral","src":"4729:2:29","type":"","value":"40"}],"functionName":{"name":"add","nativeSrc":"4720:3:29","nodeType":"YulIdentifier","src":"4720:3:29"},"nativeSrc":"4720:12:29","nodeType":"YulFunctionCall","src":"4720:12:29"},{"name":"value2","nativeSrc":"4734:6:29","nodeType":"YulIdentifier","src":"4734:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4713:6:29","nodeType":"YulIdentifier","src":"4713:6:29"},"nativeSrc":"4713:28:29","nodeType":"YulFunctionCall","src":"4713:28:29"},"nativeSrc":"4713:28:29","nodeType":"YulExpressionStatement","src":"4713:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4761:3:29","nodeType":"YulIdentifier","src":"4761:3:29"},{"kind":"number","nativeSrc":"4766:2:29","nodeType":"YulLiteral","src":"4766:2:29","type":"","value":"72"}],"functionName":{"name":"add","nativeSrc":"4757:3:29","nodeType":"YulIdentifier","src":"4757:3:29"},"nativeSrc":"4757:12:29","nodeType":"YulFunctionCall","src":"4757:12:29"},{"name":"value3","nativeSrc":"4771:6:29","nodeType":"YulIdentifier","src":"4771:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4750:6:29","nodeType":"YulIdentifier","src":"4750:6:29"},"nativeSrc":"4750:28:29","nodeType":"YulFunctionCall","src":"4750:28:29"},"nativeSrc":"4750:28:29","nodeType":"YulExpressionStatement","src":"4750:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4798:3:29","nodeType":"YulIdentifier","src":"4798:3:29"},{"kind":"number","nativeSrc":"4803:3:29","nodeType":"YulLiteral","src":"4803:3:29","type":"","value":"104"}],"functionName":{"name":"add","nativeSrc":"4794:3:29","nodeType":"YulIdentifier","src":"4794:3:29"},"nativeSrc":"4794:13:29","nodeType":"YulFunctionCall","src":"4794:13:29"},{"name":"value4","nativeSrc":"4809:6:29","nodeType":"YulIdentifier","src":"4809:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4787:6:29","nodeType":"YulIdentifier","src":"4787:6:29"},"nativeSrc":"4787:29:29","nodeType":"YulFunctionCall","src":"4787:29:29"},"nativeSrc":"4787:29:29","nodeType":"YulExpressionStatement","src":"4787:29:29"},{"nativeSrc":"4825:20:29","nodeType":"YulAssignment","src":"4825:20:29","value":{"arguments":[{"name":"pos","nativeSrc":"4836:3:29","nodeType":"YulIdentifier","src":"4836:3:29"},{"kind":"number","nativeSrc":"4841:3:29","nodeType":"YulLiteral","src":"4841:3:29","type":"","value":"136"}],"functionName":{"name":"add","nativeSrc":"4832:3:29","nodeType":"YulIdentifier","src":"4832:3:29"},"nativeSrc":"4832:13:29","nodeType":"YulFunctionCall","src":"4832:13:29"},"variableNames":[{"name":"end","nativeSrc":"4825:3:29","nodeType":"YulIdentifier","src":"4825:3:29"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"4321:530:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4496:3:29","nodeType":"YulTypedName","src":"4496:3:29","type":""},{"name":"value4","nativeSrc":"4501:6:29","nodeType":"YulTypedName","src":"4501:6:29","type":""},{"name":"value3","nativeSrc":"4509:6:29","nodeType":"YulTypedName","src":"4509:6:29","type":""},{"name":"value2","nativeSrc":"4517:6:29","nodeType":"YulTypedName","src":"4517:6:29","type":""},{"name":"value1","nativeSrc":"4525:6:29","nodeType":"YulTypedName","src":"4525:6:29","type":""},{"name":"value0","nativeSrc":"4533:6:29","nodeType":"YulTypedName","src":"4533:6:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4544:3:29","nodeType":"YulTypedName","src":"4544:3:29","type":""}],"src":"4321:530:29"},{"body":{"nativeSrc":"5007:320:29","nodeType":"YulBlock","src":"5007:320:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5024:9:29","nodeType":"YulIdentifier","src":"5024:9:29"},{"kind":"number","nativeSrc":"5035:2:29","nodeType":"YulLiteral","src":"5035:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"5017:6:29","nodeType":"YulIdentifier","src":"5017:6:29"},"nativeSrc":"5017:21:29","nodeType":"YulFunctionCall","src":"5017:21:29"},"nativeSrc":"5017:21:29","nodeType":"YulExpressionStatement","src":"5017:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5058:9:29","nodeType":"YulIdentifier","src":"5058:9:29"},{"kind":"number","nativeSrc":"5069:2:29","nodeType":"YulLiteral","src":"5069:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5054:3:29","nodeType":"YulIdentifier","src":"5054:3:29"},"nativeSrc":"5054:18:29","nodeType":"YulFunctionCall","src":"5054:18:29"},{"name":"value1","nativeSrc":"5074:6:29","nodeType":"YulIdentifier","src":"5074:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5047:6:29","nodeType":"YulIdentifier","src":"5047:6:29"},"nativeSrc":"5047:34:29","nodeType":"YulFunctionCall","src":"5047:34:29"},"nativeSrc":"5047:34:29","nodeType":"YulExpressionStatement","src":"5047:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5107:9:29","nodeType":"YulIdentifier","src":"5107:9:29"},{"kind":"number","nativeSrc":"5118:2:29","nodeType":"YulLiteral","src":"5118:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5103:3:29","nodeType":"YulIdentifier","src":"5103:3:29"},"nativeSrc":"5103:18:29","nodeType":"YulFunctionCall","src":"5103:18:29"},{"name":"value0","nativeSrc":"5123:6:29","nodeType":"YulIdentifier","src":"5123:6:29"},{"name":"value1","nativeSrc":"5131:6:29","nodeType":"YulIdentifier","src":"5131:6:29"}],"functionName":{"name":"calldatacopy","nativeSrc":"5090:12:29","nodeType":"YulIdentifier","src":"5090:12:29"},"nativeSrc":"5090:48:29","nodeType":"YulFunctionCall","src":"5090:48:29"},"nativeSrc":"5090:48:29","nodeType":"YulExpressionStatement","src":"5090:48:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5162:9:29","nodeType":"YulIdentifier","src":"5162:9:29"},{"name":"value1","nativeSrc":"5173:6:29","nodeType":"YulIdentifier","src":"5173:6:29"}],"functionName":{"name":"add","nativeSrc":"5158:3:29","nodeType":"YulIdentifier","src":"5158:3:29"},"nativeSrc":"5158:22:29","nodeType":"YulFunctionCall","src":"5158:22:29"},{"kind":"number","nativeSrc":"5182:2:29","nodeType":"YulLiteral","src":"5182:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5154:3:29","nodeType":"YulIdentifier","src":"5154:3:29"},"nativeSrc":"5154:31:29","nodeType":"YulFunctionCall","src":"5154:31:29"},{"kind":"number","nativeSrc":"5187:1:29","nodeType":"YulLiteral","src":"5187:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5147:6:29","nodeType":"YulIdentifier","src":"5147:6:29"},"nativeSrc":"5147:42:29","nodeType":"YulFunctionCall","src":"5147:42:29"},"nativeSrc":"5147:42:29","nodeType":"YulExpressionStatement","src":"5147:42:29"},{"nativeSrc":"5198:62:29","nodeType":"YulAssignment","src":"5198:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5214:9:29","nodeType":"YulIdentifier","src":"5214:9:29"},{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"5233:6:29","nodeType":"YulIdentifier","src":"5233:6:29"},{"kind":"number","nativeSrc":"5241:2:29","nodeType":"YulLiteral","src":"5241:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5229:3:29","nodeType":"YulIdentifier","src":"5229:3:29"},"nativeSrc":"5229:15:29","nodeType":"YulFunctionCall","src":"5229:15:29"},{"arguments":[{"kind":"number","nativeSrc":"5250:2:29","nodeType":"YulLiteral","src":"5250:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5246:3:29","nodeType":"YulIdentifier","src":"5246:3:29"},"nativeSrc":"5246:7:29","nodeType":"YulFunctionCall","src":"5246:7:29"}],"functionName":{"name":"and","nativeSrc":"5225:3:29","nodeType":"YulIdentifier","src":"5225:3:29"},"nativeSrc":"5225:29:29","nodeType":"YulFunctionCall","src":"5225:29:29"}],"functionName":{"name":"add","nativeSrc":"5210:3:29","nodeType":"YulIdentifier","src":"5210:3:29"},"nativeSrc":"5210:45:29","nodeType":"YulFunctionCall","src":"5210:45:29"},{"kind":"number","nativeSrc":"5257:2:29","nodeType":"YulLiteral","src":"5257:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5206:3:29","nodeType":"YulIdentifier","src":"5206:3:29"},"nativeSrc":"5206:54:29","nodeType":"YulFunctionCall","src":"5206:54:29"},"variableNames":[{"name":"tail","nativeSrc":"5198:4:29","nodeType":"YulIdentifier","src":"5198:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5280:9:29","nodeType":"YulIdentifier","src":"5280:9:29"},{"kind":"number","nativeSrc":"5291:4:29","nodeType":"YulLiteral","src":"5291:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5276:3:29","nodeType":"YulIdentifier","src":"5276:3:29"},"nativeSrc":"5276:20:29","nodeType":"YulFunctionCall","src":"5276:20:29"},{"arguments":[{"arguments":[{"name":"value2","nativeSrc":"5312:6:29","nodeType":"YulIdentifier","src":"5312:6:29"}],"functionName":{"name":"iszero","nativeSrc":"5305:6:29","nodeType":"YulIdentifier","src":"5305:6:29"},"nativeSrc":"5305:14:29","nodeType":"YulFunctionCall","src":"5305:14:29"}],"functionName":{"name":"iszero","nativeSrc":"5298:6:29","nodeType":"YulIdentifier","src":"5298:6:29"},"nativeSrc":"5298:22:29","nodeType":"YulFunctionCall","src":"5298:22:29"}],"functionName":{"name":"mstore","nativeSrc":"5269:6:29","nodeType":"YulIdentifier","src":"5269:6:29"},"nativeSrc":"5269:52:29","nodeType":"YulFunctionCall","src":"5269:52:29"},"nativeSrc":"5269:52:29","nodeType":"YulExpressionStatement","src":"5269:52:29"}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed","nativeSrc":"4856:471:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4960:9:29","nodeType":"YulTypedName","src":"4960:9:29","type":""},{"name":"value2","nativeSrc":"4971:6:29","nodeType":"YulTypedName","src":"4971:6:29","type":""},{"name":"value1","nativeSrc":"4979:6:29","nodeType":"YulTypedName","src":"4979:6:29","type":""},{"name":"value0","nativeSrc":"4987:6:29","nodeType":"YulTypedName","src":"4987:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4998:4:29","nodeType":"YulTypedName","src":"4998:4:29","type":""}],"src":"4856:471:29"},{"body":{"nativeSrc":"5380:174:29","nodeType":"YulBlock","src":"5380:174:29","statements":[{"nativeSrc":"5390:16:29","nodeType":"YulAssignment","src":"5390:16:29","value":{"arguments":[{"name":"x","nativeSrc":"5401:1:29","nodeType":"YulIdentifier","src":"5401:1:29"},{"name":"y","nativeSrc":"5404:1:29","nodeType":"YulIdentifier","src":"5404:1:29"}],"functionName":{"name":"add","nativeSrc":"5397:3:29","nodeType":"YulIdentifier","src":"5397:3:29"},"nativeSrc":"5397:9:29","nodeType":"YulFunctionCall","src":"5397:9:29"},"variableNames":[{"name":"sum","nativeSrc":"5390:3:29","nodeType":"YulIdentifier","src":"5390:3:29"}]},{"body":{"nativeSrc":"5437:111:29","nodeType":"YulBlock","src":"5437:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5458:1:29","nodeType":"YulLiteral","src":"5458:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5465:3:29","nodeType":"YulLiteral","src":"5465:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"5470:10:29","nodeType":"YulLiteral","src":"5470:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5461:3:29","nodeType":"YulIdentifier","src":"5461:3:29"},"nativeSrc":"5461:20:29","nodeType":"YulFunctionCall","src":"5461:20:29"}],"functionName":{"name":"mstore","nativeSrc":"5451:6:29","nodeType":"YulIdentifier","src":"5451:6:29"},"nativeSrc":"5451:31:29","nodeType":"YulFunctionCall","src":"5451:31:29"},"nativeSrc":"5451:31:29","nodeType":"YulExpressionStatement","src":"5451:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5502:1:29","nodeType":"YulLiteral","src":"5502:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"5505:4:29","nodeType":"YulLiteral","src":"5505:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5495:6:29","nodeType":"YulIdentifier","src":"5495:6:29"},"nativeSrc":"5495:15:29","nodeType":"YulFunctionCall","src":"5495:15:29"},"nativeSrc":"5495:15:29","nodeType":"YulExpressionStatement","src":"5495:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5530:1:29","nodeType":"YulLiteral","src":"5530:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5533:4:29","nodeType":"YulLiteral","src":"5533:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5523:6:29","nodeType":"YulIdentifier","src":"5523:6:29"},"nativeSrc":"5523:15:29","nodeType":"YulFunctionCall","src":"5523:15:29"},"nativeSrc":"5523:15:29","nodeType":"YulExpressionStatement","src":"5523:15:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"5421:1:29","nodeType":"YulIdentifier","src":"5421:1:29"},{"name":"sum","nativeSrc":"5424:3:29","nodeType":"YulIdentifier","src":"5424:3:29"}],"functionName":{"name":"gt","nativeSrc":"5418:2:29","nodeType":"YulIdentifier","src":"5418:2:29"},"nativeSrc":"5418:10:29","nodeType":"YulFunctionCall","src":"5418:10:29"},"nativeSrc":"5415:133:29","nodeType":"YulIf","src":"5415:133:29"}]},"name":"checked_add_t_uint256","nativeSrc":"5332:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5363:1:29","nodeType":"YulTypedName","src":"5363:1:29","type":""},{"name":"y","nativeSrc":"5366:1:29","nodeType":"YulTypedName","src":"5366:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"5372:3:29","nodeType":"YulTypedName","src":"5372:3:29","type":""}],"src":"5332:222:29"},{"body":{"nativeSrc":"5688:119:29","nodeType":"YulBlock","src":"5688:119:29","statements":[{"nativeSrc":"5698:26:29","nodeType":"YulAssignment","src":"5698:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5710:9:29","nodeType":"YulIdentifier","src":"5710:9:29"},{"kind":"number","nativeSrc":"5721:2:29","nodeType":"YulLiteral","src":"5721:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5706:3:29","nodeType":"YulIdentifier","src":"5706:3:29"},"nativeSrc":"5706:18:29","nodeType":"YulFunctionCall","src":"5706:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5698:4:29","nodeType":"YulIdentifier","src":"5698:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5740:9:29","nodeType":"YulIdentifier","src":"5740:9:29"},{"name":"value0","nativeSrc":"5751:6:29","nodeType":"YulIdentifier","src":"5751:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5733:6:29","nodeType":"YulIdentifier","src":"5733:6:29"},"nativeSrc":"5733:25:29","nodeType":"YulFunctionCall","src":"5733:25:29"},"nativeSrc":"5733:25:29","nodeType":"YulExpressionStatement","src":"5733:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5778:9:29","nodeType":"YulIdentifier","src":"5778:9:29"},{"kind":"number","nativeSrc":"5789:2:29","nodeType":"YulLiteral","src":"5789:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5774:3:29","nodeType":"YulIdentifier","src":"5774:3:29"},"nativeSrc":"5774:18:29","nodeType":"YulFunctionCall","src":"5774:18:29"},{"name":"value1","nativeSrc":"5794:6:29","nodeType":"YulIdentifier","src":"5794:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5767:6:29","nodeType":"YulIdentifier","src":"5767:6:29"},"nativeSrc":"5767:34:29","nodeType":"YulFunctionCall","src":"5767:34:29"},"nativeSrc":"5767:34:29","nodeType":"YulExpressionStatement","src":"5767:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5559:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5649:9:29","nodeType":"YulTypedName","src":"5649:9:29","type":""},{"name":"value1","nativeSrc":"5660:6:29","nodeType":"YulTypedName","src":"5660:6:29","type":""},{"name":"value0","nativeSrc":"5668:6:29","nodeType":"YulTypedName","src":"5668:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5679:4:29","nodeType":"YulTypedName","src":"5679:4:29","type":""}],"src":"5559:248:29"},{"body":{"nativeSrc":"5941:145:29","nodeType":"YulBlock","src":"5941:145:29","statements":[{"nativeSrc":"5951:26:29","nodeType":"YulAssignment","src":"5951:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5963:9:29","nodeType":"YulIdentifier","src":"5963:9:29"},{"kind":"number","nativeSrc":"5974:2:29","nodeType":"YulLiteral","src":"5974:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5959:3:29","nodeType":"YulIdentifier","src":"5959:3:29"},"nativeSrc":"5959:18:29","nodeType":"YulFunctionCall","src":"5959:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5951:4:29","nodeType":"YulIdentifier","src":"5951:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5993:9:29","nodeType":"YulIdentifier","src":"5993:9:29"},{"arguments":[{"name":"value0","nativeSrc":"6008:6:29","nodeType":"YulIdentifier","src":"6008:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6024:3:29","nodeType":"YulLiteral","src":"6024:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"6029:1:29","nodeType":"YulLiteral","src":"6029:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6020:3:29","nodeType":"YulIdentifier","src":"6020:3:29"},"nativeSrc":"6020:11:29","nodeType":"YulFunctionCall","src":"6020:11:29"},{"kind":"number","nativeSrc":"6033:1:29","nodeType":"YulLiteral","src":"6033:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6016:3:29","nodeType":"YulIdentifier","src":"6016:3:29"},"nativeSrc":"6016:19:29","nodeType":"YulFunctionCall","src":"6016:19:29"}],"functionName":{"name":"and","nativeSrc":"6004:3:29","nodeType":"YulIdentifier","src":"6004:3:29"},"nativeSrc":"6004:32:29","nodeType":"YulFunctionCall","src":"6004:32:29"}],"functionName":{"name":"mstore","nativeSrc":"5986:6:29","nodeType":"YulIdentifier","src":"5986:6:29"},"nativeSrc":"5986:51:29","nodeType":"YulFunctionCall","src":"5986:51:29"},"nativeSrc":"5986:51:29","nodeType":"YulExpressionStatement","src":"5986:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6057:9:29","nodeType":"YulIdentifier","src":"6057:9:29"},{"kind":"number","nativeSrc":"6068:2:29","nodeType":"YulLiteral","src":"6068:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6053:3:29","nodeType":"YulIdentifier","src":"6053:3:29"},"nativeSrc":"6053:18:29","nodeType":"YulFunctionCall","src":"6053:18:29"},{"name":"value1","nativeSrc":"6073:6:29","nodeType":"YulIdentifier","src":"6073:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6046:6:29","nodeType":"YulIdentifier","src":"6046:6:29"},"nativeSrc":"6046:34:29","nodeType":"YulFunctionCall","src":"6046:34:29"},"nativeSrc":"6046:34:29","nodeType":"YulExpressionStatement","src":"6046:34:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"5812:274:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5902:9:29","nodeType":"YulTypedName","src":"5902:9:29","type":""},{"name":"value1","nativeSrc":"5913:6:29","nodeType":"YulTypedName","src":"5913:6:29","type":""},{"name":"value0","nativeSrc":"5921:6:29","nodeType":"YulTypedName","src":"5921:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5932:4:29","nodeType":"YulTypedName","src":"5932:4:29","type":""}],"src":"5812:274:29"},{"body":{"nativeSrc":"6123:95:29","nodeType":"YulBlock","src":"6123:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6140:1:29","nodeType":"YulLiteral","src":"6140:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6147:3:29","nodeType":"YulLiteral","src":"6147:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"6152:10:29","nodeType":"YulLiteral","src":"6152:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6143:3:29","nodeType":"YulIdentifier","src":"6143:3:29"},"nativeSrc":"6143:20:29","nodeType":"YulFunctionCall","src":"6143:20:29"}],"functionName":{"name":"mstore","nativeSrc":"6133:6:29","nodeType":"YulIdentifier","src":"6133:6:29"},"nativeSrc":"6133:31:29","nodeType":"YulFunctionCall","src":"6133:31:29"},"nativeSrc":"6133:31:29","nodeType":"YulExpressionStatement","src":"6133:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6180:1:29","nodeType":"YulLiteral","src":"6180:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"6183:4:29","nodeType":"YulLiteral","src":"6183:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"6173:6:29","nodeType":"YulIdentifier","src":"6173:6:29"},"nativeSrc":"6173:15:29","nodeType":"YulFunctionCall","src":"6173:15:29"},"nativeSrc":"6173:15:29","nodeType":"YulExpressionStatement","src":"6173:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6204:1:29","nodeType":"YulLiteral","src":"6204:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6207:4:29","nodeType":"YulLiteral","src":"6207:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6197:6:29","nodeType":"YulIdentifier","src":"6197:6:29"},"nativeSrc":"6197:15:29","nodeType":"YulFunctionCall","src":"6197:15:29"},"nativeSrc":"6197:15:29","nodeType":"YulExpressionStatement","src":"6197:15:29"}]},"name":"panic_error_0x21","nativeSrc":"6091:127:29","nodeType":"YulFunctionDefinition","src":"6091:127:29"},{"body":{"nativeSrc":"6404:217:29","nodeType":"YulBlock","src":"6404:217:29","statements":[{"nativeSrc":"6414:27:29","nodeType":"YulAssignment","src":"6414:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6426:9:29","nodeType":"YulIdentifier","src":"6426:9:29"},{"kind":"number","nativeSrc":"6437:3:29","nodeType":"YulLiteral","src":"6437:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6422:3:29","nodeType":"YulIdentifier","src":"6422:3:29"},"nativeSrc":"6422:19:29","nodeType":"YulFunctionCall","src":"6422:19:29"},"variableNames":[{"name":"tail","nativeSrc":"6414:4:29","nodeType":"YulIdentifier","src":"6414:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6457:9:29","nodeType":"YulIdentifier","src":"6457:9:29"},{"name":"value0","nativeSrc":"6468:6:29","nodeType":"YulIdentifier","src":"6468:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6450:6:29","nodeType":"YulIdentifier","src":"6450:6:29"},"nativeSrc":"6450:25:29","nodeType":"YulFunctionCall","src":"6450:25:29"},"nativeSrc":"6450:25:29","nodeType":"YulExpressionStatement","src":"6450:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6495:9:29","nodeType":"YulIdentifier","src":"6495:9:29"},{"kind":"number","nativeSrc":"6506:2:29","nodeType":"YulLiteral","src":"6506:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6491:3:29","nodeType":"YulIdentifier","src":"6491:3:29"},"nativeSrc":"6491:18:29","nodeType":"YulFunctionCall","src":"6491:18:29"},{"arguments":[{"name":"value1","nativeSrc":"6515:6:29","nodeType":"YulIdentifier","src":"6515:6:29"},{"kind":"number","nativeSrc":"6523:4:29","nodeType":"YulLiteral","src":"6523:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6511:3:29","nodeType":"YulIdentifier","src":"6511:3:29"},"nativeSrc":"6511:17:29","nodeType":"YulFunctionCall","src":"6511:17:29"}],"functionName":{"name":"mstore","nativeSrc":"6484:6:29","nodeType":"YulIdentifier","src":"6484:6:29"},"nativeSrc":"6484:45:29","nodeType":"YulFunctionCall","src":"6484:45:29"},"nativeSrc":"6484:45:29","nodeType":"YulExpressionStatement","src":"6484:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6549:9:29","nodeType":"YulIdentifier","src":"6549:9:29"},{"kind":"number","nativeSrc":"6560:2:29","nodeType":"YulLiteral","src":"6560:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6545:3:29","nodeType":"YulIdentifier","src":"6545:3:29"},"nativeSrc":"6545:18:29","nodeType":"YulFunctionCall","src":"6545:18:29"},{"name":"value2","nativeSrc":"6565:6:29","nodeType":"YulIdentifier","src":"6565:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6538:6:29","nodeType":"YulIdentifier","src":"6538:6:29"},"nativeSrc":"6538:34:29","nodeType":"YulFunctionCall","src":"6538:34:29"},"nativeSrc":"6538:34:29","nodeType":"YulExpressionStatement","src":"6538:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6592:9:29","nodeType":"YulIdentifier","src":"6592:9:29"},{"kind":"number","nativeSrc":"6603:2:29","nodeType":"YulLiteral","src":"6603:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6588:3:29","nodeType":"YulIdentifier","src":"6588:3:29"},"nativeSrc":"6588:18:29","nodeType":"YulFunctionCall","src":"6588:18:29"},{"name":"value3","nativeSrc":"6608:6:29","nodeType":"YulIdentifier","src":"6608:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6581:6:29","nodeType":"YulIdentifier","src":"6581:6:29"},"nativeSrc":"6581:34:29","nodeType":"YulFunctionCall","src":"6581:34:29"},"nativeSrc":"6581:34:29","nodeType":"YulExpressionStatement","src":"6581:34:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"6223:398:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6349:9:29","nodeType":"YulTypedName","src":"6349:9:29","type":""},{"name":"value3","nativeSrc":"6360:6:29","nodeType":"YulTypedName","src":"6360:6:29","type":""},{"name":"value2","nativeSrc":"6368:6:29","nodeType":"YulTypedName","src":"6368:6:29","type":""},{"name":"value1","nativeSrc":"6376:6:29","nodeType":"YulTypedName","src":"6376:6:29","type":""},{"name":"value0","nativeSrc":"6384:6:29","nodeType":"YulTypedName","src":"6384:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6395:4:29","nodeType":"YulTypedName","src":"6395:4:29","type":""}],"src":"6223:398:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), value2)\n        mstore(add(pos, 72), value3)\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), value1)\n        calldatacopy(add(headStart, 96), value0, value1)\n        mstore(add(add(headStart, value1), 96), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), iszero(iszero(value2)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3D7301 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA7ECD37E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xB58AD07F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xCD5AD4C5 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xD828435D EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8AC6533 EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C3D7301 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x9333FBDA EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x323F24AB EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3408E470 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x44205899 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x182 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x368 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x386 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x6337ED398C0E8467698C581374FDCE4DB14922DF487B5A39483079F5F59B60A4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447 PUSH2 0xB27 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x48C JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x4E2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x4EA PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x4F5 PUSH1 0x0 DUP10 PUSH2 0xB5A JUMP JUMPDEST POP PUSH2 0x50E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0xB5A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x2 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x575 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0xBFF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP10 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x48 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x68 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0xA8 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x682 DUP3 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C6 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xC29 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND EQ SWAP1 PUSH32 0x913CFE5A6BB4486C7CCA917D162D4D03F1B72EFE6D62D10003D8DCEBFE5DB92C SWAP1 PUSH2 0x70F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x769 SWAP1 DUP5 SWAP1 PUSH2 0x1150 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0x2F6639D24651730C7BF57C95DDBF96D66D11477E4EC626876F92C22E5F365E68 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x844 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x854 DUP3 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x867 DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A0 DUP3 DUP3 PUSH2 0xC53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x20916607 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB5EBA9F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x904 PUSH1 0x0 CALLER PUSH2 0xB5A JUMP JUMPDEST POP PUSH2 0x91D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xB5A JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x54E4612788F90384E6843298D7854436F3A585B2C3831AB66ABF1DE63BFA6C2D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9AB DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND SUB PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5553331329228FBD4123164423717A4A7539F6DFA1C3279A923B98FD681A6C73 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA63 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB5EBA9F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCC480C920B59003BE60D60BB7B685B220D313037231045FBEA988D33938D867 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xB07 DUP3 PUSH2 0x57F JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x867 DUP4 DUP4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xB24 DUP2 CALLER PUSH2 0xCCF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x368 JUMP JUMPDEST PUSH2 0xB58 PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB75 DUP5 DUP5 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBAB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xC39 DUP7 DUP7 PUSH2 0xD36 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xC49 DUP3 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1188 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC6E DUP5 DUP5 PUSH2 0x95B JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x368 JUMP JUMPDEST PUSH2 0xCD9 DUP3 DUP3 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD19 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xD70 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xD62 DUP9 DUP3 DUP6 DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD7C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD97 JUMPI PUSH2 0xD97 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xDA0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB4 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDE6 JUMPI PUSH2 0xDE6 PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1B PUSH2 0x1171 JUMP JUMPDEST SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 PUSH2 0xB27 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF11 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8E DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP5 PUSH2 0xF56 JUMP JUMPDEST SWAP3 POP PUSH2 0xFC8 PUSH1 0x20 DUP6 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1012 DUP7 PUSH2 0xF56 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x10A8 PUSH1 0x20 DUP5 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10CD DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A8 PUSH1 0x20 DUP5 ADD PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4F DUP3 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x368 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MUL 0xDD PUSH28 0xC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B6268 STOP LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212203AB1F63AE2BCE39F712823CA 0x25 SIGNEXTEND SMOD DUP16 0xAE 0xEE DUP8 DUP16 0xB7 0xC2 SWAP3 0xCF SWAP10 0x28 ADD SWAP13 PUSH16 0x55FA4964736F6C634300081600330000 ","sourceMap":"471:4534:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:29;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;3121:201:28;;;;;;:::i;:::-;;:::i;:::-;;1771:274;;;;;;:::i;:::-;;:::i;4759:191:0:-;;;;;;:::i;:::-;;:::i;:::-;;;1598:25:29;;;1586:2;1571:18;4759:191:0;1452:177:29;3517:1066:28;;;;;;:::i;:::-;;:::i;5246:136:0:-;;;;;;:::i;:::-;;:::i;656:27:28:-;;;;;-1:-1:-1;;;;;656:27:28;;;;;;-1:-1:-1;;;;;2864:32:29;;;2846:51;;2834:2;2819:18;656:27:28;2700:203:29;4918:85:28;4989:7;;4918:85;;6348:245:0;;;;;;:::i;:::-;;:::i;4780:95:28:-;4856:12;;-1:-1:-1;;;;;4856:12:28;4780:95;;589:60;;-1:-1:-1;;;;;;;;;;;589:60:28;;2690:382;;;:::i;3732:207:0:-;;;;;;:::i;:::-;;:::i;845:61:28:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;689:22;;;;;;2317:49:0;;2362:4;2317:49;;2051:284:28;;;;;;:::i;:::-;;:::i;4633:99::-;4711:14;;-1:-1:-1;;;;;4711:14:28;4633:99;;2404:280;;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;:::i;:::-;;:::i;3391:120:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3485:12:28;;;3459:7;3485:12;;;:6;:12;;;;;;;;:19;;;;;;;;;;;;;3391:120;717:29;;;;;-1:-1:-1;;;;;717:29:28;;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1134:40:6;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;3121:201:28:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;3216:42:28::1;::::0;-1:-1:-1;;;3216:42:28;;3239:10:::1;3216:42;::::0;::::1;3720:51:29::0;3787:18;;;3780:34;;;-1:-1:-1;;;;;3216:22:28;::::1;::::0;::::1;::::0;3693:18:29;;3216:42:28::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3273:42:28::1;::::0;1598:25:29;;;-1:-1:-1;;;;;3273:42:28;::::1;::::0;3289:10:::1;::::0;3273:42:::1;::::0;1586:2:29;1571:18;3273:42:28::1;;;;;;;3121:201:::0;;;:::o;1771:274::-;4158:30:2;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:2;-1:-1:-1;;;4302:15:2;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:2;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:2;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:2;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:2;-1:-1:-1;;;5011:22:2;;;4977:67;1871:22:28::1;:20;:22::i;:::-;1903:37;2362:4:0;1934:5:28::0;1903:10:::1;:37::i;:::-;;1950:29;-1:-1:-1::0;;;;;;;;;;;1973:5:28::1;1950:10;:29::i;:::-;-1:-1:-1::0;1989:12:28::1;:21:::0;;-1:-1:-1;;;;;;1989:21:28::1;-1:-1:-1::0;;;;;1989:21:28;::::1;;::::0;;2020:7:::1;:18:::0;;;5064:101:2;;;;5098:23;;-1:-1:-1;;;;5098:23:2;;;5140:14;;-1:-1:-1;4260:50:29;;5140:14:2;;4248:2:29;4233:18;5140:14:2;;;;;;;5064:101;4092:1079;;;;;1771:274:28;;;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;3517:1066:28:-;2500:21:15;:19;:21::i;:::-;966:10:4;3758:20:28::1;::::0;;;:6:::1;:20;::::0;;;;;;;-1:-1:-1;;;;;3758:27:28;::::1;::::0;;;;;;;;3749:36;::::1;3745:63;;3794:14;;-1:-1:-1::0;;;3794:14:28::1;;;;;;;;;;;3745:63;3881:12;966:10:4::0;3959:7:28::1;::::0;3906:61:::1;::::0;-1:-1:-1;;4632:2:29;4628:15;;;4624:24;;3906:61:28::1;::::0;::::1;4612:37:29::0;4683:15;;;;4679:24;;;4665:12;;;4658:46;4720:12;;;4713:28;;;4757:12;;;4750:28;;;4794:13;;;4787:29;4832:13;;3906:61:28::1;;;;;;;;;;;;3896:72;;;;;;3881:87;;3978:19;4000:45;4040:4;1401:34:20::0;1323:14;1388:48;;;1497:4;1490:25;;;;1595:4;1579:21;;;1247:433;4000:45:28::1;3978:67;;4055:17;4075:37;4089:11;4102:9;;4075:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4075:13:28::1;::::0;-1:-1:-1;;;4075:37:28:i:1;:::-;4209:12;::::0;4236:37:::1;::::0;4055:57;;-1:-1:-1;;;;;;4196:25:28;;::::1;4209:12:::0;::::1;4196:25;::::0;4236:37:::1;::::0;::::1;::::0;4254:9;;;;4196:25;;4236:37:::1;:::i;:::-;;;;;;;;4297:7;4292:39;;4313:18;;-1:-1:-1::0;;;4313:18:28::1;;;;;;;;;;;4292:39;966:10:4::0;4393:20:28::1;::::0;;;:6:::1;:20;::::0;;;;;;;-1:-1:-1;;;;;4393:27:28;::::1;::::0;;;;;;;:32;;4424:1:::1;::::0;4393:20;:32:::1;::::0;4424:1;;4393:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4474:22:28;::::1;;966:10:4::0;4474:44:28::1;::::0;-1:-1:-1;;;;;;4474:44:28::1;::::0;;;;;;-1:-1:-1;;;;;3738:32:29;;;4474:44:28::1;::::0;::::1;3720:51:29::0;3787:18;;;3780:34;;;3693:18;;4474:44:28::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4533:43:28::1;::::0;;5733:25:29;;;5789:2;5774:18;;5767:34;;;-1:-1:-1;;;;;4533:43:28;::::1;::::0;966:10:4;;4533:43:28::1;::::0;5706:18:29;4533:43:28::1;;;;;;;3663:920;;;;2542:20:15::0;1857:1;3068:7;:21;2888:208;2542:20;3517:1066:28;;;;;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:4;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;2690:382:28:-;2740:14;;-1:-1:-1;;;;;2740:14:28;2736:59;;2777:18;;-1:-1:-1;;;2777:18:28;;;;;;;;;;;2736:59;2823:14;;-1:-1:-1;;;;;2823:14:28;2809:10;:28;2805:55;;2846:14;;-1:-1:-1;;;2846:14:28;;;;;;;;;;;2805:55;2879:42;2362:4:0;2910:10:28;2879;:42::i;:::-;;2931:34;-1:-1:-1;;;;;;;;;;;2954:10:28;2931;:34::i;:::-;-1:-1:-1;2990:14:28;:27;;-1:-1:-1;;;;;;2990:27:28;;;3041:24;;3054:10;;3041:24;;3015:1;;3041:24;2690:382::o;3732:207:0:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;2051:284:28:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;2136:23:28;::::1;2132:51;;2168:15;;-1:-1:-1::0;;;2168:15:28::1;;;;;;;;;;;2132:51;2197:12;::::0;-1:-1:-1;;;;;2197:25:28;;::::1;:12:::0;::::1;:25:::0;2193:53:::1;;2231:15;;-1:-1:-1::0;;;2231:15:28::1;;;;;;;;;;;2193:53;2265:12;:24:::0;;-1:-1:-1;;;;;;2265:24:28::1;-1:-1:-1::0;;;;;2265:24:28;::::1;::::0;;::::1;::::0;;;2304::::1;::::0;::::1;::::0;-1:-1:-1;;2304:24:28::1;2051:284:::0;;:::o;2404:280::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;2489:22:28;::::1;2485:49;;2520:14;;-1:-1:-1::0;;;2520:14:28::1;;;;;;;;;;;2485:49;2560:10;-1:-1:-1::0;;;;;2548:22:28;::::1;::::0;2544:50:::1;;2579:15;;-1:-1:-1::0;;;2579:15:28::1;;;;;;;;;;;2544:50;2613:14;:25:::0;;-1:-1:-1;;;;;;2613:25:28::1;-1:-1:-1::0;;;;;2613:25:28;::::1;::::0;;::::1;::::0;;;2653:24:::1;::::0;::::1;::::0;-1:-1:-1;;2653:24:28::1;2404:280:::0;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4148:103::-:0;4214:30;4225:4;966:10:4;4214::0;:30::i;:::-;4148:103;:::o;9071:205:2:-;9129:30;;3147:66;9186:27;8819:122;3231:65:0;6929:20:2;:18;:20::i;:::-;3231:65:0:o;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:4;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;2575:307:15;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:15;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;3714:255:19:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:19;;3714:255;-1:-1:-1;;;;3714:255:19:o;7894:388:0:-;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:0;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:0;;;;;;;;;;:39;;-1:-1:-1;;8099:39:0;;;8157:40;966:10:4;;8099:14:0;;8157:40;;8133:5;8157:40;8218:4;8211:11;;;;;4381:197;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;3738:32:29;;4514:47:0;;;3720:51:29;3787:18;;;3780:34;;;3693:18;;4514:47:0;;;;;;;;4464:108;4381:197;;:::o;7082:141:2:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:2;;;;;;;;;;;2129:778:19;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:19;;2823:1;;-1:-1:-1;2827:35:19;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:19;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:19;;;;;1598:25:29;;;1571:18;;7634:46:19;1452:177:29;7563:243:19;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:19;;;;;1598:25:29;;;1571:18;;7763:32:19;1452:177:29;8485:120:2;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:2;;;;;;-1:-1:-1;8485:120:2:o;5203:1551:19:-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:19;;-1:-1:-1;6385:30:19;;-1:-1:-1;6417:1:19;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;6450:25:29;;;6523:4;6511:17;;6491:18;;;6484:45;;;;6545:18;;;6538:34;;;6588:18;;;6581:34;;;6541:24:19;;6422:19:29;;6541:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:19;;-1:-1:-1;;6541:24:19;;;-1:-1:-1;;;;;;;6579:20:19;;6575:113;;-1:-1:-1;6631:1:19;;-1:-1:-1;6635:29:19;;-1:-1:-1;6631:1:19;;-1:-1:-1;6615:62:19;;6575:113;6706:6;-1:-1:-1;6714:20:19;;-1:-1:-1;6714:20:19;;-1:-1:-1;5203:1551:19;;;;;;;;;:::o;14:286:29:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:29;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:29:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:29;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:254::-;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;843:29;862:9;843:29;:::i;:::-;833:39;919:2;904:18;;;;891:32;;-1:-1:-1;;;675:254:29:o;934:328::-;1011:6;1019;1027;1080:2;1068:9;1059:7;1055:23;1051:32;1048:52;;;1096:1;1093;1086:12;1048:52;1119:29;1138:9;1119:29;:::i;:::-;1109:39;;1167:38;1201:2;1190:9;1186:18;1167:38;:::i;:::-;1157:48;;1252:2;1241:9;1237:18;1224:32;1214:42;;934:328;;;;;:::o;1267:180::-;1326:6;1379:2;1367:9;1358:7;1354:23;1350:32;1347:52;;;1395:1;1392;1385:12;1347:52;-1:-1:-1;1418:23:29;;1267:180;-1:-1:-1;1267:180:29:o;1634:802::-;1731:6;1739;1747;1755;1763;1816:3;1804:9;1795:7;1791:23;1787:33;1784:53;;;1833:1;1830;1823:12;1784:53;1856:29;1875:9;1856:29;:::i;:::-;1846:39;;1932:2;1921:9;1917:18;1904:32;1894:42;;1983:2;1972:9;1968:18;1955:32;1945:42;;2038:2;2027:9;2023:18;2010:32;2061:18;2102:2;2094:6;2091:14;2088:34;;;2118:1;2115;2108:12;2088:34;2156:6;2145:9;2141:22;2131:32;;2201:7;2194:4;2190:2;2186:13;2182:27;2172:55;;2223:1;2220;2213:12;2172:55;2263:2;2250:16;2289:2;2281:6;2278:14;2275:34;;;2305:1;2302;2295:12;2275:34;2350:7;2345:2;2336:6;2332:2;2328:15;2324:24;2321:37;2318:57;;;2371:1;2368;2361:12;2318:57;1634:802;;;;-1:-1:-1;1634:802:29;;-1:-1:-1;2402:2:29;2394:11;;2424:6;1634:802;-1:-1:-1;;;1634:802:29:o;2441:254::-;2509:6;2517;2570:2;2558:9;2549:7;2545:23;2541:32;2538:52;;;2586:1;2583;2576:12;2538:52;2622:9;2609:23;2599:33;;2651:38;2685:2;2674:9;2670:18;2651:38;:::i;:::-;2641:48;;2441:254;;;;;:::o;3090:260::-;3158:6;3166;3219:2;3207:9;3198:7;3194:23;3190:32;3187:52;;;3235:1;3232;3225:12;3187:52;3258:29;3277:9;3258:29;:::i;:::-;3248:39;;3306:38;3340:2;3329:9;3325:18;3306:38;:::i;3355:186::-;3414:6;3467:2;3455:9;3446:7;3442:23;3438:32;3435:52;;;3483:1;3480;3473:12;3435:52;3506:29;3525:9;3506:29;:::i;3825:277::-;3892:6;3945:2;3933:9;3924:7;3920:23;3916:32;3913:52;;;3961:1;3958;3951:12;3913:52;3993:9;3987:16;4046:5;4039:13;4032:21;4025:5;4022:32;4012:60;;4068:1;4065;4058:12;4856:471;5035:2;5024:9;5017:21;5074:6;5069:2;5058:9;5054:18;5047:34;5131:6;5123;5118:2;5107:9;5103:18;5090:48;5187:1;5182:2;5158:22;;;5154:31;;5147:42;;;;5305:14;;5298:22;5291:4;5276:20;;5269:52;5250:2;5229:15;;;-1:-1:-1;;5225:29:29;5210:45;;;5206:54;;;-1:-1:-1;4856:471:29:o;5332:222::-;5397:9;;;5418:10;;;5415:133;;;5470:10;5465:3;5461:20;5458:1;5451:31;5505:4;5502:1;5495:15;5533:4;5530:1;5523:15;6091:127;6152:10;6147:3;6143:20;6140:1;6133:31;6183:4;6180:1;6173:15;6207:4;6204:1;6197:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","acceptAdminRole()":"8c3d7301","chainId()":"9a8a0592","claim(address,uint256,uint256,bytes)":"2ada8a32","getChainId()":"3408e470","getNominatedAdmin()":"b58ad07f","getNonce(address,address)":"d828435d","getRewardSigner()":"44205899","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,uint256)":"1794bb3c","nominateAdmin(address)":"cd5ad4c5","nominatedAdmin()":"e8ac6533","nonces(address,address)":"9333fbda","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","rewardSigner()":"323f24ab","supportsInterface(bytes4)":"01ffc9a7","updateSigner(address)":"a7ecd37e","withdrawTokens(address,uint256)":"06b091f9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoNominatedAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominatedAdmin\",\"type\":\"address\"}],\"name\":\"AdminNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"SignatureVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"SignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNominatedAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"nominateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"updateSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rkgen_airdrop.sol\":\"RKGENAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/rkgen_airdrop.sol\":{\"keccak256\":\"0xc305977d2e54adbfb91b66ff1f3a83ea0b5dcb8f6df4440158239b41548ea945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f62504289c70592deb5c4f7327682044b6c3ae3b423024bb10480322a3f593c\",\"dweb:/ipfs/QmX6qZR3nNeUMQH6NsMZsiRUuoevWtWSNdpusur1Qopixo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3009,"contract":"contracts/rkgen_airdrop.sol:RKGENAirdrop","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":10496,"contract":"contracts/rkgen_airdrop.sol:RKGENAirdrop","label":"rewardSigner","offset":0,"slot":"1","type":"t_address"},{"astId":10498,"contract":"contracts/rkgen_airdrop.sol:RKGENAirdrop","label":"chainId","offset":0,"slot":"2","type":"t_uint256"},{"astId":10500,"contract":"contracts/rkgen_airdrop.sol:RKGENAirdrop","label":"nominatedAdmin","offset":0,"slot":"3","type":"t_address"},{"astId":10506,"contract":"contracts/rkgen_airdrop.sol:RKGENAirdrop","label":"nonces","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}